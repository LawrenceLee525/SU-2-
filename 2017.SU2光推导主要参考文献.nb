(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    854124,      16239]
NotebookOptionsPosition[    819420,      15612]
NotebookOutlinePosition[    834900,      15933]
CellTagsIndexPosition[    834819,      15928]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6711d535-7ac6-4958-a16a-4f414e8a3e5e"],

Cell["\:5bf9\:79f0\:7834\:7f3a\:5bfc\:81f4\:7684\:3001\:5e26\:6709SU(2)\:8026\
\:5408\:632f\:5b50\:62d3\:6251\:66f2\:7ebf\:7684\:51e0\:4f55\:9762", "Title",
 CellChangeTimes->{{3.813136095338419*^9, 3.8131361006138287`*^9}, 
   3.8132051257865686`*^9, {3.8132141152138863`*^9, 3.8132141185486803`*^9}, {
   3.813270050770526*^9, 3.813270067244646*^9}, {3.8133103036300755`*^9, 
   3.8133103098732204`*^9}, 3.8133106348492947`*^9, 3.813482195070764*^9, 
   3.8135836934642453`*^9},
 TextAlignment->Center,ExpressionUUID->"8e22b3fe-7088-45d5-9247-dfd0029c8f55"],

Cell["Lawrence Lee", "Author",
 CellChangeTimes->{{3.813136123485938*^9, 3.813136128076621*^9}, {
  3.8133107908194036`*^9, 3.813310822819606*^9}},
 TextAlignment->Center,ExpressionUUID->"d3310335-3579-42eb-9536-ceba96f01c80"],

Cell["\:5317\:4eac\:7406\:5de5\:5927\:5b66", "Department",
 CellChangeTimes->{{3.813136142686288*^9, 3.8131361488611517`*^9}},
 TextAlignment->Center,ExpressionUUID->"4d0b837e-0018-4bef-af16-ac2d611e6121"],

Cell["2020.10.31", "Date",
 CellChangeTimes->{{3.8131381622331753`*^9, 3.8131381662024126`*^9}},
 TextAlignment->Center,ExpressionUUID->"b159d157-e00f-4df9-8940-44ea54e7c182"],

Cell["\<\
\:57283D\:6a2a\:5bf9\:79f0\:8c10\:632f\:5b50\:ff0c\:91cf\:5b50\:80fd\:8c31\
\:4e2d\:6709\:8840\:591a\:7b80\:5e76\:548c\:95f4\:9699\:ff0c\:5176\:662f\:6a2a\
\:7eb5\:9891\:7387\:6bd4\:7684\:51fd\:6570\:3002\:5f53SU(2)\:4f5c\:7528\:7834\
\:574f\:539f\:7b80\:5e76\:6001\:65f6\:ff0c\:539f\:7b80\:5e76\:6001\:5468\:56f4\
\:4ea7\:751f\:8bb8\:591a\:65b0\:7684\:7b80\:5e76\:6001\:548c\:80fd\:9699\:ff0c\
\:4ee5\:5f62\:6210\:76f8\:4f3c\:7684\:7cbe\:7ec6\:80fd\:8c31\:3002\:5728\:6240\
\:51fa\:73b0\:7684\:7b80\:5e76\:6001\:4e2d\:ff0c\:8f68\:9053\:4f4d\:4e8e3D\
\:53c2\:6570\:9762\:4e0a\:ff0c\:8fd9\:4e9b\:53c2\:6570\:9762\:7531\:6a2a\:5411\
\:5c42\:6790\:9762\:4e0a\:7684\:62d3\:6251\:4e0d\:53d8\:66f2\:7ebf\:5f62\:6210\
\:3002\:7528\:91cf\:5b50\:76f8\:5e72\:6001\:7814\:7a76\:5bf9\:5e94\:53e4\:5178\
\:52a8\:529b\:5b66\:4e2d\:76843D\:51e0\:4f55\:9762\:7684\:6ce2\:52a8\:65b9\
\:7a0b\:3002\:7814\:7a76\:5728\:5c0f\:91cf\:5b50\:6570\:7684\:5b9a\:76f8\:5e72\
\:6001\:7684\:6ce2\:5f62\:7ed3\:6784\:ff0c\:53d1\:73b0\:5176\:6709\:4e0e\:7ecf\
\:5178\:8f68\:9053\:5bf9\:5e94\:7684\:7279\:6b8a\:6a21\:5f0f\:3002\
\>", "Abstract",
 CellChangeTimes->{{3.813136195744321*^9, 3.8131362126986413`*^9}, {
   3.813141163713688*^9, 3.8131411714368753`*^9}, {3.813205131167313*^9, 
   3.8132051555159245`*^9}, {3.8132141208031445`*^9, 3.813214129305785*^9}, {
   3.8132700703862476`*^9, 3.813270076918824*^9}, 3.8133106369673033`*^9, 
   3.813310826668501*^9, {3.8135837022522635`*^9, 3.813583995849172*^9}, {
   3.813584098616947*^9, 3.813584283633521*^9}},
 TextAlignment->Center,ExpressionUUID->"3720d925-35ad-4224-ab33-a0e3dc78ff75"],

Cell[BoxData["tomography"], "Input",
 CellChangeTimes->{{3.813583998462178*^9, 
  3.813584004034217*^9}},ExpressionUUID->"24513cd2-61a8-4695-a6b5-\
261be8d5d4b3"],

Cell["\:53ef\:80fd\:7528\:5230\:7684\:7a0b\:5e8f\:5305", "Item",
 CellChangeTimes->{{3.8132756310326543`*^9, 
  3.8132756361915693`*^9}},ExpressionUUID->"4ddeabfe-7450-4eda-a95e-\
e5fe3e9db514"],

Cell["\<\
<< MaTeX`;
<< Notation`;
<< MATLink`;
OpenMATLAB[];
<< GroupTheory`;
<< Quantum`Notation`;
SetQuantumAliases[];\
\>", "Program",
 CellChangeTimes->{{3.813213738804243*^9, 3.8132138257747684`*^9}, {
   3.8132138587761407`*^9, 3.8132138875480137`*^9}, 
   3.813275644443219*^9},ExpressionUUID->"42ed090d-4caf-4a5d-9111-\
d268c2a06553"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"3e8bca3b-5411-4731-9b92-f8fe1a75cf74"],

Cell[CellGroupData[{

Cell["\:4ecb\:7ecd", "Section",
 CellChangeTimes->{
  3.8135842932085505`*^9},ExpressionUUID->"9246f05b-2438-4bf4-9595-\
b69c247e238f"],

Cell["\<\
\:4e0e\:7ecf\:5178\:5468\:671f\:8f68\:9053\:76f8\:5173\:7684\:91cf\:5b50\:6ce2\
\:5305\:5df2\:88ab\:8bc1\:5b9e\:ff0c\:53ef\:7528\:4e8e\:89e3\:91ca\:539f\:5b50\
\:6838\:4e0e\:7ecf\:4e66\:4e1b\:4e2d\:7684\:970d\:5c14\:6548\:5e94\:ff0c\:4ecb\
\:89c2\:534a\:5bfc\:4f53\:7403\:7684\:7535\:5bfc\:7387\:6ce2\:52a8\:ff0c\:548c\
\:5149\:81f4\:8131\:79bb\:622a\:9762\:7684\:9707\:8361\:3002\:4e0e\:7ecf\:5178\
\:8f68\:9053\:76f8\:5173\:7684\:91cf\:5b50\:6001\:7684\:7406\:8bba\:7814\:7a76\
\:4e3b\:8981\:96c6\:4e2d\:57282D\:66f2\:9762\:4e0a\:3002\
\>", "Text",
 CellChangeTimes->{{3.813482874183324*^9, 3.813482875293586*^9}, {
  3.8135843090926113`*^9, 3.8135843604247856`*^9}, {3.813584397100873*^9, 
  3.8135844629180765`*^9}, {3.8135845267156367`*^9, 3.813584545464697*^9}, {
  3.8135845848648186`*^9, 3.8135846198599253`*^9}, {3.8135846554440346`*^9, 
  3.813584670610082*^9}},ExpressionUUID->"4080fc91-7f76-47e7-b442-\
85ebad27a700"],

Cell["\:6fc0\:5149\:ff1a\:5927\:83f2\:6570\:7403\:8154\:4e2d\:ff0c\:5c0f\:7684\
\:5bf9\:79f0\:6027\:7834\:7f3a\:53ef\:5bfc\:81f4\:9ad8\:9636\:6fc0\:5149\:6a21\
\:ff0c\:5f62\:62103D\:7ed3\:6784\:5149", "Text",
 CellChangeTimes->{{3.8135844717731237`*^9, 3.813584474700123*^9}, {
  3.813584554576723*^9, 3.813584564610755*^9}, {3.813584758048044*^9, 
  3.813584852030327*^9}, {3.8135854672835894`*^9, 
  3.813585483540618*^9}},ExpressionUUID->"5ff775c5-e0dc-4ef3-8bb0-\
ddc2f4277f78"],

Cell[BoxData[
 RowBox[{
  NamespaceBox["WolframAlphaQueryResults",
   DynamicModuleBox[{Typeset`q$$ = "Fresnel number", Typeset`opts$$ = {
    AppearanceElements -> {"Pods"}, IncludePods -> "Equation", 
     TimeConstraint -> {20, Automatic, Automatic, Automatic}}, 
    Typeset`elements$$ = {"Pods"}, Typeset`pod1$$ = XMLElement[
    "pod", {"title" -> "Equation", "scanner" -> "Formula", "id" -> "Equation",
       "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
      XMLElement["subpod", {"title" -> ""}, {
        XMLElement["microsources", {}, {"\n    ", 
          XMLElement["microsource", {}, {"FresnelNumberFormula"}], "\n   "}], 
        XMLElement[
        "minput", {}, {
         "Column[{FormulaData[\"FresnelNumber\"], FormulaData[\"FresnelNumber\
\", \"QuantityVariableTable\"]}]"}], 
        XMLElement["cell", {"compressed" -> False, "string" -> True}, {
          Cell[
           BoxData[
            FormBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    PaneBox[
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TagBox[
                    RowBox[{"F", "\[LongEqual]", 
                    FractionBox[
                    SuperscriptBox["a", "2"], 
                    RowBox[{"d", " ", "\[Lambda]"}]]}], HoldForm], 
                    PolynomialForm[#, TraditionalOrder -> False]& ]}, 
                    "RowDefault"], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}], 
                    BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], "\[SpanFromLeft]"}, {
                    TagBox[
                    PaneBox[
                    "F", BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    "\"Fresnel number\""}, {
                    TagBox[
                    PaneBox[
                    "a", BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], 
                    "\"characteristic size\""}, {
                    TagBox[
                    PaneBox[
                    "d", BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], "\"distance\""}, {
                    TagBox[
                    PaneBox[
                    "\[Lambda]", 
                    BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                    $CellContext`TagBoxWrapper["Label"]], "\"wavelength\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                    "ItemsIndexed" -> {{1, 1} -> {Left, Baseline}, {1, 2} -> {
                    Left, Baseline}}}, AutoDelete -> False, 
                    GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {None, None}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, FrameStyle -> 
                    GrayLevel[0.84], BaselinePosition -> Automatic, 
                    AllowScriptLevelChange -> False], "Grid"], 
                    LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"], TraditionalForm]], "Output", {
           Background -> None, 
            GraphicsBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
              DefaultAxesStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
                GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
                1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
              DefaultTicksStyle -> 
              Directive[
               FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
            Graphics3DBoxOptions -> {
             DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
           NumberPoint -> ".", CellSize -> {550, Automatic}, 
           AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
           RenderingOptions -> {
            "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
        XMLElement[
        "dataformats", {}, {
         "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
      XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
        XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
    Typeset`aux1$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
    Typeset`nonpods$$ = {
     XMLElement["assumptions", {"count" -> "5"}, {
       XMLElement[
       "assumption", {
        "type" -> "MultiClash", "word" -> "", "template" -> 
         "Assuming ${word1} is referring to ${desc1}. Use as ${desc2} \
instead. Use \"${word3}\" as ${desc3}. Use \"${word4}\" as ${desc4}.", 
         "count" -> "4"}, {
         XMLElement[
         "value", {
          "name" -> "Formula", "word" -> "the input", "desc" -> "a formula", 
           "input" -> "*MC.%7E-_*Formula-"}, {}], 
         XMLElement[
         "value", {
          "name" -> "PhysicalQuantity", "word" -> "the input", "desc" -> 
           "a physical quantity", "input" -> 
           "*MC.%7E-_*PhysicalQuantity-"}, {}], 
         XMLElement[
         "value", {
          "name" -> "EnglishWord", "word" -> "number", "desc" -> "a word", 
           "input" -> "*MC.%7E-_*EnglishWord-"}, {}], 
         XMLElement[
         "value", {
          "name" -> "GlacierProperty", "word" -> "number", "desc" -> 
           " referring to glaciers", "input" -> 
           "*MC.%7E-_*GlacierProperty-"}, {}]}], 
       XMLElement[
       "assumption", {
        "type" -> "FormulaSolve", "template" -> "Calculate ${desc1}", "count" -> 
         "4"}, {
         XMLElement[
         "value", {
          "name" -> "FresnelNumber.F", "desc" -> "Fresnel number", "input" -> 
           "*FS-_**FresnelNumber.F--"}, {}], 
         XMLElement[
         "value", {
          "name" -> "FresnelNumber.a", "desc" -> "characteristic size", 
           "input" -> "*FS-_**FresnelNumber.a--"}, {}], 
         XMLElement[
         "value", {
          "name" -> "FresnelNumber.l", "desc" -> "l", "input" -> 
           "*FS-_**FresnelNumber.l--"}, {}], 
         XMLElement[
         "value", {
          "name" -> "FresnelNumber.lambda", "desc" -> "wavelength", "input" -> 
           "*FS-_**FresnelNumber.lambda--"}, {}]}], 
       XMLElement[
       "assumption", {
        "type" -> "FormulaVariable", "desc" -> "characteristic size", 
         "current" -> "1", "count" -> "1"}, {
         XMLElement[
         "value", {
          "name" -> "FresnelNumber.a", "desc" -> "2 mm", "valid" -> "true", 
           "input" -> "*F.FresnelNumber.a-_2+mm"}, {}]}], 
       XMLElement[
       "assumption", {
        "type" -> "FormulaVariable", "desc" -> "distance", "current" -> "1", 
         "count" -> "1"}, {
         XMLElement[
         "value", {
          "name" -> "FresnelNumber.d", "desc" -> "1 m", "valid" -> "true", 
           "input" -> "*F.FresnelNumber.d-_1+m"}, {}]}], 
       XMLElement[
       "assumption", {
        "type" -> "FormulaVariable", "desc" -> "wavelength", "current" -> "1",
          "count" -> "1"}, {
         XMLElement[
         "value", {
          "name" -> "FresnelNumber.lambda", "desc" -> "600 nm", "valid" -> 
           "true", "input" -> "*F.FresnelNumber.lambda-_600+nm"}, {}]}]}], 
     XMLElement["sources", {"count" -> "1"}, {
       XMLElement[
       "source", {
        "url" -> 
         "https://www5a.wolframalpha.com/sources/\
FresnelNumberFormulaSourceInformationNotes.html", "text" -> 
         "Fresnel number formula"}, {}]}]}, Typeset`initdone$$ = 
    FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
    "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
     "Formula", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.644", 
     "parsetiming" -> "0.417", "parsetimedout" -> "false", "recalculate" -> 
     "", "id" -> "MSP21221g2fca7dee8ea7540000171227ga10bf328f", "host" -> 
     "https://www5a.wolframalpha.com", "server" -> "50", "related" -> 
     "https://www5a.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa21231g2fca7dee8ea75400000ceh1h3c7d6d7f142678292769077595422", "version" -> 
     "2.6"}, Typeset`sessioninfo$$ = {
    "TimeZone" -> 8., 
     "Date" -> {2020, 11, 6, 1, 9, 30.829695`9.241544135580773}, "Line" -> 37,
      "SessionID" -> 20456840176032030884}, Typeset`showpods$$ = {1}, 
    Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
    Typeset`newq$$ = "Fresnel number"}, 
    DynamicBox[ToBoxes[
      AlphaIntegration`FormatAlphaResults[
       Dynamic[{
        1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
         Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
         Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
         Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
      StandardForm],
     ImageSizeCache->{1076., {57.92857142857143, 63.07142857142857}},
     TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
    DynamicModuleValues:>{},
    Initialization:>If[
      And[
       Not[Typeset`initdone$$ === True], 
       Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
      Null; WolframAlphaClient`Private`doAsyncUpdates[
        Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
        Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
      Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
    SynchronousInitialization->False],
   BaseStyle->{Deployed -> True},
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True], Cell[
  "\[Placeholder]",ExpressionUUID->
   "b4a82c1c-7676-4c9c-9df2-e45916a5807d"]}]], "Text",
 CellChangeTimes->{{3.8135849911097593`*^9, 
  3.8135850008138084`*^9}},ExpressionUUID->"372df19a-d9b9-4b86-9abd-\
8eb63966285e"],

Cell[BoxData[
 RowBox[{"<<", "Notation`"}]], "Input",
 CellChangeTimes->{{3.8135853404601955`*^9, 3.8135853455132017`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"1ae30b46-f4bb-4e89-9528-13a85d81e6b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Notation", "[", 
  RowBox[{
   TemplateBox[{"F"},
    "NotationTemplateTag"], " ", "\[DoubleLongLeftRightArrow]", " ", 
   TemplateBox[{
     FractionBox[
      SuperscriptBox["a", "2"], 
      RowBox[{"d", "*", "\[Lambda]"}]]},
    "NotationTemplateTag"]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "2000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", "0.6"}], 
  ";"}], "\[IndentingNewLine]", "F"}], "Input",
 CellChangeTimes->{{3.813585354915219*^9, 3.8135854018473644`*^9}, 
   3.813585432221469*^9},
 CellLabel->
  "In[108]:=",ExpressionUUID->"83fd4e78-dc75-453f-b57a-1fb142fe849e"],

Cell[BoxData["6.666666666666667`"], "Output",
 CellChangeTimes->{{3.813585374184289*^9, 3.8135854025233684`*^9}, {
  3.8135854332844625`*^9, 3.8135854421284885`*^9}},
 CellLabel->
  "Out[112]=",ExpressionUUID->"3397ddfc-553e-44a4-b7ce-456623b70c4e"]
}, Open  ]],

Cell["3D\:7ed3\:6784\:6fc0\:5149\:6a21\:5f0f\:7684\:6a2a\:5c42\:6790\:56fe\
\:96c6\:4e2d\:57282D\:674e\:8428\:5982\:8f68\:9053\:ff0c\:4f20\:64ad\:5f62\
\:62103D\:51e0\:4f55\:9762\:3002", "Text",
 CellChangeTimes->{{3.8135856206606417`*^9, 3.8135856452167177`*^9}, {
  3.813585680595827*^9, 
  3.8135857152189336`*^9}},ExpressionUUID->"86d71ee4-dd76-42f9-93f7-\
71e8fd537ec4"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Lissajous curve", Typeset`opts$$ = {
   AppearanceElements -> {"Pods"}, IncludePods -> "Equation", 
    PodStates -> {"Result__Show axes"}, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}}, 
   Typeset`elements$$ = {"Pods"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Equation", "scanner" -> "Formula", "id" -> "Equation", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    RowBox[{"x", "=", 
                    TemplateBox[{
                    SubscriptBox["A", "x"], 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    TemplateBox[{
                    SubscriptBox["\[Omega]", "x"], "t"}, "RowDefault"], "+", 
                    SubscriptBox["\[Delta]", "x"]}], ")"}]}, "RowDefault"]}], 
                    HoldForm], 
                    TagBox[
                    RowBox[{"y", "=", 
                    RowBox[{"sin", "(", "t", ")"}]}], HoldForm], 
                    RowBox[{"0", "\[LessEqual]", "t", "\[LessEqual]", 
                    RowBox[{"2", " ", "\[Pi]"}]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {False, {True}, False}, 
                    "Rows" -> {False, {True}, False}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], 
                    GrayLevel[0], StripOnInput -> False], 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\[SpanFromLeft]"}, {
                 TagBox[
                  PaneBox[
                   SubscriptBox["\[Omega]", "x"], 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 "\"horizontal angular frequency\""}, {
                 TagBox[
                  PaneBox[
                   SubscriptBox["\[Delta]", "x"], 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 "\"horizontal angular phase\""}, {
                 TagBox[
                  PaneBox[
                   SubscriptBox["A", "x"], 
                   BaseStyle -> {{
                    Alignment -> Left, BaselinePosition -> Baseline, 
                    FontColor -> GrayLevel[0.3]}, 
                    LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 "\"horizontal amplitude\""}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}, 
                 "ItemsIndexed" -> {{1, 1} -> {Left, Baseline}, {1, 2} -> {
                    Left, Baseline}}}, AutoDelete -> False, 
               GridBoxBackground -> {
                "Columns" -> {None, None}, "Rows" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Specific form", "input" -> 
         "Equation__Specific form"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "5"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "Lissajous curve", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "3"}, {
        XMLElement[
        "value", {
         "name" -> "Formula", "desc" -> "a formula", "input" -> 
          "*C.Lissajous+curve-_*Formula-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "*C.Lissajous+curve-_*MathWorld-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "PopularCurve", "desc" -> "a popular curve", "input" -> 
          "*C.Lissajous+curve-_*PopularCurve-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "horizontal angular frequency", 
        "current" -> "1", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "LissajousCurve.wx", "desc" -> "3", "valid" -> "true", 
          "input" -> "*F.LissajousCurve.wx-_3"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "horizontal angular phase", 
        "current" -> "1", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "LissajousCurve.dx", "desc" -> "pi/2", "valid" -> "true", 
          "input" -> "*F.LissajousCurve.dx-_pi%2F2"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "horizontal amplitude", 
        "current" -> "1", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "LissajousCurve.Ax", "desc" -> "1", "valid" -> "true", 
          "input" -> "*F.LissajousCurve.Ax-_1"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariableInclude", "template" -> 
        "Also include ${desc1}", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "LissajousCurve.wy,LissajousCurve.dy,LissajousCurve.Ay", 
          "desc" -> "vertical component parameters", "input" -> 
          "*FVarOpt-_**LissajousCurve.wy-.*LissajousCurve.dy-.*LissajousCurve.\
Ay--"}, {}]}]}]}, Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "Formula", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.322", 
    "parsetiming" -> "0.162", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP67331e5f06dgeggcdgb4000046dfgchi3h578259", "host" -> 
    "https://www4d.wolframalpha.com", "server" -> "39", "related" -> 
    "https://www4d.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa67341e5f06dgeggcdgb4000025hcebb60hg9h5348033132334757625844", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2020, 11, 6, 1, 23, 51.0893885`9.460905554604231}, "Line" -> 
    114, "SessionID" -> 20456840176032030884}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Lissajous curve"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1076., {45.42857142857143, 50.57142857142857}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Text",
 CellChangeTimes->{{3.8135858310983953`*^9, 
  3.81358583504239*^9}},ExpressionUUID->"a795b4f3-f159-4094-8b8e-\
69c6f19eeebe"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Lissajous curve", Typeset`opts$$ = {
   AppearanceElements -> {"Pods"}, IncludePods -> "InputValue", 
    PodStates -> {"Result__Show axes"}, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}}, 
   Typeset`elements$$ = {"Pods"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input values", "scanner" -> "Formula", "id" -> 
     "InputValue", "position" -> "100", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"LissajousCurveFormula"}], "\n   "}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"horizontal angular frequency\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"3"}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"horizontal angular phase\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{
                   FractionBox["\[Pi]", "2"]}, "RowDefault"]}, {
                 TagBox[
                  PaneBox[
                  "\"horizontal amplitude\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TemplateBox[{"1"}, "RowDefault"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, {Left}}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "5"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "Lissajous curve", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "3"}, {
        XMLElement[
        "value", {
         "name" -> "Formula", "desc" -> "a formula", "input" -> 
          "*C.Lissajous+curve-_*Formula-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MathWorld", "desc" -> 
          " referring to a mathematical definition", "input" -> 
          "*C.Lissajous+curve-_*MathWorld-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "PopularCurve", "desc" -> "a popular curve", "input" -> 
          "*C.Lissajous+curve-_*PopularCurve-"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "horizontal angular frequency", 
        "current" -> "1", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "LissajousCurve.wx", "desc" -> "3", "valid" -> "true", 
          "input" -> "*F.LissajousCurve.wx-_3"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "horizontal angular phase", 
        "current" -> "1", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "LissajousCurve.dx", "desc" -> "pi/2", "valid" -> "true", 
          "input" -> "*F.LissajousCurve.dx-_pi%2F2"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariable", "desc" -> "horizontal amplitude", 
        "current" -> "1", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "LissajousCurve.Ax", "desc" -> "1", "valid" -> "true", 
          "input" -> "*F.LissajousCurve.Ax-_1"}, {}]}], 
      XMLElement[
      "assumption", {
       "type" -> "FormulaVariableInclude", "template" -> 
        "Also include ${desc1}", "count" -> "1"}, {
        XMLElement[
        "value", {
         "name" -> "LissajousCurve.wy,LissajousCurve.dy,LissajousCurve.Ay", 
          "desc" -> "vertical component parameters", "input" -> 
          "*FVarOpt-_**LissajousCurve.wy-.*LissajousCurve.dy-.*LissajousCurve.\
Ay--"}, {}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www4d.wolframalpha.com/sources/\
LissajousCurveFormulaSourceInformationNotes.html", "text" -> 
        "Lissajous curve formula"}, {}]}]}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "Formula", "timedout" -> "", "timedoutpods" -> "", "timing" -> 
    "0.28800000000000003", "parsetiming" -> "0.158", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP41781309d363dff909ge00004fg985g33d59e9c8", "host" -> 
    "https://www4d.wolframalpha.com", "server" -> "41", "related" -> 
    "https://www4d.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa41791309d363dff909ge00005eggid730249g79d2988411736343457746", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2020, 11, 6, 1, 26, 25.7374613`9.163140627573647}, "Line" -> 
    119, "SessionID" -> 20456840176032030884}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Lissajous curve"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1076., {41.92857142857143, 47.07142857142857}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Text",
 CellChangeTimes->{{3.81358598574846*^9, 
  3.813585998678499*^9}},ExpressionUUID->"7ce1014d-a228-40d2-821b-\
b84d5164f93a"],

Cell[BoxData[{
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["A", "x"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["\[Omega]", "x"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["\[Delta]", "x"]},
   "NotationTemplateTag"], "]"}]}], "Input",
 CellChangeTimes->{{3.8135858707964983`*^9, 3.813585916070244*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"21cfb104-6d51-4768-97b6-e1ca1e4141cc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["A", "x"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Omega]", "x"], "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]", "x"], "=", 
   FractionBox["\[Pi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["A", "x"], 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "x"], "t"}], "+", 
        SubscriptBox["\[Delta]", "x"]}], "]"}]}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["A", "x"], 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[Omega]", "x"], "t"}], "+", 
        SubscriptBox["\[Delta]", "x"]}], "]"}]}], ",", 
     RowBox[{"Sin", "[", "t", "]"}], ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8135858494414353`*^9, 3.8135859607063813`*^9}, {
  3.8135860098525333`*^9, 3.813586135750936*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"4dde7280-7e7b-42f8-97a6-32b58fc1ea9b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
YmrsJ4VKbbntYjGNsNsycU0z4ao+ptnHnaMNYKXiyfO0nnBlgOGhJSb1oLry
5HO7Ngpv9DN+83DVwxVV4VPThNOvDxhuGYysA1HrW2vvE26rXnbfVIaqhacn
X3Sa9VB4TP3yoZKpaijKautoHiT728Wp4XCI6CsG45KE28V17Iw7XKugkhUh
YjpCYf6M755Rvp9woveWzQ8ahRcn33mtXV8BFac8nI8QrhR0SBhuMi2HFvE9
DRoUhdNXGuwvfi0D9cVm2zUJ1z/8yl1UsqUUgufOzez9TeHoubi2eNsSaHjy
wVKScL5u6oOS64nFoLhg28lBOHY13CnUUSqC6u9jDTGE+8dzA+Re3CsEr2O7
9G8T7u1W/LnsbVYBuL9V7FGaIvdbenlM8XA+nBcKnAsjnHxx/7FAj4U8sH+X
8FbzLzmvWZ1vt11z4cm9nwoson0b38o/e5EFmvN3LVfPUihVfkUrYVkmvB/I
4ftMNCcXx5bw1+nAlemQspFwOWc8l+QV/jTYJXH/cjDRCZ1uT3+9SYHT3xP5
BQnHyy7hTTkrlAySyzjwHtHGt535nr1NBPEKDcd2ogOLFGjeKxLA8OUdhT3/
KOx5dvP0+KY4iOyxG3xONO/wfrWn8tHwwkIqrIZoU7aifevmSFBKvmcivEBh
3Kye11+FcEi9aC6tSbSnlcJF1pYwKPnVOuxE9OYJIfHbhkEwxl0WF/G/9yFU
z/youegH3jtl75YTTevmPjx9yRtK5+nH+ok2CtRpm8p8Bm6zwsITRF/vq1QN
u2sP7zPe9/3vfQ278K9J2iIX0aPAMWWB6FVOb++oPHmEDWExr4gvwUHeyenv
h19jzMBhUwbRE/frnY+GvMONQjtVmohemiVquRDkj5LxL8SIb8GWrpWFTwND
8fzJU3+8iS5neb7q/fkZwdi1xYxolU2eY40/vuLueyrZW4leoW/838fKKFRf
/TSMTeLB11EiLFMRg0b5lu5RRMeoLdG1L/uOgmPzt//3vdm7BydTcvoTEDfr
XeUiesCK+hlgmoTPR90uRJD4cxxxSWoxTkV5et2RenJ+Fmd+uSc2peFzDv5Q
Y6JvXckQvKiVgeNrGGcHyPknZDveX66cjS+8eaKbZigs0V7Hzxefg5siXuqo
En1DxTe6RiYPM7dvO/eN5JNe+J9d5S/y8bXOfVVjkn/7jhgGqh4rwBVXbh6I
I/l53vJNtv9cAQrWKTyfIPlb/CKpreZmER6cDBK1Jvk9ofkjcJ9+KVIpRYoL
YxTKOHnVGAmVkb4tWvG/7yFzBLN3nKsoQ/e9hRlrST3tkG08HHigAus2rvIX
I/W3PSv4l9/an2j62+tqKqnPl6P5U4vqf2Lcz9cJr0bJ+iUVcxVfVeFhZZaO
HqnndSIJumV/qrE/bdnnVlL/Aefby6+O1GJsrOLVJ6Q/3Dz8IJH3WB0u/lLj
uLqb3N/F/LxnUB2q/NTviiT9ROHCtXgJ7Xp8aP0E40n/2TRr9/K/jAaMDb5Y
eaWBQjW6/0CxcCMKL9dIzq2j0Omj3iDHjUZcV77qr2AticeRzobxdU14/dNo
UDDpd09tPtgkPGrGuh3btf8rIf04U3sysrkZ04rytj4oovBRwRk5W8UWDBPz
t/QqIPkzIuh7pasFl3Nyc37JJf00+Ru7a38bXjCQqLVNpXCx1aiQzVAH9oR2
q/h/ofDXx8pgiaOd6PFrcyFPGHk+h8glt6BO/LOq09AuhOxfSrXU6XwXrlp2
LV/Kn8I/Fdwyg1ndyOpVdRF/Q+GY2KqJgyt7cNOj3q+qr8m8eRZZesKmB/nL
lw2avaTQxPDB5B7BXpySPh7t5krO30y6ziqvF18sxttX7pD8yvH+W03rxeZb
gjfVHCm8L2kpy7OqDzOtkl+uu0nOm65TO2XVhxr/Xq5Ouk7Wx+Xpnr+yH21H
5344GFF4Qbm92P/yAO7XrdHTPEKh8/0tIeIvB3C9QXFEyEEKHUuPN9xIGMBp
34cytP0UZrQ6p9/mGMRNZVfiruyk0G952HmZkEE88ZNXhJIi9Tk+3/K+Zgjd
4q/JmiyiMHfv0mfVE0MYbxzWuGmejQp/T5rVrCHcH/mqaHCajQ7Hmg/JXxnG
B/X7zE/8YqPK3g2aW8eH0fuedvunbuJ/lryxU+QZxZZdZV+TM9nIPZ+h/Exu
FJd2cb8/QvxNfd1Z9/ATo7j94tM/JQlsFLXyjVF9Rri+13dlViQbwwssXSfm
RrHB82bnyfdszP62NX54gIZeW3wCZ2zZaMN9PrBkgYbmj4uVBK3Y2B5jPG0l
TkfhogS9deZsHKA6hHjO09Hf8cPmDZfY+Oe62ubnOXSMXyt3uPoEG+P5U4UN
3BjYzhl2sGQd8VthGnddQxgYc9Q900yMjR5HP6TbpTGw8NPTmmlhNtpu4Jx8
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
BaXOdaphvwAAAAAAAPA/B1wUMyamsbyNWMdt
       "]]},
     Annotation[#, "Charting`Private`Tag$25934#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-0.9999989482167198, 1.}, {-0.9999998592812047, 
   0.9999998782744886}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8135859611564274`*^9, {3.8135860609177046`*^9, 3.813586096792803*^9}, {
   3.8135861307259073`*^9, 3.8135861365679765`*^9}},
 CellLabel->
  "Out[140]=",ExpressionUUID->"c04e1991-fef0-4834-8c90-fde362713118"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJydnXu4nGV57iNSTiqC6FYEIYEUraJBK1ERGNGNcoaKx+7odnPQQE1RBAUB
dSu9KLu04JKDigiCVQKRkiChKjhkCNgKigwhJEwwYQhDw4IsmMDSCCF7rXzP
703W/Xz3NdT8k+v65cnzPu/9vefTTDnmpA8ev9mkSZM223bSpBeP/b3zivVj
f0Yaf/WboauP2OX7+0958PAbxkDziHWLTj7njLsau374kgULFnYa8M9f/rtz
b1n0eHPz3T+04rbNVxV+7LOXXn75moeb2095bvfvvW2k8Cmd5qIfrHm4sddX
Prn60k34PZdPO+rmRY83Nm/teMimfl562k9PHTrjruas4/7u5bduku6kDX+e
bG4545V/vcePfrAv/I1hf0Jl34TfF/43q/wX/vqIZ1oVT+GfiPh3qOIv/MzI
78uq/Bbefq7S5z2VPoWj55mXvH/2mJ6/VI7Onz7l+u/Mn/Vs0hmuOsNVZ7jq
DFed4aozXHWGq85w1RmuOsNVZ7jqDFed4aqzcnS+5iU7fG1WZzTpDFed4aoz
XHWGq85w1RmuOsNVZ7jqDFed4aozXHWGq85w1Vk5Oq++8tRPTz24n3SGq85w
1RmuOsNVZ7jqDFed4aozXHWGq85w1RmuOsNVZ7jqrBydj99QzoeTznDVGa46
w1VnuOoMV53hqjNcdYarznDVGa46w1VnuOoMV52VTyzPXVOeu6Y8d0157pry
3DXluWvKc9eU564pz11TnrumPHdNee6a8tw15blrynPX6Nw2OreNzm2jc9vo
3DY6t43ObaNz2+jcNjq3jc5to3Pb6Nw2OreNzu2k86T4ozrDVWe46gxXneGq
M1x1njThz0adIaozXHWGq85w1RmuOsNVZ7jqrFzKc8OU54Ypzw1TnhumPDdM
eW6Y8tww5blhynPDlOeGKc8NU54bpjw3THlumPLcMO2z0blrdO4anbtG567R
uWt07hqdu0bnrtG5a3TuGp27Rueu0blrdO4mnaN/TDrDzXgj6Qw3442kM9yM
N5LOcDPeSDrDzXgj6Qw3442kM9yMN0x57pvy3DfluW/Kc9+U574pz31Tnvum
PPdNee6b8tw35blvynPflOe+Kc99U577SeeYvySd4WY+mHSGm/lg0hlu5oNJ
Z7iZDyad4WY+mHSGm/lg0hlu5oNJ55iPJ53hZn0j6Qw36xtJZ7hZ30g6w836
RtIZbtY3ks5ws76RdIab9Y2kc6wvJZ3hZr0u6Qw363VJZ7hZr0s6w816XdIZ
btbrks5ws16XdIab9brGe286p71gLJ+nzDj70AvH/t/CN3x1j878dWlcDb/6
bUsPWzjm99vvPP+L4/HCH3vuqcvG427vMemJ8fw5zjrhvXNnPP/zi3+0/+vW
V+lgrxz74ZFf7z/+/RbsfurZm/pXjv3tJ3x4enPsO+375Jt/fsUmcSrHfvqa
6ReN6/j+oZWXX7CJDu8Ovl/Fm47jZ1H436fy39Q4b63itBw/y/f92PpNdCj2
yrF/NHReUulc7JUX/eM7/mv1HYu9cuz3jHJyVVVOmlpOKFeunGx160MvHZq6
NpUHuH53uH5fuH5HuH5HuH4vuH4vTZfvAlf94apzyZfoCVd9Dvvo/1xz0NDT
SR+46gNXfeCqD1z1gas+cNVH00UfuOoDV31KvkQfuOozeUM5HEn6wFUfuOoD
V33gqg9c9YGrPpou+sBVH7jqU/Il+sBVn2p80kv6wFUfuOoDV33gqg9c9YGr
Ppou+sBVH7jqU/Il+sBVn2o+0kn6wFUfuOoDV33gqg9c9YGrPpou+sBVH7jq
U/Il+sBVn2oe0Ur6wFUfuOoDV33gqg9c9YGrPpou+sBVH7jqU/Il+sCNPg2j
T8Po0zD6NIw+DaNPw+jTMPo0jD4No0/D6NMw+jRM/Ur6wE39SvrATf1K+sBN
/Ur6aLpSv5I+cFO/kj5w0z4nfeCmfU76wE37nPSBm/Y56aPpSvuc9IGb9jnp
Azf9e9IHbvr3pA/c9O9JH7jp35M+mq7070kfuOnfkz5wMz5M+sDN+DDpAzfj
w6QP3IwPkz6arowPkz5wMz5M+sDN/CLpAzfzi6QP3Mwvkj5wM79I+mi6Mr9I
+sDN/CLpAzfz+rSuAjfz+qSns2c9wczrkx/szbw++cHezOuTH2cPN/P99B3h
ao8fsw6QvrvGKesAyR4/Zh0g+cHerAMkP+V71a8DJD/OHm7WBxJ3606sM5hy
lfbHWWfQ9T24ru/BdX0Pbr5v2h/H3nyvtD+Ova7vwXV9D67re3CjZ9KHdQbV
B676wFUfuOoA1/zCNb9wzS9c8wvXfLE+oPmCa77gmi+45guu+YJrvuCaL7jm
C675Yl6v+YJrvuCaL7jmC675gmu+4JovuOYLXr+v1DPnDHvmnGHPnDPsmfOE
PXNusGfODfbMucGeOTfYM+fNOua8WcecN+uY82Ydc66sY86Pdcz5sY45P9Yx
58c65txRy5w7aplzRy1z7qhlzhe1zDmiljlH1DLniFrmHFHL5cvsI7fMPnLL
7CO3zH5xy+wLt8y+cMvsC7fMvnDLnEPomHMIHXMOoWPOIXTMeYOOOVfQMecK
OuZcQcecK+iY/eie2Y/umf3ontmP7pl9557ZX+6Z/eWe2V/umf3lXsoX8zvT
zqd8wU07n/IFN+18yhfctPMpX3DTL6d8wU2/nPIFN/1yyhfc9MspX3DTL6d8
MZ8y46iUL7gZR6V8wc04KuULbsZRKV9uPuj2zRm3m3F1yi/cjKtTfuFmnJzy
Czfj5JRfnefKvmSah3KfQuebcJ1XwnW+ANf5oPphvgbXeRlc51/w+vXDUbO/
M2r2d0bNPs6o2ccZNfs1o2a/ZtTs14ya/YW+2V/om/2FvtlH6Jt9hL7ZL+ib
/YK+2S/om/2jYbN/NGz2j4bNPtGw2ScaNvtBw2Y/aNjsBw0b/btG/67Rv2v0
7xr9u0b/rtG/a/TvmvjbJv62ib9t4m+b+Nsm/raJv23ib6f4OV+t8cM1frjG
D9f41Q/xwzV+uMYPN/qb/a+22f9qm32uttnnapv9rLbZz2qb/ay22b/rmvi7
Jv6uib9r4u+a+Lsm/q6Jv2v214bN/tqw2V8bNvtow2Yfbdjslw2b/bJhs182
bPTvG/37Rv++0b9v9O8b/ftG/77Rv2/270bN/t2o2b8bNft0o2afbtTsx42a
/bhRsx836sY/KX64Gf+k+OFm/JPih5vxT4offurM80+a8Zrh5s7vuG7SoW9f
3bjot69ecdDQc80TTvvUyWfdNdJ48MVLp33iNcOFP/uilUsOefvq5sevX7j6
htk3F/4f39ztyXG7N9+549zxf4cPveHI28b8NGdvu831Y/9euKa79Pgv37F+
/R9SunBNF67pwjVduKb7unXL5syftSalC9d04ZouXNOFa7qtDePnJ1K6cE0X
runCNV24plvNy1amdOGaLlzThWu6cE23qi+LU7pwTReu6cI1XbimW7Uz81K6
cE0XrunCNV24plu1z3c2NF24pgvXdOGaLlzTrdYTlqd04ZouXNOFa7pwTbea
F69K6cI1XbimC9d04Zpu86BtJw9NfSqlC9d04ZouXNOFa7pnzL32XZ35z6R0
4ZouXNOFa7pwTfcdrz346KkH/ymlC9d04ZouXNOFnx/8yoqXdn5h+JlW+Sn8
+Uj3oCrdpvYjy6o4C/985Gtyla/CNd2IJ9UvuNrTzmuc2Bvdkr3rd7DX/Dqu
/Ro6YG++S7LHj+qGvfmOyR4/qluUt6QzXO3p11Q37E29SPaun8Ve9XRc+3F0
w97Uu2SPH9UNe1NPkz1+VLdoT5LOcLWnH1fdsDftXrJ34wrsVU/HddyCbtib
djXZ40d1w960w8keP6pb9BdJZ7jaM25R3bA3/Vqyd+Mo7FVPx3Wchm7Ym34z
2eNHdcPe9LPJHj+qW4wHks5wtWecprphb8Ytyd6NG7FXPR3XcSm6YW/GRcke
P6ob9mYclezxo7rFeM+NM5M941LVDXszLk32bpyMverpuI7D0Q17M+5N9vhR
3bA34+Rkjx+jWxp3wc13aRjd0jgNbr5LGr9hb/RMXOcdolsaB2qc8l0aRrc0
boSb75J0i3KedIabdibphr2ZVyZ7Nw/C3rQPies8S9qBpLPGKe1M0g17M89N
9vgx/VrSGW76zaQb9mbdINm7eR/2pr9LXOeV0q8lnTVO6TeTbtibdYxkjx8z
Tks6w804MOmGvVkXSvZunou9Gb8lrvNoGaclnTVOGQcm3bA361TJHj9m3pF0
hpt5TdINe7Pul+zdvB57Mx9JXNcNZN6RdNY4ZV6TdMPerEMme/yYeXTSGW7m
6Uk37M26brJ36xjYm/l14rpOIvPopLPGKfP0pBv2Zp052Q9YV3Hr8EkfuFmf
T7rBzfpMyi/crOenfMHNOn86r8I6j3LWJZQzj1bOvK/+XNNKc651sTk/Oc+c
F73TnAdbbs4drUqcdkw59U455WTHK/Z47OCx7z196F0n/mLsO/a/3vvsrM7z
TT13xLnu+f/7/kcuv6LXvOSQD/S+f0Wv2Gt5c5xz71resNfyBp/2xpt6l42l
15j+6Ls3TVc5/rV8Yq/l03H87B3+96/8NzVOyrPj5Zy/lGfstTzDfxU6X1np
bHl5lzi+4/eq71js9d6BuxfAOp4pP4mzTmLKpznHvtyVf1dfzPnPxeac4crE
6fdNfU/n69y5O/c+D+2w0Tlx/Jh61zD1K7XbcFNfXHuY2m3sTTlP7TPclNuG
KYfp/R/uxRid0zuW2O92zI3HztzioebdP/vJdw7Z/b6ynm90Tn4o/+qHfkHt
ufeh9vQXas99CrWnH6l/L6uX7Olf6t+L6yR7+p36d89ayZ7+yNg31J5+ysST
7Om/TH6TPf2a0TPZ09+Z75Xs6QdNeUj2rn+kvOl9TNpbU0/T+THX37l3k7DX
96zKez4R/71V/CVOzRd+9LwH3NT3dI7O9V/uXSPs9Z0r4p+z3+z1x2/x0Fjc
53zqsE3qteaX+qv5pf6a75j8UK/VD/XalJ/kh/qufqjvptyad9d7yQ/tgKkv
5r3rTvJD+2DqqXlnuJX80G6Y9sH5aagf2hPTLpl3NTvJD+2MaQ/Ne4a95If2
x7TDyQ/tkvqhXTLtf/JDe6V+aK9Mv5P80I6pH9ox09+59s311407o55+raqn
xd6M/9O5NbgZ/6dza3Az/k86EKcZPyQdiF91w7+el4ObeUTyDzftbZoXqw7S
3qZ5Mdy0tw0zj0jvDaKPjt/QR9tn/Oi4C67lxM0r4TrudfO48nsl9d8rnQ+H
6/jWzZvgJr9pnAnXesQ9HaNDml+U7yv3euB6T8eN8+F6Tweu927geu8GbvLV
NO1Aur+JPlrf3e/sYK/f141z3H1//Bgd0nzc/Z4O9loe3LjF/c5OGb/V16/0
fgLzF60X5byN6AzXdzPwo+0n9qo/XN9JwI/WI+xVZ7i+O4EfbZewV/3h9e8y
jSZ9yjkZ0Qde//7SaNIHe9UHXv/+0mjSB3vVB17/ztJo0gd71Qde/+5ZP+lT
zreIPvD69836SR/sVR94/ftm/aQP9qoPvP4ds37SB3vVB17/7tlw0qecS6m9
T7rKvB84nPTBvv4+6SrzfuBw0gf7+numq8w7gcNJH+zr75muMuWnm/Qp50lq
70cvN+Wnm/TBvv5+9HJTfrpJH+zr700vN+Wnm/TBvv7e9HKjTzvpU86B1N73
v9Po0076YF9/3/9Oo0876YN9/TsAdxp92kkf7OvfAbgz6cO9M9WnnN+ofedh
Xnr3CT+qD/b17zzMS+8y4Uf1wb7+/Yd56d0k/Kg+2Ne//zAvvbvFvTbVp5y7
qH1XYbF5f7Kd5kfY17+rsNi8P9lO68DY17+3sNi8M9lO8w7s699bWGz06SZ9
ynmJ2ncMVhp9ukkf7OvfMVhp9OkmfbCvf99gpdGnm/TBvv59g5Xm3c7hpE85
5yD6wE3/lfTBXvWBm/4r6YO96gM3/VfSB3vVB27GP0mfcj5B9IGb8U/SB3vV
B27GP0kf7FUfuBn/JH2wV33gZvyc9CnnCkQfuBk/J32wV33gZvyc9MFe9YGb
8XPSB3vVB67zWf39BVnnT3qyr6d6lvMMoifcrHuk/T73LiLpqv74V/3duQ78
m/WWtK7l3kskHv2OpKvfEW7WZ9L+o3vPkHT1u+Nfv7s7T1J+N6R+XSitk7h7
pqwDGN3SPotb12L+a9aHE2e+Y9a3E2d8a9bn3fp/Wi+lHzf7F4nTbpv9l8Td
eTC+i1lfSvWifMf6/bLEsTfnQ9L6bXmfp359KZVPuNn/StytK1J+TPuT5iNw
026keQfc1Os0v4Cb+pjmEXDTH6X44abfSfHDTf+S4oebfiTFDzfjjRQ/3Iwr
UvxwM35I8cPNOCHFDzfjyRQ/3IwbU/xwMz5M8cPNODDFDzfzBfMe6coUP9zM
C1L8cDP+T/HDzTg/xV/u+9TPB1P8cDPvS/HDzfwuxQ8387gUf7lHUz/fT/HD
zbw+xQ838/cUP9zM0916jnm/8c7Uv8DNuk0a58DN+kzqL+BmHSaNJ8u9j/r1
uhQ/3KzLpfjhZv0txQ8362wp/nKfon49NsUPN+uuKX64WV9N8cPNOmqKv9xT
qF9vT/HDzbp6ih9u1s9T/HCzTp7iL+f/6/dTUvxws2+S4oeb/ZEUP9zsg6T4
y7n6+v2yFD/c7Iul+OFm/yvFDzf7XOncBeeddLzHvOB7I7s15n/wkeZlz181
Zc5N9zQ69807eOrBzzf3/uXrp/70g4803nH6DU/+5KZ7mnCdv+Bf5zv4r6+P
a80+RT4fzjmr+n7zabO/MGLW+UdM/9gz/VrPtOcds07eMf1Xy/Q7LWefygnc
xGP6hY5ZH+6Zddqeaf9HTLs9YtZXnzbrnE+b9nmtaVfXNnZYOvOqO8bK05Lj
bvrPsXlVObeg5Ry+5vn1r/r9WUsa75q2/54rx/7eZq/XXjB/1vqULudV/n6/
bd56/eybG5/55A3rPjM2b8OPnv+Bj2x51eEPn7WkufXyLU/qjv2Nf40f/xo/
8xTlbp8arnG6fXZn7/ad4Wrv9mHhau/2JeFq7/bp4Grv9q3gau/2ceBq7/Y1
4Grv1vnhau/WveFq79aB4Wrv1kXhphymdUi4+oerf3fej3Ju+qMUD3FqPG59
1dUv+FHbd/bY5cY5jVsnTT75gGd+T7+W1iFdOwD/xhG7vvfQG+c0H/3LGXc1
nvk9/WA6f0V/pPmFa5zUO/VDP6V+4OqH+qh+6L/qfwe8l/xQT9UP/Zr6gasf
6q/6ob+r//33VvJDvTZ+zO/It1J5oL6bfCU/cPVDO2B0Nr+33kt+aB/Md09+
4OqHdsOUw+QHrn5oT7TfpJxrfwc3/Vfi1Hf1r+fTLo5+Gf7Vzxy5299d8ERz
wYX3bvXZC57Y5L3uZevqfif6tojzVVWcG88HBt8+4nfn0OBHrX9i+nh6t/78
+3PG04efFfHPqOIv6+2aLz1XdvGEcddoyhdc43TnweAaJ1zjhGucer7r4gnj
z36KE65xunNZcI0TrnHCNU49Z3XxhHHvcIoTrnG681FwjROuccLr9ewaPbtG
z67RM59Tgtfr2TV6dk2cbRNn28TZNnHm80Lw+jjbJs52ilPP/xAnXOOEa5zu
3A5c44RrnHCjZ8Po2TB6NoyeZt7Xbhg9G0bP1N7qeRgpnybOrokzn2OBm/Jp
4uymOPVcitT3FCfc1HczLx5OccJNfTd69o2efaNn3+iZz3XATftp9OynOPWc
hvRHKU646Y/MusFoihNu+iM3Hkhxws14IMXpzg/ATf+e4mGfVP3D1f4rU1be
vH79s6mdPCu42rf+/f1XzZ/1h2S/ILjab3HU7HNndXL/+xfBVedvfXL5jKkH
537/wg3zsseTn6Hg6uf+Zw54X2f+U8lPNW58OPnZObj6qcaHjyU/1bh0UfJz
cHD1c+uG+c5Dpl+7MvlZGlz97LHhO96d/FTj7bvTdw/7VJ7DfyoP1bzsoeQn
4k9+Ir/Jz/RKt+TnncHVT+if/CyuvmPyE983+flWVR6Sn6GqXCU/Ud6Snyif
yc8Rvzrzi7M6f0p+jjT8JbKOR/vAvRhtHx6I9WrljNt1HnF73MdRflvww6Pd
aFXtRmNZ+Fc+54xDXzw0dV0a/7B+rpx4Tog4f1XFWeyV4191YN1P87vrrFft
1Zm/NuVr61hvV75lcM3X5PCj/MlXXLfqoKE/pnxhr/E7jh/NF+skmq9jNz/t
fwxNfSbFf3istyg/NLjGf1z4Uf72a7b73fr1a1K+sNf4HceP5ot1G83Xjy99
4LmDhp4089yRxHcNrvFfHX6Uj2yoL6tTvrDX+B1/KvxovraMdSTN1/0b1vEe
TfFfG+tRymcH1/g74Uf56RvKySMpX0vDXuN3/Izwo/naNda1NF/NDe3Dgyn+
mbE+pvyY4Br/HeFH+eYb9Fya8tUKe43f8a3Cj+brmFhn03xduUH/O1L8a2K9
Tvmq4Br/3PCj/CMb0v2FWce4I8Xv+PHhR/O1Jtb9NF+nVPYNE3/ikd+GiT/x
yK+ZX/yiYeJPPPKb+rtrYx1S8/WS6vum+KO8JR7lM8Uf5S3xKJ8pX1GuUvyO
R/lM+To81kU1X2dV9THFH+1D4tGepPijfUg82pOUr2gHUvyOR3uS8nVbrNNq
vtZU7WeKP9rzxKP9T/FHe554tNspX9Fup/gdx4/mi3VjzdfeVX+X4o/+N/Ho
r1P80W8mHv1syhf2pv9NHD+aL/abNF9PVeOTFH+MlxKP8VWKP8Y5ice4KOUL
ezNeShw/mi/26TRfP6nGkyn+GPcmHuPkFH+MSxOPcbIpz+uTPVx1wL8ZDyfO
PoVy/Ks+ev754onnBFL/uNDMFxaa+QJczwvBzfmB1D/CNV9wPS/k4t/KjP+3
MuN/eP15ubUpTnh9v7DW3C9em+I8zIznDzPjeXj9udynU5xwjRNef/726RTn
ZDM+n2zG5/D685MjeT4VPNX34PXnJEfMflMeb19jxtvw+nPCPTN+65nxW8+c
B+6ZfZw8fj7ejJ/h9edpO2Z/p2PGkx1zf7lj9kfyeHi1GQ/D688tt8y+SSvF
Ca8/n9xycaZ2eLUZ38JNnGZdupXaW7iJ06zn5/Hq8Wa8Cjff3YzDO2Yc3jHn
pTtmnTyPP68x40+4qUdm/bxn5gU9cz+6l+KcbMaTk814Em7apRQn3LRL5vz2
SIrzMDM+PMyMD+GmnU9xwk07b+5TP53i3MqM97Yy4z246TfNfGqtmU+tNefJ
16Y4F5rx20IzfoOb8UmKE27GISlOFw/nKzQeuJ7rgGu67nwI5x/q6+No8g+v
r3ejpp3vm3a+n/zD69vJvunvhk1/N5z8w+vbt2ETf9fE3zXxd038XeO/bfy3
jf+28d9O/tmXV/9w9Q9X/3ATv+kf2w0Tv+kH26b/7Rr/XeO/a/x3Tb85bPrN
4eQfbsqPib9v4u+b+Psm/r7pT0dNfzqa/MNN/XXtT/IPN+1P8u/2qWN+ncZj
7AubeW7i7C+bdYnE2Uc26wl5PTnszXpO4uw7m3WYxNm/NutgibMfbdavEmdf
26wfJr5T7FObdb/E2e82666JHxT712a91MxDFyU/sV6d+O9iX9usM5t5xJVu
nT+V2zfEfrdZnzfjwLuTn9gfSXxB7IObfY3E2U83+0qJsz9u9oMSZ5/d7Mfl
dGPf3OyjJc7+u9nHTJz9dLP/mDj78mb/N3H22c2+beLs12s7Sbuk7aFrryLd
NB44wvCWacew13Qdd+0b52Q03SHDtzDtHvaaruOuPeS8jaa72PCLTDuJvabr
uGs/ox6ldPc2fFfTrkb9Suk67trbaDdSurcYfpRph6M9Sek67trnaCdTujsa
/tKr6tvtaD/N+l7mrj2PfiHV00g38R1NOx/+zTgtc9f+Rz+Y0j3K8FtMvxD6
m/l75q6/iH4/pbur4XubfiTKZ0rXcde/xDgnpXuR4YtNvxP1N6XruOuPOK9l
2r3Eh0w/hb1p9xJ3/VeMY1O6LcOPMP0a9qZfSBw/Ztzu+sGULtz0j/Y8m/rf
ujr/ltqBuH+azjfSzyp350vRwdgnzvhBuTvHq79PpNyc30uc+7bmfF3i2Gt+
2RfTc4aOM48z+U327GcpZ76mnH0l5cy/lLO/o7wf86P689u9xM+M+U79+flO
4tvE/KX+HHsr8c/FfMTYp3OeP4z5hYknn6eN+YLJb+JLYvxv9Eyc8b/5Xokz
njflIXE3PqdeK3ftA1zXKyjPyll/UE45T9894lH+gDnXir3y8rtF0o7BtX4R
v/IzI37l10X8mi/qo3LaQ+WuntKumu+Y/FCvlbN+otzVd+YpprwlP7QPyllX
Ue7aDeYjpl6Y9fNe4twLUO7aH+Ydpv6ade9O4twjUO7aMe4XmHbGrFe3Eufe
gXLXHnIfwbSHLt20Psk9BeWuXeX+gmm3zfpwJ3HuNSRu2mfuO5j+xazr9hJn
nUe5a+e5H2H6weSHfkE56z/KXX/BON/018kP/Yty1oWUu36H8bwZVyQ/9FPK
Ge8pp/8y95gS5xydGY+5e1WJc+7L9I9pfB7j58SxN/1mit9x5gVm3Jj8My5V
/oAZx5bfe6of/yeOvelPE+d+jXLiMe/qpHkE91ZMfhNn/GDiSRx7Ux7SuMjd
r3Hn/bhHo/vg7ndn3DsG3FupP++Rf5/FvRvAPZH6czj5d0zcvf6t415G/TmZ
/Hsf7t79lLgHUR9P/l0Mdy9+Ztw7qPeTfz/C3VtfFef81Y/7nQV3r3x2nKs3
8ZjzS/ne96Fxjt3oY/zke9kL4ty4+V7mnFK+N805bVN+TDz5XjPnok15NueR
8r1jfbdczt+m9ty9w+zu87p3kt19Yfd+CON8098lzvjc9MuJM64244fEGQ+b
cU7ijGPNeCxxxp9m3OjGt6n/cuNGxntmHJ444zQzX0ic8ZWZ1yTOuMjMvxJn
PGPmiYkzHjDz68Qpt2aem3jMcxN399Ndf6fvZg/i+k71IK7vQg/it8k7zNIe
Jn64vHss7XDi18o7w9L+u3tkrt9x9+lS+zbT8F3l3VrpZxPfUt6Jlf49cX2X
dRDXd1AHcd59clzLIesw5j54vo8f7a361/dC4fouKFzf/5z4DkYvcX3Pc+L7
Hi3HzbslncT1vU2JM3F9P1N0SDq79XY3fym/Eyp8a3PvXt931f5d46E9MeXB
jjfM+wPmHYmnE19s3q+gPJj3Fsy7Xr3Em+Y9CsqPeV/CvF/Rcu9amPdnWomz
H2riSfx15r0Iyqd5PyRxyq15t8TEmdfPmW8q5x6Z/p4O69jK6Y/0d4rhas+6
q9rD9d1juL6zt1uUK/UPP/bZSy+/fM3Dze2nPLf7+O8zw6d0movG37vc6yuf
XH3pJlx/nxqu79PCXx9+plV+Cv9EpLtDlW7hml+Nn/zCNb8PxPhT8wvX/MI1
v3DNL1zzC9f8wjW/cM2vxk9+4ZrfqfzejeQXru+Ew1UHuOoA1/fD4aoPXH+/
GK66wfW9cbjqCVc94foOOVx1Vt3QGa46vz7aSdXZ8Sr/V9+s+mOv+sNVf7jq
D1f94ao/XPWHq/5w1R+u+sNVf7jq7zi66XdRneFqj/47xb6D+oerH+X42SXG
veoHrn6U44dzoeoHrn7gWg65j6/+4Vqu4Fqu4Fp+4FpO4Foe4Foe4JpfjZ/8
wjW/3JfX/MI1v3DNL1zzC9f8wjW/cM0vXPOr8ZNfuOZ3SYwzNb9wbU/gqgNc
dYBrewJXfeDansBVN7i2J3DVE656wrU9gavOqhs6w1Vn1jFUT7jqCVc94aon
XPWEq55w1ROuesJVT7jqCVc94aonXPWEr4zxcyPGz4x7V3xhweGv3PGx5j9d
cuWJhy97tPC19zaWHrrs0eZD9x66+L7m6sJ/OPyiA9/7zO8bH1v92yMOOG+k
8Mv+tN/J43YvXfyWp16x42OFb3Vk9f75yur988K332rdMWP/vzlvzbdued+N
cwqf8ciXrh3//9fd8MpfHzaWPvzr56z6+Xh8nxm55Ftj6RR+xlHzj97vmd83
Xzr5TV8a9wdfdtnH91k8Zjf1hu+ducNY/uAfeVn1rvuK6l33ws85+r9WvWcs
P4/MvuaOD47FW+YF9z/9vsN3v6/xpu8++NXx39lj/L9nvPd+QvXee+EvG/r0
yAd2v695wpL7vzv+O4HwJ+Nd6171rnXh+rsn8J3WLD7hwc/d3nj20X0W7rxm
pJzrGG7svM+1N93T6N7yxDdOP7tb+Pyhoz/Q/tztzXVfuuWeMfsy7/jj7EN+
fP1N9zTfc+5JB3357G7hP/h/vzng3hc93thm+wX/0hn7f/A94z3wq6r3wMt4
fov4PZcPxO+5ML7l9wF/GL8PyHhsVtTfnaL+6vjqxVF/4SdI/YXvJPUXviTq
1xZRf+G/+VJVH0+J+gun/m726tvPO/eEhfvCZ0b9PSbqL1zrL1zrL1zrL1zr
L/yFjqPgy6Ke/mPUU8Y/my+q6umKqKfwi6Wewq+Merpt1FM49fSxqKfwbaOe
9qOewo+Oejon6ilc6ylc6ylc6ylc6ymcenrcNVU9hT+/uKqne0Y9ZVyn9RSu
9RSu9RSu9RSu9ZRxoNZTuNZTuNZTuNZTuNZTxmP6u0uMW74R33dF/A4F7dvc
KCcfrcpJ4eb3NdLvpMDfOLGdLPyfI19vr/JV2qsbN/vDv43n/5gtf7F00Vj+
9pZ7fws4Px98zuI5U8Z1/NCJRzxy41j+4Pr7U/Czzzvl8jG/zRMPumjJ/Zu0
b8/Gd1lRfZfCP3LLV5aMf7/ttnvL8eP/D376xO9buJ4HKHG+7W0nnTHm95df
+MO3x+OCD8Xvklwcv0tCuzo/+KXCH3/uqcvG25d79pj0xHg7BH80+CLh985d
9vym91Lhq0Z+vf94e9ra/dSzN7V/InhTeDd+n6URv+8M53ef3yl8zzXTLxpv
1z4ytPLyC8baM/h7gk8XfmDwt1S89C9vDX648Jsi3XfE78XA+R2Z/YQPR75u
rfI1kC/f92PrN9FtIEf/JZX+A7n+TvQgflbUl7dGfaGf/XqUqxuqclX4/KhH
/yfqEfxvpV2C6/kWOOV/+6r8F671Dk77tjzaN7jWR/jXoj5+oaqPhWs9hV8Z
fr5d+Slc6y98XsT5wSrOpuaLeg3Xel30lPYZfkPoPLPSeeP4R+o7XNvzsk4o
40nGS/RTx0c/VdbfpF2Fa/8F1/4LPi3GY1NlPKbjedZtdNwOH47x1edkvKT9
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
9Of+yIrtNtwfKVzvOcL1vBlc7yvB9f0ouN5DcemWe3DC+V4j8Y7H1rzvEfXl
VaHb4tCN+dRewX8lXP3zffX+Alx1dvf3+e4rIs6XxXtc8AvCzw9DT7j6GXSu
WO357qoP7YPqQ/1VfeD/FOXnwCg/pX+J8vN4lB/4AfF9X1N938JVN7jer4R/
Pfz/VdxvKuv84X+X8K/lmftQ8KvjnOe343wvXM/TwvVcazknI+dFnX/KrfqH
q/9yjkX8w9U/5V85/QjnlzaTdT8916T3d4gT/8qxZ77wIlkP1HmE3schv+58
3aB1QtWnnIcx92XcOqHjqmdZf4v7lefG/Uq46glX3eAfjXuR11f3IgtX3eB6
3xmu+pRzLKID/LmI/8Iq/sJVB7jqQDt5c9wv+E68owXX/ML3ifsR7437EeW+
SfB9hWs5gfP79QfE79eX+y/B3y1cdYDr/YhBXHWgndd78XDVAf6p+I43xHeH
630KuOoApzzMjfIA/1H4OTLOY5dzNaIDXMtDiUfOV8NVB/pBzS9c44drPHD1
Tz+o/uHqv5xjEf9w9U+/qf7h6r+cMxH/cPVf7sUIZ9yu99yVby5c48S/uw/i
1nMc1/y686iD1nlUn3JexdyzcOs8jqueZf1E2me46glX3eDaPsNVN7i2z3DV
p5wzER3gWh/L+pXoAFcdGKdp+wzX/MK1fYZr+wzXcgLX9rncp5D2uZxXER3g
2g4P4qoD48NHQs9/jvIAVx3g2j6X+a+0z2WdQXSAa/sM1/a5nHsRHeCUh+9E
eYCfFu3zv0f77N51Ke+3yLyD/n3bGOd3Yh5R+tPgdwnX+32lHxT/lE/1X8qD
+C/fUfyTL+aJb4h5onvnh/xq/YXrvSq41mu43m+Ca72Ga/0t6Up/Ws4nSL12
7+0wvtV8wTVOuLZLcI0TrnrSL+s4H67vAKj95mKv9/Hhbl/MvYvixg/OXvPF
eAA9fxJ6wn8Wen40yglc8wVH/w+H/nDNF1z1h2s5gWu+4NrOD7qPTPu8f7TD
g7i7R0y7el6UT/p3bT/h2u7BtZ2Eqz7u3Tx9Z5V2T98JvyT0oZxrfsv7SGLP
fFDty7scYk+7qvbl3QCxH6S/2qOD2pd3Y8S+vPci9nC1p91We/gFca/wl3G/
nvZK328p933kHQC3DgDXe/ropvbwkX2r+5vHxX15+inu0Z8oXN+3of/ifuvK
uN/q3tUcdN9Z40c3tYdr/PSDGj/85a+o9P9Z6E8/+L3Qf3roD/9G3CddGvHA
Nb9wrV98x58uqe633hfvIRDP0XHv9QHhup7s3jGGHxLr+Z+JfQHKw37B/69w
3qn4S3kP+ceR7j2RLuXkbTF+2CPWCeG8F7Ew9Czvb8S+xpTYNynnoGIf5B9i
3wSu+sBVHzjr8DNjHVXfQX34+eUT3ptV3eC/i/p4S8SPH33nAc766o2RLv2I
+oe/OnR4f+hAu6T2cL77ytDftdvwA+P7/n18X+rRe4J/Wfj+4Wc3eTeV735v
pEv90u8O1+8O/1V836/H9y33AcPPruGHcqv7Gui82fqKT493FNFT1+Hhv410
z4x00XP/SHfnSBfdbp1477vUU7mfvnGdOe7XP1fdr9/0/uC6uvuDp8t5bOrF
Dt+a6Aeu567hej4H/qaIc2bESb34beRrm8iXnl/S+9HzRIfyzts3J+qg56jf
Iud/3Hke1a2cfxZ9KD+qD1zzSzu5TPJLO6x68n2V8x31HRL0cefK1A/50nfV
SFe/I1zfh+F76XtiLl3s1b+7f4cffZ+qnE8LP7fGd0FPjbPM04PfEvHAvxh+
FkY85T1Y/d3S0E3fh6QeHRL807KfqH7Ib/r9pvDvxiGLo/05MNqZcs4h/LyG
350MPjfGexfJuj3rCXPjPRPi+UnYXyjrSJ8P++vCHv+aX3TQfLl9UvL1r2G/
M7/HJOsexEk5VE690Pd80P8fwv6nYV/uicjvg9AOqP9yHi/03z/033iPddm6
unv0ymmftTzDtV5svOc+0Y/rjxwv78jp7x5G+6yccqK/r1Hm4xIPXP04+0Hn
OdXPxvuqE/3wvVTPcp5T/MPV/8b7pBP9893V3vHyjpBw+oX0e/QD+lO157uo
vfteg86Bu/GM2rv4aR80Hscpn/q9yjhf1jFcewLX7wvXdQy4e+dQ04Wrn7Jv
a/oF189qupQTTReefh8wuOYXrnE6/2XcK/ZwNw7RerHJ+6Lr6t5PUL7xvYKJ
nPKm+rj+cdD4Qcun63/d+MS1VxvvC0/kG+/hTuT0X5ovePr9weCaL7jmi35B
44er/aD7kmpPe6j2rr0dNG5U+0Hv5Wo8lDeNx7UD7l3Tcg9I7OFq/98dxw4a
ryof9J6h6kC91njg6r+cixb/cPXv5iNw7V8ob9qPOE666qfsy+jvyIef9Hte
ph0uv3MkvKznCy/vUAkv+7/Cid+db0y/Z2rid/3af3e+QL6Uky83v1D/lB/9
Lm4eBNff1yvnPGU9Ga72uq5+sayrK9dzRA05R6TpDjrno/7RWf3D1T9c/cPV
P99X/cDVnu+r9uXeVu3vfubfeSzvLgrXff+G7PtruoP25dU/5UT9l31e8Q9X
/67fpJwo5/sqR4f63zvOOlBuNR642tN/qT28/vfEr765/vfEr75Z7fnuag93
+4BuX0/taR/UXveb+L66j6bzaOX40XbG9Qv4V067oZzyoNzNj9BNOfErd/G7
9pPy9v8BXmEoTg==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXXcFcUXxvfdvbt37+5d7MJAsFBssLEABUTswFYsbOxGMVHsFgsFMVCw
EANQRFQUMTAxsTtRwfw93/cZPr8/5u7s3NnZ2dnZmRPPOad9/2N2OjqOoui+
ZhQlOq6eR9GdSm/oZJV6FPVOo+idlig6WGWHKhW1KFpA/72hspWU3lLqqLSb
rl1Y5W8qv4rSirp2K107U/n7syhaWeerKj+9EUX7VlF0iMoeVFpV5WuovJOO
fVX/feUP132OVKp0r4dVZzX9t6bK71a+g/Ltlf9I91pZx1103yvU5lFFFN2r
/Oeqs5PqnKD/ztAzfaj0rtrZQse3lM5XfpTqtFed5VVnJ127nK7dUtfeqPtf
qf/fVflSmfu4jcp7qU6uOusq/5/a2FPn2yq/rvJvKJ2qa3qrrKk6XVS+rfKL
K7+R8n2Vb6v8JoyP2jswc34jXfem0lm6dkuNxxSlg/TMpf7fX2l11RmrY0f1
c3X1Z8nE/SJ/r8pXUHkH5TfScR/1+wflu6rOjzr2Vmqv/Ic6dlZaTvkPdFxH
abby6+p4oNo/Qfc7SWkR9WGq2txQbW2t/zZXnZ907MM4K3Xh/av+bXqOzZTO
Vb5Ffd9U+cHKr6/636pOD6UpamcD3r3yicqn67i00stKyyj1VP0PVN5W+a2U
H6n67VR/WZ1/qOdYRMfNuJfKl1b5Yjq/XflllF9c+T81WZ/XcVGlhtp5tcXv
cX89R3+lup7lM7XTSWV7q5156ufWegdrKr+s2thU/72o/15S2T6V38ffqrOD
zjdVneVVZ0vVeYWx0rGdjn1VzsfxEvNC6UXV3bvyeyp13FzjcJGqtE08f5mr
+6jOWirfQeVfqs8TVZYqXaFrFtQ9EuWfVZ0tG37XM1S+ucp3UvkEpRrjpvJV
9f9qSrPUl6uUDtXzPaH/1taz7qn0ru55jcqPV/kUlf+oez2jY1OpRWX/qY3F
la5WnaN0Pok+KH+50uO6dkO1cXTuefEI867uObMbi4Ha2pdn1nX76XiZit5R
nV6qc6DO/1Lqp3Seyr9VHwcpXav8eqpznNIFyu+gdv5WnT2UXlHZlrp2d+XX
1T33U3pP/w9XX57UPebxrpWfrPw/tK3/WtSH/ZXfQnXPUfpaZXeozvOqE+u/
/xhrpUt0r5lqv4fa31vnG6gvGyr9qLr76bi23sVOqlPTdSVrl/Lf6/rJyhdK
N+raJXTtAspPVVpQaTXVGaf7Paz8b8o/pOOvOjZZB1T+h45tlH5XO8/pv4WU
1lcfD8u9Po1WmyvVvR5OUx+6N/zt7858LLy27KZ8J+V7Kb+z8h2U7678VrrJ
20pD1d/H1NafzGWlK/U8B6hsnNocqvabav9vlS+kaxdRGqr/R6v+ffr/a5Uv
E779tfm+1M/HdPxX5R8r/3gLH3IUPc23pLSCTseo/hjlv1f+GrW/iNrPdf4H
37jKdBrl+nlQ5w+ofLzSPypbVOkC1W/ov5+VX0NjsL3SW6p3lsoTlX+m8rOV
ryn/ufKjde2XOqrL0XSVb6byHVV2pp6j0Hc1ROUvsF6yN4R3snHs98KYb6LU
SfnepfpVeq6W7DOp39n3aictPT+OVvlbdV/TRm1+oHxX5QvlZym/kfIHqr8L
6Hx9tfmvzjdXWk/5T3TcUGll5nns69Zmr4l9XUfena7dNfe82EL3/U73bafy
V/UOf9f58sq/H/u98b7ejj3OPzCmuv9Kqd/Z5bp/m7rf0QLsjanf2W5qu1/u
b7qPjn1zv5Of1c4WoZ/n69qs7vd+rvJp3eN7kfJF3XP4Ys2v39iT+JZjv0Pe
1zz1d47Kl1T+TZXf0+J3dKmurep+x9cpv2jdc2Vv3f/Yuve7gTq+q7RZ7D36
ZOW3Z+4p/7Xy28amGXbQcWeVn8L7V9pO54eonVPr/jaPUn7ZzHv6aSr7Smnn
2HvfLjruwzxTvo/yvSOv/7S9nfLtdN13zJ/Y9MhO8f9pEsp25RtRnY9Z33U+
J/Zxg/Beuii1512oztt1nyfKv6H8OsrvwdhnHp8umpu3K71S93q7QZgb+6pO
rjqrRF6/1429hv8de2w6h+9uLaUlWCfVxh1Kr9a9R3RWWkblR+p8ptL6sdco
jitGHvf1Yn+nu+teR9W9jm3LmlP3Ov+A5tt3anM9zZt/9E7/a3g+76U6++Re
/x5Wne9VZyPVuU7zoUVpQ75ZjdUXusemrBfKfwktoPSf2tlAdY5TnTvV3u86
nwLNqOt/VXsd1Ker1PY1Sivr/A9oGPXnMl17h+qfrWufVv1L1ObyqnuRyu9R
+bkqfwEaQPnByj+j/E06bqx0gvJPqZ0uvC/VP4b5prSg2l9XZbvq3p+r/D1d
21/PcqTqngadpvypjJWOXdXOacp3Vf0D6CvrjeocrP+OYU3S8TCd78W6qr6t
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
10fXNUrrSrjPsbF1NHV4DpUf0OLxGBg7P1VtPKv0nK5fRMdjYl/7AzKTpvU9
L+t4glJ/5bdTGwuV/5eBnKzyQ5Tfme+vad7pRbU1rebyzvrWqtJ9aKfjq0pD
2G/gOUrzU0O1HnygdWGYHvNk9eHDmvmcfeGBSvNfz+uaQbF5t/f0/xEtlufs
rTqF6hzJHFb+2Kb/66d8Xrr+cWGsGeczY/OF9yr/ncbh7MDf9Vf9NqVp++cZ
D6XXdZ9zAi+ALOgQ1Vm4NC9wEGte6f9eUJ2zYvfh3iC74b3wThcofe8Bqn+K
+nac8sdAByp/svJf1nxEPjZdbVwQm4c6mXW3tPzkSOUXKc1DHctepPwpyp+F
TLFmGco05V8IYwd/d2lh+fAlOt6oNh/lPep4Yexrj1f5EqVlKT8kfifkz4/N
tyE/XF3v7lqlL6AT2WdKy1kuDvKWp+ETlR8aW55zOmuGnmuQ8heg71D6TP35
vuayZ1R/ds1jgLxuabX3nNJ5uv5FpXNjj+0auud1Sj/qvn+o/rktlge+Br8Y
W252aWyZGXLjIbrPxU2P5XJqb0TTz/m60uWxZX2Hq2+nN827Tk5M90Bn36ny
7qXzN+j6dkFffhEyAdX/BFpO/ZioOsfzXpWfwjgov5fyfyr/tvJXVZaBPKK5
/FHs8Wc/GKKys6DL1c558HzKv6r8APgAvafXWIuV37VhDMVX9Lmw7vdCZNjg
FVT/fOW3U/oWeZiOa0Eb6F6XV5bP/KT86NJrL+vg/aXXLtajLfkuS+vI7459
T/Qy0FH0YYvIdNPrLaadwEIcVvp8raZlxcgu9lbZ9YX1oszB4wrPpYeUP1/X
1NX23aXXc9blCcpfrvIFWVeVv7phWd0Dpdc65MSPKX9Rwzw391k3yKV76Ng9
dZ/3UJ2rCusnD1K+T8M4gjuUv7003uEK7lWaN7pNx1tL4xHu0nEL9hLlR9K3
0riGS3W8pDRPcBrfQWkd6Sk6nlxahz8Mnb7SMhrzG3TcVKkt40+fS+sHztPx
3NI8xD36/xzlv9e7uIbnLa1LuVnHm0rzKDciXy2tV7lb9U9S/hvVP0LHFaGR
VH648ssrXyp/iPJLKp8qf6/yWym/nfJXVpYD/4pOQ+VtCusq91W+p8bnBY3P
QOVXL6wr2xHas7ROb0/2sYZ1hv3YYxvWZ+7FHlhYJ7aL8juX1k/uxvwsrSfc
X8eiCLossB9NYyS6peZVyIN7OVj1Zij/XMPvDszME4nlYugSvov9PlmjTq6Z
NkV3frXqrl1aHz+gZllbK84htayP/I2JZVy0g/yK72W1yDKsJ1ssi0P3cXPs
8zVTy8rQnx5cs7yMfFeVb5IaR3ID9G3pPnTWM+1Tuhw6nPFcR22eULMsEnwF
+rLOqvOs8tcq/1DT5ZOQkwdd+w6p+UnWkyeh3WJjMr6I/X2jE4R+5psCI3Rs
zXJAnh1eZFqL+ZERsd8n3+lmqWl3sCu/xf4WeXbob/oCH3oN4136Xlcqv6by
T7HOqO2v44D9UPnYpvM/sn+WxnLdr/9ntZg2Rn6yd8NrxVW6dvHE2CPkKO+1
mJa+ObGshGu3S83bgH3poba7N437gq9lLsDb/qD79C+NodkiNU8LNmjr1PwY
9TfWdQeWLodf5ntHLzkq9ncPdmjfxOsHdOa16ts1Nd/3psT8Ce3fkpiX411s
oDbXb3rcwHHtV3p8WW+Qr7LmHFGzrJY8MhzWZO51YmkcD2sjOI1j+C5UZ3Ts
NRveZFu10yf1+GyTWlYFXq5XalkVeLitdf+jSud7K9+r6TrIiWgPPuIn1rLY
eo0L0d3WrIPpoPxmNcvDr9AatF1mvckpYe+eEFnnchHvV/kd9P/iuc/n79no
R67TerFw7j0bndQlOj6n8otUdm3ddAjy88uVvyeyfup65Z9Xviv7m9JSrIdg
snLvx5fpeGPdezS06pSa6cYVdO2PdesI3iytA4ZmuBg9Y2y57hzVvSyxLPhr
9tqa9VPPo3sKOp4hqccC/dPIxPs65Rekpgmof1JiGux+tT+ttB4UGmZmbH0V
uqof4YFqvm+vmuXX7ZXvo/xLoQ/otdrF1jOepTlwe8Pj9p3qDAk6sOk6rsC7
R26mZ++ZWSZ/HrrCuulS+GjWkztUr63K7qqbL95M4zdOaencMnrWMTAD4AJu
i40N6B77uo0j6wL4lofH1ieeonSn2noU/pF9JqxrrG9gRdAHkF8x8vpI+8j/
wbDQBvgQcGe3B+zZWqXXW+6NjoFvoVNkvM+IgPmBxoUORh6ODHyw8mOVvwIM
SG66/ITEx9Eq7w22LXe9a8BS5aZrDwv0Nu+oL7qI3LQfOgKO4yN/e/QBPTI6
xyv55iPr+/guXmItUpvN3PTimYmPD0XWO1yt/x5Tfk3kcA3PW/QBK6rO28gS
S+uSeb8/K/90aZ3iOejySussoXuhW5j/Z6emsxcNdPFCsefVmar/ZGndxjmp
6WD0lecpf25qXS80MzQP48Y3uHjs+T8jNh3EvELXDD3Jf+c3TXPSDlhWaE7u
d3bTNCT6jhGJ6Xj6PCg1z0D5ARqPE+uWEUE3INvpxp4FPVr3+XE6vl/3/IKe
6B7mGDQH8pweyr8Um15jDFm3kUuyBoLh7K381pHxuqfXvUegQ1ojttwDXNma
PFsUteIke4U2ByC/z4zzXFLHL+pu6wz0xKnHEJ4sj82XnZSa30Nnt62+u5cT
63deS6wHQgc0T+Vzg95nhsqvTqyH3k5lrybWL75fGl8Cj9BX5a+EOv+xX4Q6
8BBtY9fZXuWvJ9Y/omtaVccPoSvUnyR1+b+sOeiclN9B9WcmxnCcz37a8DoD
ru2munFT8DLDGh7PL1T/rMRz4/imeQGe8RgdHyytX3wuNh3N3LsjMW+JDhJd
wMOlx+gnHR8tXf6q0lKx5/lpTfML6KROS81TkT9JZeNL666mxaa1mZOnpOa3
KYefhQ6/PTKe4XHVr2J/+xzhf8HiHl83HTJMxyX1Xq+OjVe7NjbebI6ua6/7
PZf4G7xeaa6uu0xlVzTNC8bIsVuMY1kePqP0PrWCjrNK70no/y5XnTdUZ1X2
ptzrLuO8aun3A87gFmgR2lHb5yB/VP5K5X9Gh6R7baPUu+Z1nvW8fek1nv2H
vqMfvCqs+6wJQ3Xdj03z1UsEPeWV+m8VXfdJ6TVoZR1HNs1bdgrz89oW6x//
zrwvMAfp201Kt7e4v8ylTnqOW3PP5evQ5TW9x1/d4nWKNWql0rwGe+vS6sPa
+v9G6KjUeIthynfRsXPId1T9z0qvleuEeU79fsqPTYwv7FEzVnOs8huGeT4C
Oqc0j3N1mPP0le+rRe/3ttx1RsJrKX2s8napdfSU/aFr71T/p6mtTcO3MErl
sa5dVtfezbqr+iukxhHurDp3J86zfw0prI9ur/+71nztjWrvpqbnyHjVuajw
2nJvYpyoiqOVU8835t0eyBUT4xd3Rc6ZuHzLmjGs9ys/oWG8I3zBDYx77DEB
w/ugjrA9HdXmKqnbWTY1RuE25fvrOCs2XvORxNhfdS9aTXVuiI0vnaj2hxam
5/dS/UcTl6+uOp1SX7tVzfjdR5S/Wg1c27Rs4x/Nl+tyz5+lUuuyr2sx3uAM
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
NfvHWLBpf2LYmvIdd4/sUws/gVnNPrjweZjUrD/iiC6GtZn/WZ+HsMc17TMD
rMEJAW+Ab5ZU6avE8uer1c8jMtOe0KbfRM7/FuhM+AN8jsAvbI4esmn6Fvz1
aZkx2Pfqz19VhyXxB/1/W8Pl0GhzAv12lcq+a9rnDf5gsK0fHBljcnTmPH5l
8LuAPBx/aPhZ5X2DLz45M8YYv3m9c9+PNeb8sM6wfpwb1pBFw5pzns4vVH6H
3HwNOKXHC+OewMFjR4DOBXoCnoF1G5wo5d1UZ07kuqzVjxW2OUIn1k7t7ZSb
/2mkXofZI54ojPNB3/hruL4VK6Wfe5tex1jLWdPpDzgyMJerhf0WPOXsMObw
aWDdH6HPuu+emedt3zCH+S62Dd8L4wztDj28nPo1Ov//e2zFhIVvjvrQfdDw
W9eMxeoYvm14WWi9PuEbhxagb9ADYMHAlcIbQY+Qh4bhe6I/0JPQO9A94Azv
Cv1pxbkl5pHYy+oaq/1q9uEILwHtj99IeBp4HXgc5t3oMA/HFcZBoZeGn+pW
M56N727Vpus/rDYfUtq/5r1g9SDLhX5AN4lOExucqYX9xuFrFJsu1un3U9Mp
dfhidXDtpvNHaM2/NrMe89HCGC10y9yvlSeLvN+ODe+dMd8mN081vrBNHN8l
PCm0KXQp4zA3PDd7faem8+zz4wK9MVfXrdw0H/mX8qs0TXs9XBjrzrMNVr96
5eaDwAc+Uti3IVjDzyLTtx3BAFQeE/77yqRn67fIXOHa/1RwTuZvlp+9a+bp
xoX3Be7sntz+HPHlyDvdIswx5if+iZAbwNeCNYRP/Edt3p/7vthqbB7m8KUq
3y28v83Df1w7MrePZc7hEXuGOXlZ6v4wR99IjV8dGtphHsBTsziNyv0u2KsP
CDQA+tXTataxPpLb/9/pNefPqFmXiq0VejV0aujWyGP3xP9nhjoLZqZn8CeA
XwDWEvzxLlX39QuHfvYM44Zd2AbBvob/oHFWj+w34LTKbeMnGdsq7KpuVvsP
5/aZTH9PDX2uQvkpNdNLJ4V+1lR+d+7vhTHvHr4Fxg1sJfz1Xbl9YuIPkzqt
cofAH/cL74h3sHu49umG5xjfJGsS/DO882jogJrHnf1stzDmD4Y6D4T77hu+
ZdJ+YRx4Z/uE98j124R3x5p5X+55fl9Yl9hfsP3Ftxl2N6wh2KUg0wNvi6+g
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
rAXs88Q2/aQwr/o/DoKaow==
            "]], Polygon3DBox[CompressedData["
1:eJwtnXn8FdMbx+feO3funZk7fkiWCG1SlqxlrSxZSmgRskWJJCW7kqWkSIXs
FBUq+65NshMpW/YsWSolJFvq93n3mT/O63ueOWfOzJ2Zc87zfJ7P83wbnNG/
83nFIAiGR0EQ6u/xaRBMzILgnEoQbC25oeRPVEaVgmBkIQi+ToLgfLU/o/57
St62FgQvSb6pGgSNNcBnOu9Otf1Pbftq4MWSL1Q5SGP9J3kf1V9T+74ab4X6
1CTfIPlztT3H+JI3kbyP+hfVp4XkFyTvoPp3al+re5mh6+2u632qYz+ofUu1
H67+m0jeTvJkyZHq89X/K/W7SMcO1/gblYNgkerj1F5V21469r3kS1WO1fk1
nXOxxp+i8Z9Sn60kf67fO0Dy45J31jmJ+o5U/VOd+5TkHSQ/Krmu+i6SfICu
d6DKD5KPlFzQ85md+dj3Ovaa+h+jUtP5b6m01PFWKl+rrYn6X6n+I9T/OPXZ
VO2ddT/3Sz5b8ma6x+bqO16lpZ71PepfUv8X1d5Gx37UGGfzbFX/RvWe6r+f
6vurLJF8oPov1Djr9BzqBH7mP0m+XOX4wL+hp8abqXKi+hys/n/HQbCb5Et1
vRbq84Xu5w5dr57GHKv+l6r9QslNdd0+am+msZ5U/VTVP9P5c9TvJcmHqD5F
Y/yh9rmSD5V8sq5/ZuTfv1hjddU5Z0jeXOUItX2lY0+o7RbJFfU/V+fP1vV/
ktyV74R3qr9jJC9W/Xn12bHid7VFyddvKHmK5GM09kK+N73PvfV7BmmsvXRs
pdqHqPRWvbHOOVTXa6eyUvXL1P8VXW+5zj9efTbXNUbrb6r2fmqfqHPaqa2m
Z3CBntcUyW+pvZtKXfWdr3KL2l7WGJfzW9S+WvWGun5TXf8GjX955OutUPts
tb+u+7tBz7O/xjhQ50f6e636fKz6w3yzkucw99R/Ke9H450keVeN8bGO/SU5
1vi/qv6txuumsQaqNFCfkyUX1O8D6jxPjbm1xpsgua3a3tSxas3nf6TzN9ax
5WofrHKa6lszB/ltef+q5MM03uEqq1S/Vue/pvr7aj9J9Zf0G3eueK3YXu2L
dexltb/F+1D9GbXvUvW9L1L7So15ReTxfpH8juRGOn9a5Ln5vs65Xb/vYf2e
HXTsTLWP1PN9Qcf6qv1+yaex9nB/+m1f6NgXGut8jdFGcqZ3NEb9Z6n/+Wqb
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
askYxmnodlXrbp/r2HEa/7zU2MPhOtYg8/oFLsGxrmqfyTdW9fpQzu318/mG
WY+xRyT3q9r+7Vj1msZaxhp7rPq/r/Zt1f84tW8T277i3u/X792nanv/W/Xd
nf1R/V9m/6t6f6nl87Wr5PqBv02wnn9L/kY75/rLmsBzdrvM6xt2HvbdUXp/
b0oeoj49Cp7LnP9r4Dl9TdXfw1jJS0veDwJ0i9Br8rE6953M7xQb4Fq1D1N5
hN+Cvqz6CJVLNfb2eftQlXMl1w9tK6Mv3lK1zXyE7udcHXtH9Ts0xp26z9Fq
ayR5TNE4FDYpthk22q1qH1n12NfRXvH1GftKyW11r8OZE5IvlTxJ9YkqX7M2
6tiJ2MK6/mwdmyD5dv39N7JtsFOYz1WVmwqeszyPtiqnFzxHDo/87TVQ/aqi
fy/3M1Pjb6djp+n3vJV5n2N/O1TyObrm66Gf6Rgdv7HqvX7Db6z6974d2N7Y
Ut/DY7rGTarfqWd8Eviczn9P8r3q84XqX2j8z9XnXR17s2qbAVsB+TnWF8lt
JF8rea76f67+e0aew6zz6Mzoyqzx6OIv6xm+WrROzv4Q6tgpoXXqj7m2zn8g
8nhH634u5BtWfYL610c31fltQ+vU3dT2ofo3ZAyeif4+hv6j8btJnsBeIHlb
/bZWOqePxruUd6L6ZPQH1efr/Ht03mWh8YXdVB+ktmclPy05Y+0O3H6F5MFV
r03gZZ30/M5O/a231bFL1XaJysDAeN0Mjf+Lxp+rYxfr2A3qO0byKt3Tjmp/
Ue2rJL+i9iHs/7q/yerTpmSbHDv8b35vyfb4n2qfqPYDSsYHn9X5K3X+Szq/
v9qXq/16tTct2d5fJvkeyXuw/ki+C9sUfRi7UMeOVv3azHOG+XS4+v8u+RC1
d1f/3yVP0DktS8bcwCXWoN+UjE9g+74oeU7RNvD36n+j+jdT+37qv0rynZJ3
k9xGcgfJqzX+4TrnNMnrdd0t9Axv1/s5ROUR/Z7l4KXcD8tq7G+Ub7ODyg86
f6zG20njHQC+Blal/q8yZ9X/fclrsnxdV/+v1P9y9d9G/Xcr2A7aVG2jcnvo
ILX/pv5tdT9d1F4ndjtYww1ly5uoPFjyOZ3V/w/1b6/+vcEDJK+QvJXkTSV/
K3mYrtdI/ffGHtd9ba7zb9W5+6s8pPtbpv6P6Xhd7EO1baVyt9q6qHyi9j/V
vrWOTZD8i8Ybp/F2KRl/Let4PZV7y9YX1qr+s/pvruun6J/o1pnXedb3L/ne
dX49nb8rz1/tCxhf7+1oXf8s3ceZKo3Vlob+fsGg+bbqSt4Y3Y/5WzXeiS70
lcq/RetEzIfW6J/qv2VoW2+W2mcVbfNdrLYLVY5Q+2bs8Wq7nHeuen/GiDyf
OPfsonW1z8EIitbZDo9tQ2A7YFPURV/T/Q/QOZuE1rXZq9h70bm7V62zo6uX
QmNlP6rUKRkzQw87seo29LELqsa4ebab6tj5zKOqvy3G31zXew0MtOr2LVhb
wawkX6nx7mO/0vj3qf8+at8p8vzn2fXQ+LcnttGwzcCgNpb8SmY7A/sCrLGn
6nFozJH30Vulc2D981zV+7IfoDtL7hDbJsMWw8eBb+J0tVdD+yguq/h83uUx
RWPh6A610Jh4Pd3/G5nfwWid/1/s93sSfQq+3jlVz5WNdM55VesIG3QD1r+K
74e244vG4tBnotCY3Bns87zPgu8J7O0bMImSfz9YKt9SOTSmij60B2tswWNw
Pr/nEB5r6P30fpUH8I3wzvT8jqpZV+2c4xU7V41Vt2aPoS3ze+D576H6uMw2
Ffjm8zq/q57foqLxYvwdjVVOKFoHwp9QX+XYon0qg9V/KBgke4H6t8y8foNp
d1OfAWofwp4XWidZwt7A2oatkeujjfWMn871l2HqfwtzPPQe3EZj3ZUZ87pF
51wYWadAl8A+3Tfzeo2P4STwNp3fDZ9a0TrUEMkjNN6PoXWCl3Xulep7itrb
gS/r3JszY674S/ADvV8xFoc/6D6dOzbze+V9DlG/RugEut/PA+uZ6Ozo6uib
G3ARMJmi8RHezWr0o7Lf0bKqbQZshc10LNK9fokOo2MX6dizsfW5v6rGZz8E
l1FbP7WdovN/qnqNYG2oo/Z9df696v88GGLRuN47FWPrYA5fsN+o/RId64j9
k+PFT+rcJeg4sX/P45L3RIdjP1J7UfJC3pfk0Tp/kM4/Tuc/LbmTrvlR0TbQ
PLAftZ0puZPu71jJb1fsm5mD/aexpoBBarzlgfWQYuy9Cn3kasZX+wp0i8D+
ieNUxhbt8/gh9fvfRr/7Nslb5usL6ybr5Rqdv1XNddZQvq/vVepgP2m8HXT+
1yo369zb1b4y8RrJ2sUadpru5Ufw2arXj3+w+3X/jYv2v4HrgsmCxYLv/ph4
zWOtY028rWqddYOuKrkpe5vaW6A/S75M9es0fidwH43xbsWYN1g338hHnKuy
EPxEz2S9rnem2psV/Xtv0v39pPNXVK3Psi8BTqILsD/hrwRzA2tjjB/Y5yWf
JXnTsnWztTq2Z9k62mLdf52a1yrWrIaSD+YeQ68pm+n+b2UOg19ojAMz+yPB
/EdL/rlqHR/dvq7GPF3nPqdyHPs3eJnOvw17Qn2uVZ/Jarszsx0xJsen0NnR
1cGcNq3ZPmMd5Z74vpey9odef9/Tb/1E7WHs/R/7HUwabO2dknXrdVXrDujY
H+T2Am1rQj+PH9ExQu9H76veVGUe+ImONdb93q7xb9eYNxbtLzxaZUTRPsrm
+EPpU/IeNl314Zn9AOD/YG+fqPxcNAaHbfxP1VgCNvLrNess6Cqrdf4Lqn+q
83dGD9f1++r5f4n9iY8T/6PkHjX7cvvq/F0lHy75RsntsekS6//ohNup/46S
F6n9Do2/g+SLJS+W/KDkywvWhfAPTw2tEy2Kvd4/p3t+Vve8v/qfov4PoF9o
/Le4P5X71Pfvgv3LzXT+uYHH6JrY3qmvcc7CJ8b9q/9k9T8PfCgzXoONACbR
Su1n1Pxb0fk3lfyR5NvUv17Behz+SmwJnlHnzO+ba/IMTlLfjyU3kdwrsC74
vOr3htYJmSvoF9guzJk9NX5nvjlsSzU1Ut8n1P5o0T5z5jb2ZfPQc3wb1R/R
sSlF+7DXVI3vs1c21Ph/VG2vsrc2QF+u+X0t0XmfYl9KXiT5xaqf4fh8Pk8o
mEMAd2Kaxn+waPyiq/p/oP4zq77HgZKHST4aXAvMKvaznVS2z5u1ZB77X9Vr
yr36e4/Kpxprl1y+o+q1bTfJv+Xt1LfW+fOq9qFPCXy/LfV8jq/Z1kZnms/e
rDJRfYu6/ijVv9b1jsFuUfv1khdLfq/qPbSc2B5EZ69T8H54ImtM6D1kOx1f
AT6G/Sl5LPuN+i+oeo1Hd/xOZeOy1190Kdbe/5WtUz1es42CbfKi5FtV/07n
f1i1TnCz5G8ldwE30/3dnBjjXJnr2/hZWqh8UrK/BX0XfRbfE3wWntWvKvXK
fmbodfgLwKLR7zKNN0jjf1m1P7uBfs8a8Dv0l7KxLPBTsEUwrZ10P4+qNJP8
Z2AsAV/l5mVjCrerbYnG6wY+ENj/ezUYdNmYIPjtdZKTsjEj/O5P6Vt4omj/
+701463wbODXLIitrzyjPk+pT0f1f7NirBKfyLyabRxsm/90/af43lTGSX5F
8nWqf5XZD4P/BR7SRyo/FM1HuixfL9k7uqr/Atb3zDYe9t7dkr+X/HHVOsKF
+X6LLsf+e3Jie3l51frN/TXvX+wb7Bfsl//p2luWPQeH5Os9ugz4F+91Y11r
aNnvF38cHAZ0UTDJteCfYF6R9Q1wYjB2sHXwYrhTcKg6sb/gF9D1O6ncrmvN
1pg7q+0zlQ7oXyX7/uEAdJX8S8VcJDhJR0leKvlE1av4sHgfvJ98/xij691Y
sO8MH9pIbAkdv1z96+GPknxFyfwu/MNbqO2GfP9HP7ypaH/bDazt2PS6v3ll
+8rwmQ1Dv6sazy9XjB2jvndX35NVJkmYw/Nk7VdZJ/k9yXfp+gv1/PYtmC+x
RG1NE+8Ni3M8tbnkHSV/rNIPLCKxL+gjlfGqfxVbN4Y/hj33dWzfBjoV/Crw
6qt1f/3xD6j/phpjELapxj9X9SaJuVYfFrx/HR97LW6Ojcv3GFtX2Fjj3aP2
TyS3LZhvcwH8g8QyfBDW896x96aWknuqvruO7VUw3+WVivHuweju+F/UtkR9
jirY3w/+V0ttL4BB4gvGJ0x/fOfNJZ+TWf8Gjz6Vb0vnd2ctwSaQ/LbkA9i7
8ONovL/BEIv2edZR+41qfwjsSc//+MQ6Pbo8/ulJqfEquCDXSD5F/eeh/7KX
abwmkk/PbJP007Feqj+Ymq8Ab+E0ye/G5n7BARuZGr/CVmFPvjs1foXtc5bk
M3X9jeFDFe1DPVby/3IZPBGuUknlpMCcJb7/Ean5f3Bg/hd7DWftZg6eh76s
9iHYXuozEP03tf53seQLJW+RWp8Dg13G3E79feAb7weWpvFe0fU6gUGqf5La
/jmL70Xtv6n9GbW3V/thai+ofWCOlzGfr0rNb4LnBBdu88zfA8+jaeb1ABsJ
PKUPa43Gu031AyLP5wtT89XgrfWV/KvaH1D7Iejakn+UfJ3kvdFN1fcwlRPB
wgr2Zy1T+wmq/1swXvGm5I1Vfw39XueflhrvuU/nH4I+Exvr2pkx1bYX/gvJ
rzOGvv8w8d75lZ7vpWDBcBB1/gMV26etKuZK8T2corZI/TeT/IbKYPU/MzVe
MCmyP7FjbN1w24L9n1nF/ko4iOAhddVnG8nvFoxXvREbC8NHji8Fn/CRRftU
dkCfTIyFgIk0Vv3jxNhJpmueoP6zEvvL8ZuDj7yVGKsAszhJ7a8l5tbBsfuH
d4/PU/JylePZuxL7Z/HTNld7s9hcn89zvG6vmvmDe0vuqd9aR/231v2+U7A9
3K5irgPvG3xx/9yfuq/6n6jxZ+tYy6J9490lv0yfon2dgervqhwkeXXR85t3
xrvqEXl+8jzxzfbEtlB9XmLs6Vfsf8nLY2O/w9XnW2zJxLosPuo9dL+7p9Yl
Xi6Yf/FT7L1qTcH40tLYWCo2yVnqWz+xr3uByjq1b51Yt/+m7PnIfvgb9ouO
HaT+bVU6q/6nyqeR+VAXsD9JHoR/Nrav9pLAfJsVsbGD9Srtde6RKqeqDoll
iH5vn9T+t6mR9U/4lp+E1u8PYS1KrQv8VTB/D3xhVNF8jhs1/tzYvnY4TOx9
8Dnh5LEHbvCXqX19YJ8zawn8UjhprCn4W9Ff2O/g58CPbKP+3wXmWGax+SJL
QttHu+n8Ftyv6nNVEvWfHhtbgCNxhtr+lxg7nFcwXxQ8gv15kOSRans+tm8c
Dgj+uzmxdTd88GPAHyWHBfu/D1L9VZWoYP8e+ubrsbkiL/ENSp4t+ffAnJz6
OV9nM/2+4WCaal+q0r1oDuyo1Pg/2FgPvjn1nR/b1ttRz+VvbNHY/Bx4OtT/
QCcu+xh8v9Vg1GVjONgjg7HnWT/KtsUuUkmLtsmqYJka4xyNvxR8ASyeNVL1
lrH9x7HkZWVziBOwLh2/LHCfiuTjNF4r9mP0uYo5HXA57inaP52CT5TNOV2H
rpP5WnvF9o+dpxIVbdPsnRhTAkuC84qtejX4TdE263f5fHpB9ekqi3P8Buxg
XmDsHv0WPl4c25bct+a1AZsSW7hdzboMNvHQxDY+tv2bOv/L1PxDsIy3JEO6
qKcxf8HXG9vftUfNay0+CWzhN1W6FWwTX6XxGrAHF815Y/63j82V5J4Xpebz
o+vNze1dfhO/5crQtta7KmcUbHOhmz+pslHBOjq+DfAC+CkVbA/Vh6Mzlf0N
jMbfoj5/qP5s4PXiGB1rzb2UjfU1ymzLgvl1Z+5hQ5W95xfV1l7yTrre99gI
kk9kfmF/xcYmPgaLCIxR4Kv8Nrbugs8S2x5OBv4/bHxsifaZ5yc2BXw58Ex4
W/C1sN3RVyeGtuGxlU+tWVfBZsbWB+NBl8Hm514Kme+Ne2qTr4f8tmEaY23m
38vauKv+HquyFh1V8lGB/deZ+qwqmyM9jPUDHUPyg8Df6BM6NiLwOy/o/Q9l
/qq+H2ttZhnf9+qy8ZgyOkLZc6CfrtUlcRs+8mNT46E7F82p2D3f3xeXzeln
v28Xm9vPsX80Vl2+4bL3vj/VfjA6V+BjxAP8VfNeCCf/38znoyvsrL+HqfwN
BiH5QJ3zbs5Xw/c+C/sv58Ox9swI7C9uW/Pegg+xX2KMD2xvmtrvQVeIrSsQ
twA3ftvMviT27/3U/1cwnKI5V3DJts/sy4VTNis2v2Z8xXwcuNCDwPwL5kRf
g36Tmd8FNxZ9KUaHLJhbB/fqvoq5VQ015nC1NQOvLZrjern6p+iYrK0Vc9Pg
qOH/hwfAtbkH+GZwfLDHPkzNJ4bTOD61fxZuNd/sHan9rfg6+MZvSe0/xBdy
vuSDM/vP8FGAHx+S2b+FD6Sn5DGp/av4As4AT8Je1PUvBauLbL+9mZq/CecR
/W63zPE6cJ+wjbGR4V/gUwYbPlvywIIx4qGST8C+KJgrTKxKf8mXFByzAlbU
XXLfgjGj+1P7u/ENXhUYm+yt9vMLxih34NlnxujhOP+Y45n4UhYwp3UP61L7
l/AzgX2AgeCfwk/1q571TaxZfO9l25Nwbtrp3BmSr0iM+YL1whn9uWZOEFyg
N8vGB5eznrLWaT78XrPNiq06X+Uy9mqdf03RnONH0XVqbts1NJ65QvJb7AWS
ixvZ3loDfqS/3+f2Lfcys2w8lGPUbwjNt1op+e2yYx5+qdnmxtbm2INqX1Xz
b9sh9Fxjzu2Uz1n4Qz+ofVbZMT/cy0WJfxv3dKX6NpDcSM+rsZ7xVZJ3SWzr
Nq041urBivV7/JFXsP8m1tW3r1if30Jy/YJjq9DHtpPcsODYjB9rxjDALrgH
uKOTdXx80XMULurEivfiZpIPz4wX4kN5B/tJ9/+Tzn+RvbXkd9EDHabsd7JM
8ojY3BGOLa0ZYwBb4JxBqp+T2LZFJ4RLcqTKPaF9OazFrMm75HsQ6zd7Sgv9
7Qi+mFh/L5Ssc8OVxT+LLbJtxbpn59jcL3TQganxF2LBNpfcH10ptm8aHzW2
z1GxfaXYQPBF0Z8r8C80fku1r0jMrXha8n65fsDee5XKSua+yjrWS53Tiuch
eS14jdp3UX1GYm7lHWBIOZ4ClwOf4UO6/4aZ7wW/ObYSeMdGJdtM2FLgKRuX
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
4PcvyPVfOADEJpGPCm4BMUr/B9Vdl30=
            "]], Polygon3DBox[CompressedData["
1:eJwt1nmUl1MYB/BXTbP8ZkpqyDRRGaXQRqR1VCNMtKk4TsdBVGjVYpJzQjWN
c7JkyTqVnLKE4xwVsoQ4xpaSLClLZSlZJjJU5POc1x/f87vP936/z/Pc9733
vr/WV04aNrFekiSV0ADGFSTJ8IZJkpOXJLnwelaStBZPzE+ST49IkjY5SbIy
O0mG4NrR7uKpy02Sv6ABbgPPteZP8/uDhJ1wL2aSpJaumncx1OM7NnKGDsZp
YCX9YNxv8tRCB3Vnq3kz7OVpSTdSjl7inbRzjLvi1pr7Q75VuEvFbf1uVPdD
NTvLt9z8CuirxnzeKvhVXEJ7mRy3im+Bi41vxP8MF/FdJWd/620gXzY8Jl4G
v+jtPpr58p0W/apTSrcatwYuwJ1P31W+bbTbYar802C3+RbqDjY3jO5y+brx
1qfPgs7iofiDPIegwjPIEl9r7hqob/y9tY30O+7/5xvPuQtMggvxO/h2QmPe
Gr3lwVI1v1K7j57b0Tyhlz/VLcVtMLdcvAIOiCthrv7G62UEbZ68GfhAvoY0
p+PeoHkTZsrXRfyTGmfJ9zxuFQzCzeeplmePXn6Cv+EAjJfnVLkPmmsi3xje
HXrINzdLvu647bw3me+Cf1G+c+V7BteR92G6h+Bnvm74WvOv0PVQfz+uJ64O
9zZuAO7H6A23D/dqdvqucsXNYIK4E8xUax9dD9wfdOtwfemuFN+g7gw4xng8
voXey4xv1sPs3HSN/XiL8bPEM2E472yevXA9zxkwn2443YSC9FnW0H2Jv5Wm
FqYb94JFdCPpsmLPeB45dNtiX6tZjd8rdzc9rsedhFuG24/rg/sAN1auD2O/
GLeCS+W7JN4fjBEXwUBcuT7O439J/mdxp8hxU+yp2EvijlBBN1P8ZV669mn0
FcYjeM83foX3hex0D+fo4y3opefteqnGF4o3ZNKz9w1uWXb6PLdCP56emfTZ
HitfEYylm0c3Xd521t9HjWLjf/keod+M+wSOwQ3BrdPfO+IaaIq7MPYLbrW8
XXk/kmsebjfuoDrvZNIz8AX+gVhzrIG3MW4Y7jvcXnEhfpRxA2jJu5bvDNxG
mttw+3H1cJugP+82/MOxt6JneFncOyd9LyXiXrxF+qujuQN3Dq4MXo17CQ7g
jrf+llAl3yC6u+I+lb9LQXoPPC9+BD/IOt6H0cZNYs/opUXcQXRz6dbQLceX
0bwHl8fZgg50k9Q8QS9Px35S9zN1y3lz8DPUrc/7WZwbmhW8beW7F3cPFOCa
w1TzveF++abxHqfuAvNlsfflG4o7Kj89y9m4rbR/ivdDiXioeD3vIvl/h1ni
clgV50j+woL07ppCOznOOk0H/K+xl/VcJG+p+GT5lqp3OM5kPCu+rLiz4iyI
S+GJuDNo/6K5Iu583t7iNrx30x3AN6c7G5fNuyTWFGcfdyfvqXHfii/KSffI
ozRTrK+CtyruIDgs1xba6+h6xt1b3zPhW0i3jq6Qd5G57rg9mfReeU38e9xr
fMfjF4uLxTXmttC0hCdxu3AD1B1FV0L3HK49bitdtV5K6E40vlrdr2GGXqbD
EOuooNsDQ3lb8T7Oe4J4E/2n0TO8Hu8B14x3oXwD6TYZt4k7xLdlvN8T447g
7Uy3k/djNZvBY7hvc9L9/55c78JL8t2LK4wcfA9mUk9418ZZiu9WftpD6/gu
487EfZdJ7++Xxb/hi3FVuKfi+yueg++Pm5KXPt+p8l8f3xM9/w0d1S2I82z+
H/Eh6I1rGvse1553pboH5esXzwC/hGYxfBP7FjfYOq5Tcxbuc/vvffwuupPD
i/83zi3dFtxocaP89PuXofsWt0CdfVARvcY3Vf2E97B8Fxg2j2+N+UpxefxP
ijtOvNlzLvfbN/5z4EbDmfFtFB8V59C4LPZW/B9T8xK1vxbn5qZntgXNAtwa
/TXU3+2xt+j2wWregfHeaTNxB8HkeOZQFe3ppVGs1zPtFN8taBvnF3dN9BHv
Mfa62ufEN11cmZuekyY0TWGIHo6Tb0KcBzXfzkvvmrhzWuOO5GvUML0v4t7o
br6O72jcZdnpe4v39x8z2Ex3
            "]]},
          Annotation[#, "Charting`Private`Tag$25955#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{1535, 1666, 1797, 1667, 3415, 1895, 1676, 1805, 1677, 3416, 
        1899, 1685, 1812, 1686, 3419, 1903, 3467, 1694, 1819, 1695, 1907, 
        3468, 1703, 1826, 1704, 1911, 3469, 1712, 1833, 1713, 1915, 3470, 
        1721, 1840, 1722, 3425, 1919, 1730, 1847, 1731, 3427, 1923, 1739, 
        1854, 1740, 3430, 1927, 1748, 1861, 1749, 3434, 1931, 1757, 1868, 
        1758, 1935, 3477, 1766, 1875, 1767, 1939, 3478, 1775, 1882, 1776, 
        1943, 3479, 1784, 1889, 1785, 1788}], 
       Line3DBox[{941, 940, 1799, 1317, 3562, 2222, 1124, 1807, 1325, 2225, 
        1136, 1814, 3564, 1333, 2228, 1148, 3450, 1821, 1341, 2231, 1160, 
        3455, 1828, 1349, 2234, 3537, 1172, 1835, 1357, 2237, 3541, 1184, 
        1842, 1365, 3566, 2240, 1196, 1849, 1373, 3568, 2243, 1208, 1856, 
        3570, 1381, 2246, 1220, 1863, 3572, 1389, 2249, 1232, 3460, 1870, 
        1397, 2252, 1244, 3464, 1877, 1405, 2255, 3551, 1256, 1884, 1413, 
        2260, 3555, 1272, 1891, 1068, 1305}], Line3DBox[CompressedData["
1:eJwVztsqhGEYBeDXCU5chOvBiQMUir+QzRhTRiG7UCi7A2WKU+5DwiXY741h
7K/A8x08ra+1pvefxizfOloTERlRG3FQH3FIEy00M1gXcS4vaKODo4aIdpmz
XcorOummi4L+Wt4w7bc9MqOXou1WlvV3so8B+pm03ctX24McYoRhZmxb+kfv
J/LpO4xxrF+wP3u/MM4EJ/qiXLaV0930jfSfOLVNyVVbRb4xy5l+Xs6xbnuX
1XRDv5iSJbZtH7Ki/5QrrKV77Ni+0k3bd7rDJhuUbCX9j/cvu+yzxx//Y7ZB
yg==
        "]], 
       Line3DBox[{8, 1112, 430, 920, 3049, 23, 954, 441, 921, 38, 955, 450, 
        2708, 922, 53, 956, 3054, 459, 923, 68, 957, 3055, 468, 924, 83, 2400,
         958, 477, 925, 98, 2416, 959, 486, 926, 3050, 113, 960, 495, 927, 
        3051, 128, 961, 504, 2725, 928, 143, 962, 513, 2734, 929, 158, 963, 
        3056, 522, 930, 173, 964, 3057, 531, 931, 188, 2462, 967, 540, 932, 
        203, 2476, 974, 550, 1101, 218}], 
       Line3DBox[{244, 243, 2745, 562, 260, 2753, 570, 272, 2767, 578, 2768, 
        284, 586, 2777, 296, 594, 2785, 308, 602, 2793, 320, 2801, 610, 332, 
        2809, 618, 344, 2817, 626, 356, 2831, 634, 2832, 368, 642, 2841, 380, 
        650, 2849, 392, 658, 2857, 414, 417}], 
       Line3DBox[{951, 950, 1803, 1321, 3563, 2223, 1130, 1810, 1329, 2226, 
        1142, 1817, 3565, 1337, 2229, 1154, 3453, 1824, 1345, 2232, 1166, 
        3456, 1831, 1353, 2235, 3539, 1178, 1838, 1361, 2238, 3543, 1190, 
        1845, 1369, 3567, 2241, 1202, 1852, 1377, 3569, 2244, 1214, 1859, 
        3571, 1385, 2247, 1226, 1866, 3573, 1393, 2250, 1238, 3463, 1873, 
        1401, 2253, 1250, 3465, 1880, 1409, 2256, 3553, 1262, 1887, 1417, 
        2262, 3557, 1283, 1894, 1081, 1311}], 
       Line3DBox[{1540, 2216, 2217, 2131, 2133, 3521, 2132, 2095, 2080, 3511, 
        2081, 1547, 1632, 3420, 1554, 1635, 3421, 1561, 1638, 3422, 1568, 
        1641, 3423, 1575, 3444, 1644, 3426, 1582, 1647, 3429, 1589, 1650, 
        3433, 1596, 1653, 3435, 1603, 1656, 3436, 1610, 1659, 3437, 1617, 
        2083, 3512, 2084, 2085, 2291, 2292, 2209, 2211, 2210, 2293}], 
       Line3DBox[CompressedData["
1:eJwV0MtKAlAUheFtYBhYYM0cZYMuapldzG4zZw4ERxERFkEgmFEQBD2F9Qg1
yXngK/hAkd0/Bz9r/2tzDpyTO+82rxIR0cDRZEQ/GTE/FfEhe6mIJzxiOB3R
tH/Akv2IL+jr/B4HuomZiH1Z43fYMyd0u/KQ3yJ4le+gwq/x564K30aJd/Cr
2+KbWOYt3pYbvIwbnuOXWOc/vCSz/AJr5m/dqpzjZyiav3QFmean+OR5voIk
P8GbLjM+h9nxPf5ioDu2W+Sv3l3EC57xjn+umCKD
        "]], Line3DBox[CompressedData["
1:eJwV0Dsvw2EUwOHTRWoQm83gsglxp+jFtRuJxFBCk9KkIiouSUVUwsDAQEz4
Ju6JGMQH8HU8HZ6cc37vf2jaUdpbriYiokyhKeKMruaITjKkeUhGPPHIb0vE
im/q5N0L3PGp35qL+gnz9jlu+PB2beb1GrP2GX70K/OSnH7EtP1cz5kXjZ2U
vs+7nnVnqHPKoF7lzVvaPcUxNXr0e33HnHRPcMgB33q3XiHlHqfKq75rtutl
xuyjbPPirWK26SVG7MN86VvmJq16kaHGb6PIBkltnWffDrj7WaVAQl+jz97L
UuN/5I9/u8YsCg==
        "]], 
       Line3DBox[{1280, 976, 1456, 1278, 3556, 1622, 1415, 1448, 1259, 3552, 
        1615, 1407, 1446, 3295, 1247, 1608, 1399, 1444, 3293, 1235, 1601, 
        1391, 3291, 1442, 1223, 1594, 1383, 3289, 1440, 1211, 1587, 3547, 
        1375, 1438, 1199, 1580, 3545, 1367, 1436, 1187, 3542, 1573, 1359, 
        1434, 1175, 3538, 1566, 1351, 1432, 3287, 1163, 1559, 1343, 1430, 
        3285, 1151, 1552, 1335, 3283, 1428, 1139, 1545, 1327, 1426, 1127, 
        1538, 3533, 1319, 1800, 945, 1092}], Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/HvFR6Ds8hAlstyLLLIIotEuuWy2MR+lJiZbWJClL9F3ZUr
ikIUYZHBwiSDhUkGJa9nePf+fD/fX/2e35ObmCqWMhExiYW6iKH6iGHMyzVJ
xCrW8Fcb8ciL+gbeSHfZiE1OdM+8zE28hW00ml95nXecbZX3sI9m3RuX9Lty
Tj7AIdrMHzxtV5bzchkVtJu/eMbuRO6Sj1DFkq5T9y1fcg8fp/enZ7lb98t3
3Men6TvszrhXl/HuJx4wn+MC/eZE/8IVZ0d0V7jGoC5rN6t/l4u6G9yikP4L
uzm7T3lMd48HjJqr+hb7H3lcl5dX0JF+A/4BQlk4Vg==
        "]], Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/GvyJ8rxYJSZGDwZ2JiYmJyDEwWsbpMzAbKZLAoLq4oLurk
FEVRFIWFkonFIBOL6fJ6hnfvz+/9e67redqmM+NzZRExi5XKiHR1xBiW7Zqq
iC1ksVobUa4922tcxzvY1HOc0t54gxt5Ud/lPdRr75zjPb3F3scBmrRPzuh5
u90+xBFanb953t2J3W0XcIwO57z+Y1/YvVzEKdb1Hu3PvuV+PkveQz/nPq3E
TzyY/B7b7i55QKvw/q887LykX/E1hrSUuw8u6KPaTfIfGEm+ibsvnnC+wz3S
zg36gud/7SntAY+YdC7qze5L9ozWaWfRhRf8A8+hOe8=
        "]], Line3DBox[CompressedData["
1:eJwV0D8ohHEcx/Ev6pwBi1skJZvNZrMZlEUW2a7EIAwGSlIog5xB7kay+BPD
GRkZUZQ/izNQ/izOQOHK6xk+vT+f9+95nvo9bdmJ/vGqiBiWSipiIx2Rl189
Wxvxg812oV7sjP7JDellLPJN3LrdiK/cgP6CDfaaXoePdp++4PmSnuZW7Bq8
tQ/5HvtGr+aW9YqM8Bdct36Of7goB/w3nnFdeIpfOC97zsp4wnXiMX5gjp/F
dzniOrCIO/ybPi3PyftcO87xu/qTPiUl2bJbcMbZpv6gT8q9FOxtPqPn9Tsc
k2sZ5HPJP9FX8QpHk+/xl7jEpZK7Ya/7t8q+/AMF9T57
        "]], Line3DBox[CompressedData["
1:eJwV0CtIQwEYR/FvwSk+ghYXhGGx2Ww2m01WBINhOBDDBINBxGAQNQguGGZQ
dCDCxCAaNWqcQcFHcQYFH8UZZpm/Gw7n/507LtsG8/O5YioiCki1R+x1ROwj
7AJa6YgBd7kH7oz9q03bDT7T+7Uddx9/apP2B/e6S3Y3v7on7DWfr9td2pY7
zY/uU33c/WC3aZt28Kx+q425a9xK3oE/zHh2o43a19zkVVT1Bl9pI3zJP7yt
r/A3LrRhPudj/ctewjtOtKHkPXzk2Zu9iDoqWpaX9UP7xV7AM3bdFT1jl+0n
LuIeU3op+U+S78F3PIcDvcYbWievc87vzqKKf65SPHs=
        "]], Line3DBox[CompressedData["
1:eJwV0Dsvg3EYhvGnqicUQx2rpOK42Ww2m4lvYDDyEexWq9VIJBIikRCJhJA6
xCBOg1itWofi1+HK/dzX/Q7/vOXFlfnlREQsoSkTUcpGrKYjku6qu4bLfEQ9
FbHlHslFrNkL8lP/Qlrfkeuyi//w/bf+gzy3Kzdkhe+21/VfFLg9uSmvbD22
Pz1kkbvmDvRtdy+XQBOG9TvboW3f3ccl0Yx7fpI7sh3Lfi6FNB5sU9yJ7VwW
uSqXkVlMc6e2Wzmg12w52YIZ7sz2KJ/4EteKNsxyF7Y3+Wwb5PJoxxz3wlXs
E/q7PiQ70IkF/dV+Yx9t/Du9LMf08cZb8A96aTT6
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzTsyg2EUxvGjIVcbUGncEqOhtgEFIWJGZwFsQ2ILaSjcaUgice/ZAyXa
mEEav7f4z/89z3m+841v7VS2hyJiA4vZiEwhIouffMQEd4sR1/K+9xveMYVl
+Qtadodp1l/BVS6iORLRlu96j+nU0g3vjqzOFb192Xz63lwy39iduHOET/kx
T6f/y3O8lInIc1u/rN+Tf/Aq1tCR//HmcMQv9+1n9E/x6t6t+cy7aree/qc/
J2/gzq5h/uYu3/Me1/QO7BfQM8+aH+wu3TnHl/yCS3iUF/hZVuRRDPQn+cmu
yf8HZzUU
        "]], Line3DBox[{2368, 3052, 3348, 3510, 3280, 2550, 3116}], 
       Line3DBox[CompressedData["
1:eJwVzTlOQmEUhuGDFjhgYmNp4Qb0IpiY2IkbgEoEGxcgrctQHLCH3mkJRgaN
Ico2pMUJ0cfizfee853/3pWDWukwFRFFbM9GvGcilhYivvDBP+0SWTSP8Mqv
cDwXsTvvTn/Pm+mIVfMJX3ZXwQNv6+uyrGvafZs75jVzglN+7XtvurEuzzty
Ue7PRPzwnpus23Wc8T05sX/iE577v5O/dpve3WCAW5y7qehCPiPxnyPk7C7M
KfTR9bYhq/Yt/RR/Qd68gUt+53tD3TTf4j1vCqjaPcod/AHtlTHo
        "]], Line3DBox[CompressedData["
1:eJwVz8kug3EUhvEjKTqbx4XEJWijQpBYoCiLLuxqqGFZa9MVuA5uRCOCSCPc
APvuqxs/iyfvOc/53n/yzdYvqo2eiNjHRiqik434RTcXsW7vmhPpiDnZK9/5
T3MBRdQyEX18E/24dz/gNnVnzHd44pMoc4dul1zK/ow0jrgFb5Vw5Zbh5s1Z
uaVT4a6Rs78gj2OdNuoYsL9hEI++W8O23rc3hrgfOSy/5CKWcKI38v8/GMWD
zim3ozdmb2EcFfsZf+M+Yf/AJM65Ve+s4NZtils2T8tdnRr3KvfwB6dEJl4=

        "]], Line3DBox[CompressedData["
1:eJwVzTk2g2EUh/GrNBWpTRmMMWzBmKBCEqFKoTF/nxVgAbagtghbyDkpEEON
1gbC8fuK59x7n3v/71s4SmtJX0Q0sdsf0RuK+EVvOGLH/KcfGYhYVkfVDt/V
r2AVx4MRY/wTErsJnHB7snn9HZ7txlHjTu2uszvzC/I44za8tY4buwK3pi+q
dZlv7t5cMncxiXOZH1xgyvyKaeTcPbpvyH3qZ7gvdTa7USuo4lJujntDmv2J
hNuXK3PvmEfTnPJF+wd8cAu44ra9s4VbfpHb1C+pBzItrq0e4h9Zeipd
        "]], Line3DBox[CompressedData["
1:eJwNzEkyg2EUheH7mxEmrEBlAbpNKBIhYSCaECIzRN/3U1uIKXvIFlRphhHd
QFaheAZvnXvfc7+vv7yRX08iYgbFzoi/bkNPxC9m7YnswBg/Kp8wbp7T1VIR
W2h2RWzyO+ZtzOvS9lu86QawwO3q9nDPt7gD8z4WdVl/PvMTMoNBfYlvc3X7
Hd65I/eHWNIdyxN88H36XjTcL+t+zG3kMIUXflKWdafenOHTuxp/YT7Him6I
+8IwVu2X/BUe3H1zN+ZrVHQF/73y0zKPEf0aX+IeZRX/Jb0upg==
        "]], Line3DBox[CompressedData["
1:eJwVzLtRQmEUReHDjAYoZlqAgQXoMF6H0BKwAblmBBo6liCBARAIagOOoW8M
jVHwBdKBL4QG9CNYs89e+793Md0pbmciYgPlbMTUXMQm2u5pmZ/RcxFFdw8P
/Lm+PxtRwad9ma/i0dbQl9wlfLk7XFMeeHvKJfjWV/Wu7cq/LvDDX8oSnvh5
uc7dY2Gy+ybxzbPtQ9ZQx5APe827F9sfl3Apd40+/8rfuA9tDfzaV/g63mxH
egEj9PRjeeLdmb2Asb6m9213/nOLId+SW3jnd5FyA7mHf4PmNoQ=
        "]], Line3DBox[CompressedData["
1:eJwVzstKglEUQOEdgVHWtHnQKyRKw0YOmgRWdhMcKXlLLXqBLtBFDSqoBs17
jt7A6gGy0p7Cz8Fin73Wfw7/UrG+UZuKiBxOZyPaCxGLOHFenYvYn48o4Is7
MI/552TEC/71DN/Dk72tZbgR0mjZH/k3PY0h92C/R1Pb9d4nv2fuYIQhjrQ1
/n3yL/Y/9+7c6aGhdcwufvlXveu7ddS1FLfF5fHBbZs1/tr3N/jRU3wHV/aq
tsINcMsto8JdaJdo2b+1c+czHGqb3uzzWeScZ8wESpNmNjGNsn0MC+IvFQ==

        "]], Line3DBox[CompressedData["
1:eJwVz0s2gnEYx/EnI5FxGZq0B5JFaAddNGOOrfSWS80soXJfBCFyGZhwRDJw
fAy+53d7/u8571J5a30zFRElbKcjZhcisvhFGqtzEdWMnb/CwE1XTuYjmviw
N/TL/I2tIeflCsb8rS6hLfuRroBPeUW+sx37Vg9v+j6tYajP0ktdji7iy5uC
N/e2V7qHfUz0M/ac2y5SfFG3QU9wrXvw5pQ/cH+Ib3vy/2/8yNaU1zDFo9yi
bVsHVXc/cpF/sl34zhne9ee0jmf9Dmq6F7qLPwJ/Nxo=
        "]], Line3DBox[CompressedData["
1:eJwVzblRAlAUheGLSyBgAWpEpDbBJkLOUAEBssxIBWopKKiA9mAoYgXYgVuk
gQEifgT/nP+ed997mXq3epqIiBrOtiKS2xE7WCKFXDKimXbOfzDjj7jSD1MR
eTlHz1nWnEPfvG9u4Je/encgR84OdCdYmPPmAq75xJtf+gJv8Td3duVEtyeL
+j8U7R/hho9XLpfYsLOJB/vrsqRryye8YIpb3Z07xzLkpd3SasZQV0aCv/t7
xO/5oZ0m1ngZFYydPXvvW1/hHf7hzjlauk95gX8DlS94
        "]], Line3DBox[CompressedData["
1:eJwVzT1OQmEUhOFjjN4gXI2tobG1dQMWFPKvEDZgqUYtTGiF5SBw0Q3YmqjY
6xpQTCSx9LnFm5kz35zz7Z9dd67WIqKLu0JEKY3YQ2xHpPR4K+KyFNHj//DB
v2AkHxcjqnSdPiW69N58oHeODfPCzbFswk9lNT7J91DDxPzq3q+3On/Df9kp
04rsGQ15QbeORn7HPKVNWqSJ7kDvCJt8S35L3/CJOTJZptumKT3UHaLJz2Qn
2OG//f3Az/jM+ym/y7fyXTya391beevwfX5pZ4AL2Q8d4h/XSyv+
        "]], Line3DBox[CompressedData["
1:eJwNzElOglEUhNFLYogi/hJ34GKcOgDsRRQFIVGIGo06pbVZjNjrDtwDbAAn
xhVwBpWvqu6rt1xp5ZupiFijzlxEshCxSKkkoi3n+EIm4jQbUcSRPOKb1KLh
vK1+Btfxyf2Z79qO0xFpfkPfk1/4tvumPMtv4Ste+OecOm7bujN+B/s2q7ou
7coZb0v4hn/0TntyFsv4490KDewm/tjX/eIBjvGSrujD+4ouwUMc2nzyd3ZH
co6v4r38xffca/ISf4zfeOufG+q71XXXfAMfbE50//hIUzwiLOk=
        "]], Line3DBox[CompressedData["
1:eJwV0MsuQ2EYheFPBxKKpIoiMTCuq9E7MERbRR1a1DFh4Nx27jqKUm4D08Zh
IG7A08HKu9b617/3zp5dKM4X+iIiRxcDEanhiFFKjEScy2l+cTCiOhSxhG/y
O79Du9RKRizr01h2lqV7/tLdOb5BY3Le5kr3wHf7I8axoHvEfc+p0altUbfH
r+C1fVd3J5fkCdtVbOMvPdGanMF1nLFr29+4982XdT+4gR94QIf0bL+pm8RP
39LBW3e2dFP8NtblF/7L+TRWdK944v4xnXlPVXfU+xfYsM/r/rBJ/xoHMAU=

        "]], Line3DBox[CompressedData["
1:eJwVzbkyg2EYhuFXaTsCW6J3IkqFA3AA0VHF0kTsKmIniROgSamJfSeoIkoN
MzLJjM6V4p7nfZbv/5Nj4yOptogYRa494rczoo6/7ogNvtEV0UQGw7Iq5tyb
urLdGXowIb+g59jSDfHr6OXTHRHbskv3FY7lffQG19jRzfvmh3yBZjHlza78
S5bnC+i3vcMt9nT39AEDLVo9Tu33dd/uHyxiGTX5Ej3QPdo/IYFJ+Qt9xqFu
2n+T7hma5yvuV5zYDdJ3vKGgW/W9T/kaXcGsN0V5SdawaeKI/wccuzvn
        "]], Line3DBox[CompressedData["
1:eJwVzjdSA2EQhNFRhr0DAgkXcAJMBgEBVUrJOIC4AzbGCkGKFd5dAk6AEUYG
FIKgipS3wVfd0z3/zqZnZnP5VERM47o1ItMRkcVfe8Qe/WmJuJIvt0UUzTuo
d0Zs00v5p70GBjGW5PjgL3RL3gzwi/TcXOdv9aPo52uo4kxX8L2afItuJnfR
xKluQn6PHnOf/QrecaJ7pW/oxa6+aG8Kx7oFd9dkG6jK1mlJXrb7gixGkpt4
5o90895k+IJsCIeyJ/MNP5z8A/+IBxzoVn2zIp/ECv+NL+zrxmV36Db/2k/T
Lsy58Q/GQzxB
        "]], 
       Line3DBox[{3281, 2501, 3053, 3511, 2369, 2500, 3119, 1329, 1330, 669, 
        2754, 3418, 744, 2703, 2499, 2753, 2552, 2702, 668, 3484, 2752, 741, 
        1328, 1327, 3118, 2551, 3068, 3514, 986, 2751, 738, 921, 667, 2750, 
        1026, 3522, 3087, 2498, 3117, 1325, 1326, 666, 2749, 3417, 735, 2701, 
        2497, 2748, 3416, 3356, 2700, 665, 3483, 2747, 732, 1324, 1323}]}}},
    VertexNormals->CompressedData["
1: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
C/k58ufCvr/1fsX/Cw1J/o0=
     "]], {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{270.3034327920655, 440.5416369319282},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-1., 0.9999999999990936}, {-0.9999999999999748, 
   0.9999999999999748}, {-1.9999997142857142`, 1.9999997142857142`}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.47725388424147763`, -1.285280798938956, 3.0935872377961573`},
  ViewVertical->{-0.41956437464490987`, 0.8868161575231571, 
   0.19370812653239106`}]], "Output",
 CellChangeTimes->{
  3.8135859611564274`*^9, {3.8135860609177046`*^9, 3.813586096792803*^9}, {
   3.8135861307259073`*^9, 3.8135861367169256`*^9}},
 CellLabel->"Out[141]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvfeXXEeyJlav7r1l2js00CAcCdfoRqMN0GjvHTyaJAiaIQcAQYAgOSRB
70nQzwxnFvvevt2R24V2V95BevIWK29XWK3M0TnSCkdHfwD+hKuMyIjMyLx5
qwp8b397OKca3VXV1VWZ340M88UXZ6+8f+Pam1fef+3qlT0b7165eeO1q+/t
WX/7XXVX9EeFQnGyUIj+1p5CrL5PC4Xwl+lC4S/v+Ms7/vKOv7zjL+94pDs2
4EsxvX79eox3RpvqW/jxrroV8L4YfixEf3bt2rUC//t/gi/RBN+V4bsHwcer
/h/rvXHjBvw4/Oqrr+a8pv2dxHwXfmZFv+bIK6+8Yl4z0ffB9/gp4N8/qvXb
J+jjwzvj3+Z3Wf+379Bv408lfZ/5Gf793//4fvuR3vkKfhubdaJ/8vUm6PUa
Wkd6PcBISr/3B/V9aAf1ZzJokq+yqh9vF69SBzi74GUkHNb14wcIBPgSNWBZ
iJbpmfhTk1mVGnj/x3IdXtHv5qb60/fVDaBQ+N/F47/Eb8t71AbcFsvzgN49
XLWF/008/0X8tgoXA8MKbvC78Dv8GvfgQ8rfewG/TTbpsZTez2X1OwVae/6b
iwCM/1X87nP6d2+K9wWvgb9LcL4rrYv83Yv2d1PxHPwbGpDxLfG54f5/KH79
afy2FPq4sGRN+hU2vVeXr/CkfgPwwv4rFFr1Y2xZYEEeqhu8cuF/Ea9xXm/S
plgA3syUn9+m38oDeqfwOvDB5Muc1Xsn1/Eu74H6NyL3XL9ccpfWGl4KXrLj
0qVLhX8gXvOUXiB4C3Id79Dboq3FX+N/rXZL+NPyu3Ve+kTtte/VDy+S6WAE
87u8L16pqN/Fsrx4i/pqXKYPXxDPc46qSN+XtR2F6A/ySj6sP9Um/R5fRPip
+vRbhbfFC8yLjRemeKt/pP/ct/LPkeG4Jt8q4Z4NJz4jga+DdnUlVnCTd+jH
+EKFH+7S8wryTdjXRWNFm8hGGA03/f22N9980/59fR98/xwvzUH9bn3M8VvY
qR++S+8SfuANhVX6n+Umwp0l9zt7OsnT5Dl6o/jTPvxayUMRPAj/78KnxQxK
BmwRwF/jXbTbj2y25nH9mUJXPLzsE/hweURaO/WPQYc///1H+4u79b4Gjet+
/Xz4yw/5PsL5fcY4/Puf8v9k2WLCQJ4w8a1car2GYTvdrz+1OYPo32V6HqxG
3begL7tyu7zs1D/GKmJup30P0iLjVg/o93BHgA3+wdKw2az7HsqBQ7zP7qjc
cN4K/Nv6soz48+J9tA1sW/G+/7HeNpTP8uWm/vH3sA3on23H51Q2xekgr3b4
qPBntLGKHItfdIGChivzbrQhNJ+cfoeNI64KuXmIVX7uY1lkGICO6ecbYyle
1zl1/gfxXkIGit7fLvn+hLNrLFJf9r3c5TU4hi8EP5LZdw4n+Q7ITl+TRwrZ
6ffkpUnXznsCF/p5XfoN+o4X26XjdgUesN2n93SH3jmuyn8vd0g/XveYox06
kHnvHfo95dnKSf17bKkQr5GLJFhV5z0dtL/D10OhiJ8oknagMGnX2yCSbIw8
HAr/nXhtbdoqQXtT0P4MrNGMfhl5HfDblmeN89J7LUgeCjOCxnnRvq17jjnE
w0K+yp7a67msX4j/iH0hu8b4B/9b8ZJkY4Pu5Jr7ofaII9Ex9f+NeD1yCXzX
EteQIhl2W/A+ej3HbsvX0wao5O8JP/dkYC+Ej2jMsHzJrXqb81xM+D34yKcC
aKF361jY/1q89JbaG3TOblDKZiix79YYBvmS3XZBM36gjgVcs1ty3yL+jf9K
vF6nfr2g6bygf9ec6+IjO4ZLvl579vUMsi/aJTQXJ70/x+j8l+L1WsJLCM+F
9/mc/fX73kvyMuBbly+po6pKngPFNpFe2jlSywEQ/BfipSt2dzKekrAJZjWf
DexY2T7P3Cf/Rim7wsYsXda/6xx22reBp9Cr/Of6ST8rXMnNrA3YdyUdI7yA
X8ZXgx8r7ksiKvTbKfw9/VDdyMS6Sf1haPDVRYeac8TR33fMlf7DhXv6obqR
iXUVQ8lAfWaUpIPEBh426Lr7+ffYNIFr8uR7ynVVbWJRHyeV4EVc0F4w/Clt
H+I9G8NbF1eGH1t8djCCW3Hz+cNRId58fjjafHE4uvzicLLn0nC5Wb8v58ik
9+rY0hrv1bsSc1Nyeyx4MpkD/aY7Ns8fim6e749vPzUQ3XvyUJxeGIzT9eG+
dHlkV3rxcJw+OxSnz6nbC0fi9BfDcfqiur00Ej98aTQeeX08oU/jnAwVixBj
vu/V/TR1E5YUdOa5XjpNsnXP+YPly2cPJrfOHozune2PH5w9FKWb6oPBh3ty
IE6fUrenB/UHPXWkO50dPeh80OePiA87Eqe/VB/21fFk5P3phEyc60OIvTOW
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
7S7TAziRm7TQRiZ5zXzrw8GCXKeFUP309ol8750yYRnZCGidwLLKKUQGomoj
rgtuWDA37ye/bygqtNp4vvzHDwvF6Jj8WiIax7YpR3HcNOr+wxM1OfYTI5KE
JxbS+nZrJCNRf18fzPFyknhShSZpxhaLXmIQ4xj59maCu16TQjGfwqQFYY11
Rn6XVHohMYslFhAxWKFYVet3fMzGfAOqNgyfN8kHQji+rz6Cun2zYlSauBrx
McD1KvBucA+/FASwL3iWh87cgsibm/GJ3fa3nBAcHXuU7dgDG5IWBl5H+qO+
2fQgdK+4PDCNxwPtxfGhw+SpPz+4N11Qj5UhVXOqx/lhlV6px7WRnvThWLtu
JE/Yi4S6cAa03vDuqgdaxjMFYZN1/DYwMMAuozZtVuAMOcnIMjillZs1WwFq
4HDGJHgEW86ORfbgbHHrOdbhC1QaColFjP+ufS7aMlvWZZ6AJtuV2f16nREr
fEI4VixJCZBDaXhCR3I9s2lYxOE8gsbJiGN+3rl9xfThYInWZn0/X07/tVzW
5J+szTLAF2NQ+FUbwPfz8Q4t3Ll9IgyV0SFGmTCIPhtm33icOdqDIvVol7rR
IEQHD2pV/f98f096fqAnPTegPmawL10Z3E04PDa0J50f2pfODB2g/6+NNQiD
H0+W//xkojL/fKq6NRI3fQg+Ne/yEt/FPRUukewvUmEuJCYblPJYjAkVEbup
PCAG+z92i1ue4yTf8o4cXxXlmFzsukRFm1VhVD0U0vBNM+Lp+nejNwWjw13p
9eMjNireubSSXhjZyWZUTglkCHMULss6XOp09fj+TmLGLb3NC0U7bbl77mCb
h74zb6OfgW1IRVWrlFBF0QxN74Jx3vPfWf/QmKmyM+0RBqL62i6lX66a9W6n
X8njsslO7vWWO7morWTj4PFYLT07slvblY/30fLj5zOV3760nbHSU9Oq5e6Y
Dz+Py7M30slddiSxcHd76ErAGan68FaxJ2jFkhTPnwIMIidwpHiSxsJF5e0O
K/EVJDtib26y3dscVcbyW/WYK8EmAcnzIzvSW+KivqEuasDUXug1PzwWTPWE
aAidJC2fU1He6PR0n6/P7qW4EMHjSaMzx//fHSmlP6vk8X+r6gVTL9jbYlp2
Z2p7+mB6G813cX1ixotxw/N5Pef9dgEjgx+XKrxC5hcDzp9XtOjnk5uLTDKL
+ukxLJ8ogOXBsotgeW+gRKmjTBvFKJdu4ieTjfTE6N50fuRA+mhqC47U2veL
5S5dwCMa/irUt2zUQp6RPky9O5wzzrnIwi25Mr0kqiVhnsseGAwfJyRq7o4W
kNCYHR9c1vSM8DbwmB1uCwa3klcTcIq1pXNvxEwc2DX9rpJtD3QZDs6VhSPU
kacy/+ZqujqzP6n4CGXq5Mm3XIbIvzAGqfPR3GI19SC/5aH0uLnj8ff3R3UD
6fHsNkIq5rnnx/eQDvL42L4CBrvIq40hgJkV6DFYpzVk4WkvFmpdO79CrIS7
C2/RWAxmF0/mttEOw08XutWz/3qpkWh7et6bgAcKca+Q14jt9og0D4yG7gPT
cX3mN6eIAPT+TDc9sZWxfX98udDe9WIuSTp1BQ8p0e8GspZCU4gklFc8CEfY
NnEIZ8tufwwsr3vBlWy2M25X8CkehDNmqEUR5ycModk54me7WzGuJPW5tkSy
UaZJVi2QG6bPBSC/88D4CagMYHVmH9Ba9bEsbV9O6EBrJQRZLLfZngiCALCa
g+WS+e19NK5LGTlA0MLKatS95dvFevrFArhen8431Ld7f3YLuQm9q47CO/M7
CcQA87Wp3enq5J707MRezMwKtCypQh4ZGJehgGccUxf3GuE3AHGM3P6OEZUg
5ALEqNqR0aCaw+IxDO4wqFPf6QcMn9s1iJ8a8PIaBpJvlvxSnt5mQPyG/y5B
vSlKOw4PxNzkl8bmvmVvjsKjtV0NgWt02JkCO6Kch+SicY1WhZPLUE2iG4Mz
SZe6DdikyA4pBdxU2yyc2XXrrKoWbgqizXWVQZw+vCl31OYgbnjyQCY8f9XP
XhFhgHWzDHDunbByG58aApx2iOvfHkZNAtze+i8JbtNuTYpiF50suSx5fcUQ
HZN6yF6niA2Ew5zDUG4yw7Gelkjr3JP6xiJbczPBvMdXnxjuBx83qeoMFqKk
MLNASK5GsonLEuAlXkTPs4Y3czGucwq2yhda0S0CdL6g46VwHXNDrwo8eLg2
qo5QuaSCnyP70uR4U06jAKG5I5imldOLE3vSu1fPanauyjWuqWKNwqkLzmVT
oq2Y5FcefDwNJt2zfzfbZjsoFyWUE27ZAcIBlO2PD0R8p7GcNFO/Q+HpJgeJ
7iD4cP7Z6JCeX9U0yKQ9g2ZkONiyiDEvnBeAaPRNr9ESi1iK7HVah3Ss9jqt
4xrV3xsWJ9CsMpo/1YthdnUjn/jNLMCzCUSbxqRnpemjWFJ0XliKTlH6W9tf
MPt9ZH2FM/42r2wAxWYQF2YeZhtemwAwp+sxOQZbKHEglzF5q9MklcK9O5uC
Jd9+mgwoq+xCjyCqee42SckmGQC1jaE+vbPYIp7N+TtJwd8A2ZxY/RtCGIwH
5si4QLrVCBjz2ODzqzo4/0LB2Y55q3bMi+EXZrvAMQq2fAxb9nmES+axeM2k
Fz/Cramdv6pXr5RNNYBlSis6NCI53FJjzMNwhrZDQlNpleMDmVaxSrByuAm2
lrWKYZER5ATojgiGpdwiHDSUbQR+xe5LyYnATmlRap5NtFl/prJh6sj4y+MV
PPFwywz+bYz1onjlOJ2Nu1r2YaGaYdk0VXwWJVy11l59wZ9ObuboG+lOJBqz
qPWYVma45yFke/L0nx5zF5ANuxUfTdXn35/aBHRx8sC9H04eCHqNSDG36uH2
V5NRewI6YyqWYakzTzLmcIy8YaNoVW9nI+2Yo2IjAtke8/GhrRjCLl+0Muy+
YrVCRsVvHW11d1c7uoud4RVKH1DRSfCe3F/vcOZinPHaUNtpuit4pryicFm4
sWFOHYMtXxQywlbNL+p9mfrGeY+xTEFPuKqeIzbaaGin/XOlI9ZKwzxMoRUR
Fr0QRmqRMt6tTSnm4SQ2bKl9Nl3+4aPT+2VSQMWYkW0CbXbnigdMotP8at7F
U4fX7Ea0yp9y7wBTIdXrKv0kxDx22waQaQYSzSzemWvJgXP5DaecCA27geSq
reK2y5VTsWDqFBPRbtk+3ffldbqQ/Sy9rXf0dpsLWiw4lwBshj8+MQ5/Wqj2
rdy9nEQWleUSuDhWMgT/cdqswV2FUb1bcismXdRSwE4fWHCeOtobMm+7mzJv
c9CXPp8ppx9embZXuWHgSkgFIVHuWwk4L2WPgWtGrWDIO+I4BzGMG5qhTga+
+Psy+316IqjbFNz2JmOl2VvZAq5o2rSZPVJ7K7KLe+rQpvT6ySmntlFR8PzI
Drvqgixc3ywR4sY0jU2a6PJ0Qz22RMDGkg3cx1/OMLDwZyncVdtCnHMoYzX6
x7f1XgCpRo/OUovE7zbEr0wiuclLJO8b7msziH2uIPbFLHFfeYrPmSLxSwy8
9vhNqXk3xS9dOO7bahMNxKTunDiyRCCYm/a2gLH892XSxK3ihWOMdeT0rHzL
7e1NFoUXnZdOJb2g7tebZ0VyeJKSQ2O/oAuk5Tdcf1Q9Q4aTOXHkOh6DGC9B
wKsFV6Wv53P3x69L1POw9cNZvQTgm0sHci3W6cmuHmmLIComMER5/cQQTz9G
Xz9LPP3tm5lyss3lcHwfJpc8REV4IdUXbMTFMzz83fTqLZSCMej/BJQENraJ
F8i3yotXHE4twGKX2GZvAaVyejm4Hy+p+1GMm9xeH1lLcO2Li1kOhPEcTe8n
dlfynQ9S0hezFTzUl/xyVkHgqzlk/WYjvE7aOJYtRmn8BTl+DxaHFdKP7p7T
d6S+ISmKWaj1EdTQ1YFaHEtwj/fvoL+DnITFpDPqAULSJBGR3kxPDO5ILw92
p9cHG+m9oZotLjCR/yhOB2XQ/SB34vmg+yE7ii9SwWBugCS2ILRdvARcSDRb
vbgR1HkGdz7quBLEXcsTFrbOcHbXW5sEMOLt94hrEsiz1+TFFQS1gs3cOiPo
4wqVz5sl85mmqYl09GNI+WQWgrrX/miikX4004FHIX0601FMP55Vf/tkVv3t
+VxdfRTMNr9UD/gcqkcBI3f1BTEH+m6xnv7E63PEvjBt6fKtIcb9cG7Xeqpq
XKTHRvYCewUAsZCe6u9VmZq1OlaPUwN96bHB3ens0L50YkjdNEP96fSQykmH
9qanhnenF0f60vtjjfTDyRqzONE1Zwx60c3HIHvESgz+OX7wtaZbQetBj88U
ojl0+50iQOQsrBDgezUCvnJOXWBf0IxoRA7REfI88J0b2ZG5PRUgS8FEx428
JfhwAHhrx1ZTLohwSB9vQNgdwZ8VRx7dRSvd1QODhWF1q40P9xOG1ZOFo/5P
y3WEMcrJIqJm5m3cG+vKFYa2Zewk7g3W0ptDjfTKcE96dnhHOj+8D4bZBThm
qx8Rmuyrk7sxN4SN21aXbllVsw+fKE0jZgAnN3pyeR6MAnsDVBnrYYZPlEKZ
U3IWZQWXFMWHCj9X52nd1SRsVaXxm7oc6ZLky1KFMDHXrkViVkU8H7Nr3tNF
say7EIH9plz8aEnG85kKX6NFe4sWkbUVcIsWjeBzwTY+cH+qCFbEEFs9M4Qw
SJUxsXt4atALWFmgfTTTyAVaV8v+D+CvPVCR6vZYT3p1rC9dGd2LzrEWTwBJ
Pr6ksyvj6wd+uSW+8DYmmfPvPLYkkYmOJleXZSLTIu2e7Ewk0/SJmp2SLJuG
XpDRb7XAaoiQFBika1u17kgWhrsQWZhzFGQR23FHw8msqwc7Web4HKNk3OJD
yV1BOcLgwISL8eNJBaoZhJwvgCoFLfWOrxTSFL4oUysAZEWAjKrPopxfLOq6
gEhpPLUAOQLkGmyNUPEs68/ADPGvF9tjbd6ul+6evTPZDZP+XteysIrgixpp
r/s15Q+C6PCHGY95FyEXUBJpMiNhOYNMxtQvWiJNkCA5PcNHc0rH6dnrohvF
MmXxfscSbxdbX8P41eaGv5X0DBYbZW8+Z+BXjISweiRcMdL4JCCs8S9Dbu+R
GwzM3NFav+ElXCeEhezc7yLsXLvVFS0OU4n+uGSWzxUwfVC/mc8WGunVk7P0
Q//j3K6wItDFJ2ZjN45WI3MxRt+9FjtnrFl/MtX4g6Nb0NHw0FdiUSSrfZl9
E7tK2chcZiV83UFHlpOG7QgA6EXAeO2wJ7g45dI7T54Qi28dblpbpoaF5BMo
4AnfPBPaGHBtkTAmmyrcG+Q2q7S65PJIjg24DrB35rqhTb1NlKL5JPFYuNOQ
0yMvmJ2in3br2ioxGf97JXOxlqTPnZ0ZhHRwlk7G+mjWJMF0Pj6abqc0UnQ9
XvAVesFDXWjsYVC3pgIm6Zsk6qRfunwbvxhbI/ASqAuIiM1Qx2EPMYRDIrs4
qi9BX7FsN0TkhL1N1roxuF2BQtyudPN2iuMTZmfycuTLVvIA6gKlXLBzLwQx
wCCtVZx9E8HZhsMdpq2GIPCzXe2qqVsPHz4k/xkQWjCqCtM7XJatpXdMDHhk
9LA5PgbUDBnSy0pMAPxVzqoMFAmlNHit0b/LLFDwDGn2CGSOmtgniRicDsph
N794Oas7dwTBrWVk1mK9FMoFTY7lEFrK8TFAfOx2Y9XsxYy/q7dtMqIFsRbA
Ct2ZIYwOzFaBT85DYlyAmsAsR1b+9dyHPmtGv3R8HQvMfr3R2JiEAppslCwa
fEKrADbAo8vL5C+DxXE/HOsIk8McDkCX5QDEyITM+/5kMsv5VhX3aw6dXpck
D51c8HrbnkzcfDr31ibbLyiYUleQuz1dAi6mLQKtXKi8NCzje475kMj0X1j4
Uwi1ljLCm2CLpj/ljxtU2ijRyT92I/cA+qhrFyjmVhPf5zKp5P4eGIEWnXpY
ZFvHGqcaowanCqHqd8itZMMBKNgy5SXiqVuVXbPEgOeGdfXdia1EucbU9enC
FplTGtO5nJwyz2pA5pbwQfrUuCWgr6fqKDBfe/2yhQazOaCtSPKKNL3l4UeW
61qmUAIM8tUohQhR24EME3B9yPosQfX3ikAKPtyitWTQim/hBVIFa+47l5pM
NGKBlOe+wamUpQ3nBB0BMmOdHSeOo3Kd0rPnAVrh3vIlAqoOqknxrwbUPNZV
KVTLFsh4uUauiZZ4pbAJayP0fx7ptIBzUiFStMAtejlpOddSQJIEPzJqmxOj
e+eXht7mnNRrG54PUWs43d6qlEQTCQBzE20j3NaSHdWZjkiM1mqtBTK0v2Z8
gtcDjJuwXMsDrOFlLwqe7bgel5TcoETX2ZiFXD3mxLDo/6BFDcQ2IiG2KwCj
81Dwu0GdwXOzlERRRsmu0dl9RQo0MFkrALbqbQq4NFD4kgCcF2mLMtIapktZ
khEYuEkxiLQ/NY20mzwK1r9ExP3niQ6a7sGdC81yZAzshwHBwzXOYout0ls9
ruC4V1398clUaf7ZVNWEXM9WLge8PkWBbfSziC3axo6kEUv/uRhWA9JfM6yK
4qktglWWQVJ1l/H75L0noKPGZyaNSFzdHGDMVYd+WsDtbdkvkvK3cMAMfD7T
+MSDIFo0QRUZ3fpZapwkk0To1klMQBCjsvrw/NnRWokgiDaAqrVAYEVu8PHC
FjpNLSexeWHV90asPP18phLrMeWB09twosGZZaoyqlwHJeNDkLN0tBk2XzPv
i42jOWAZcNK/JKGCK3JvZYPYVV9OVyNXP0MUSe686RJJRXAIsyAd4Ggr90iE
NAiZ5AKln2tGk/o4H6clg9Myx08Kn8WIMefG4mRRxslEylk+u67d6f9l4iXS
UQyhP1/sJkReGNudXj1cVb+6SLeTL/g8H+8Ps82nF19Ol2N9p3M5SPQoEG+Z
bHUpQKFpPYZ7cxBX+ppArRUYxrRWmwQMeaTEiV0uzZ/Kqe4IDHGbXxQwxIxx
TO86jZbtMv00Pnfm+FWZ2GB/OdyRd59XJfk2XhRaDGBenGe6Ha1+8zD8rRDb
7rlOSykeIR310Ph/I1IWZaTUIhX1q/r5lI6YX6iL3ZBZE82o1mu+z0/upb0O
F450EiPizNGe9Ex/T0IsiQLIO+r1Aj0Cni2rA93ptcFGemeoPX04XEvfG601
c9ok0wyDVo9GnYdW9itwaC2ICGg8gvCKdEViiZBTvRxaHZnV1GObI0DtFl8m
jJeUrBbdwLuSno7Mg04e2kTeBR2GR4hrnb+SegIhPjFxiDXne0wWLJS4Fuei
ygJcP9JwVb9M9WcBqFWI/3iK3NXTD6fq0Gqk7092pO9PdaQfqMfjyQYGe+kj
9bg/sSW9P7klfaAe9ya3pWvqcXtyOy1FuDG5s5DenNwJGvjkbmpjvDO9jeg7
Grm+p1UsjFY9VeCzm4vp+w9upv+lwqlDqrZkwxJ6yrYG2RR2evDtAnbtFMDt
Ad9h8HVilsHeamroQAE0nkQvLcDCcli6LI3sS2+P9xJCcULV6fz96xlLJlsz
tzu1qPJQKl00mctoSddSPGxa+jbgSc+BZjqUZpSy18SBEHUSv9zSCy7Pax63
KeWqJJ3aZGLq+WCChIqJWD113oTqSiQZULdEsBm2+OX1z9M106jiD8WTXFQv
zuzwAfUv9VJh7jSkLbAxbKFTWACRp4D3qtd95CASFPUpy6P7UP/CRWZ0byE9
O7ankF4c311Mr04AmfMjZBJPxvFEKmsWRYv+xg4E3zNaFfDtJTwxLUUBHN+f
35aeG+qzvgLeWEn2nthRGfkmuI13VfC8PdxIb4x0gxpET/+D6Qb1n76dtwHT
SzQNFPUWhBLefJT1UwE4pRsmg5P8ivn1YVW76erbhiInAm4Hwl8HpwmMvQKc
/uDa8R2lSKrDxtHOyIUPkF4kramVqVS9vb7Lb8RYZD4aYxQhfhtLyPDb4anb
lSPVdG28mx73x7sL4DYW0icT7erj/z5VU1G0RkuHUEEpEKmaQecCxfSzGeQD
9KB8FfnB81k7lacHWlZfzhmWbjV9PN2dLhjUwqsIqDVJaUiH1Nd8VlYNUtvf
1y5nliN9u1jbQLs01PqhTHpX3fmnjUHWnck+9ZRrr30/V41RwM96qP0/RmCF
x/+n/k6oreRX82uTB7bT64DXK+aC0S5eL95zmrMHoZnr8G6BRCnvAyReiSBX
8sNDsmSHTVXbmmcAbU7y4jefCuKH4u6orJwikVe2/SUNi5cqiA+FTg5NF/VQ
/1LZALhIKiVg6CKVreCRrIPhUohhmhVQ70q3B8rpkxmNYpgT3Vco/n6xngSq
BRFoywTb7y8Yv8uLbzoeL/dMUcC33DMdihf3mOuDHgdCsDpeT2eGD0oi+Z8B
dI0Sa5OAbiJxy4U+Nf8NbkGHyji1yLWloe8lQh4LESSlrhXQxt63PdL3Cenl
1o2VHeupzK8Z0J6PzKNW9tU7TVNVBFrbUIrR5GINVPk27j1wXsSJCr4Gt+pQ
J+cglgCbi1OMsyrFGDRrVnODx98AU7Nv4/7Mdtj75NZTUpSqFRCsCfzfBFbH
N4njtPulOqTqvkG0hY0qWbLELDANXk2T6i2TOxBeNVRLrCbk2ZSk4DFKYlx0
aZEp9hnIQCPoKM2yA+lHKDcnogG2I4LZPFY67gPHSq/ktKaQInRqCoBLcEJ6
XSxplW/rNUWWaKvarolCLbftIPg0IEUdXIjglAIqNRPxAFYB288B0Tycljyc
WraeSj1nfcj+Y6keWfWcaAs5hFL8Tn48v8uLpoKPEqSvm3PJxhnNv7GpEJp/
dLz+HNPmQVvc5W5H+WdFUZUUFw1Q6V9lDVTmpTBHhYU7I/37M0CV93LMTFNu
FOC35cglOHcNJqa7BTCZX88j3FDgb8tyAmbRBNOTevzkSXHOjuzwsBlj4jHm
ZLoqU1jOqkXRb38vkpPS1TpICaPNoVn0mck08le/enSxPhCwhMXgj8t10YqK
LA9QTwoCjE9UrmpiKJOlwERhs8yii5+bdes0sFuXFq7NNLDIsi9P7nmq7mcK
oUSHN3jcrRHIc1PPIsWs4yIP4WVRY5g5D6stghUCYYA0aosdzdEXlEJMiBLo
88KhGaw6QrzJJs00yY48TdZJiGzXXinN00zRoI81UbdGcMtU2Zj0G4FjvQBZ
otahDpL0ghXygJj4TL9iHlle/eLQTsXmuMUAl6bpJCxRqjZS/nR+l8ajoUVp
pMZucsRHaSLcitD/81nqSIEXxTe5x5o/4wGS4ybeZftOsf1wXPSqF7MiXghm
lnAgFPy8pAUoiunmGybo8W4YIfTRZVLZOACuzudcxO0iOLWSKmbrGh+v5eBz
8a9O8yzhQhyALnGoU5/0iWvdq3eYC9rhjy7o8kuCz8mBEt3M/3DOIfChQuBP
y3XPS/3fJztQrSMS+iVPPk2Eh+1lawGAH/fxOuDDMOLeVK9QbHhtJoM9vXe+
GvJDLpgWviSMRv1WTZPe4MgHHl50Do1MZcb71Iv9ahyPzUqdNyLvMyaCvi0l
QGmtUM3EqMPZ4sTFF1n6tQ/A3uDj8LNxFiLT6nbzgwGUSJ8MKAuEyoqdJPHD
QLOYh0r1JwZMKHSe24K8yFxoJ/pujtTEp0FLCRsTSdXv7SOF3JWxfRq5s9vd
Bk0U7CpGfrt6gH6nv5x9xauBMBXKA26e0wB+NR+YFVdwGvgs4DofG90HfnJs
/HlaAtdimm5vU5W/tpIDVObcF4Jogm5SuJvQRM51gBqbeb5hCokQxPhO6uOZ
0hTtFh3c5CG1Wa4o25gyzDJSY5x78xREa+J/FKnGfOS5Gdf/TyLVCUPUWf7J
TO0/nu9OTwjE/nKsTnUQYixGS5/eXJQR1tBFImVQc9ozlUHmN4SfW9Kep0cO
z38/VzRA9Uj5PlAjPJEIWVQs3HG2BG51piPzWGP/PGyWbGg2IYxt3QPIyq4V
Q4MHVrAhv3vFnxMVrVZpkzhFLeaVErthTSN59pIgwgL5k29tGKcFvFxJhZNM
+zBAJRZ0qxhN1peXBGhV9aEgQdttFzyHIvCOa/CykOTLa5qS96/Tm21Kis+L
U/ByWc+RLbBPDWX/W1VtfT1fu6CeWczQwMfsiyyjpLh2zC3ZzrTqtfpavZpJ
0Qo58BHSlol7Mwps25sDOCiQ3hS4FlV7SQCYMcPdRpmfAsgXp/clZbuFhelI
rSWpuaDOUPEL+CyGLdyk3x8PYFsKYVsAbjeG2XLG9mUWN7VglNLjG80sbRJf
kxgX2ifwa+1xu8Uuz/Y/WdAYBv3pwfxrJIwChhV2k79Kf461SM22rRffudkp
d5woc5XwpZL/bf1BUX6z2RXIouLeAA145VsAqCCFvBnHbSUCUH0gqiDepDdE
EnBNJQEnDm4yKQKrnjaLY8ZzWwYqN9TDxNWwt6PVVMx8lZNZwqvm+ah/faTB
OlGWgN0YWH36Mw1Ak//7YNXK0TYPrf/SjkbpM4VakJzPnj1L0fa/T3as38/P
t2WQndInwh3VUfoqLz4xVD4CpR9kfze9Txlko+xmQbr39vxxSFJ/74vjNbZE
23CfkxC0Bsu1CGjZ0RFpwa2LKx5oj79ddxRS9Xkn3tL2B+7zSjJQStpSLKHN
Nub9t3WKt3H5yV7QWFJBv3/9aAbixHH6nhnipWwITMcQXN4AgjV93yP/SQp/
yEx1oTbGTO3yQMwd1ufLWwjEl86dSt+d207Cexy/1SNt6cUjnUzy0xS/4wM7
1KuxNLArPT3QC33+yzCkf/vMUf28dtYpD9eyndASMTosZhCp1gF0rE8gAS36
ptwFlakls6ZiaQKhqWR2tizt22QX+Ko81BoPtZ758lUhu/myw8/UHBxRFhRw
0wuLAim4jKKu+tsoYIsg8wG7h+vXSL0PSNe3pE2Hbd/r06myLtRKslBz+K5I
gYomV+scuGj5rElMnPI/hO6sPuW/BMfli2tadb0yeYSSjStTewKC4NzAm+pW
hemcAjk9YDg3O/h2em2gkTvVsvD2Ga1/fDZVipKzDMR3utzDjmV1qhFnXKun
Glr7eTTWXEOv4M1vRgK5EQrYS13q6jtMYESacU04qSJ6nx3ewfNeDPlhVX56
XzU9cbiH3B0SvTmCL6FGcDjzcmXGtuyx8ds485eWxTHBCvD+SCs3QYAbUbhV
IUmln++N6leOH+AnPRhtT++NNNLbo93pjdGe9Oqo+lFHexUiLo7uUF/s3Oju
9PToHsMaXB7FyYZZ2JhCER7HRveltyb61Hmo/yWgawK3Jx+UJV/Iiv2nZcXq
AQUTuv55WnO4kUV/vtRNLthYrRlWf93ptSPVdEXBHB52y0N70rWhmrfdMEbW
Fr1hWvIa66+d9CDO1SH11wjikqbNsyoVxXpEUONb+uXAHQvqjQi420Q6Esmh
OYMBuIHkC7SGXSMbazAZ2bIrHApQGO3SFyA2qpBv2yyeqi9yKacr+zvILg6P
S8O9WMKr3qdOovptHB/eky4N7yUbOfVQReTQYeotYxAz1I9/Eod0Qb1/eZgo
sCN74G04siM9P7ojXR3tA/DTm+oQ3BvrJurTu+Pt6d8mauQQBsYtiHwAPEjd
z2fr3NFIRLJSClHuNDQvC3FB/dLR/FND/VaJN1mHXuzvKkZnHjf6q+nS4B76
+c8O9VFm8n5gkxHOPLDA2JEUPS2CD+0fDNOLkhSToNgZBw/UmNuNV7Zb4Fbw
YJryEHNRHnaOkQF1iUDJKK9FcpS1G6uUo3DYhIU1gibAXYtAnIcSOersWAIe
m31ILwEuYIWdKj0WD26liDQ/BOvbpaG96iUHsk8O7yaTRKydvqyQf224p5De
GulWP9l9FcERxZ/oFAc1lPpm6nYuIMtRTxvV/wfuUUDCoz4CbJQPJzj1wZ96
Hcv7CvA3xnpBL7eAvz+1jQxIm7rHtwzyfBFOPcPO/fms5pR/faWfZA2fU30R
rS1NMwTmuDAknRtSN9Nwg266v5tlRx7Q9bK6C9/PVWKSBg/sxLSRpliGLk4d
6HAJmmkLWDgyo8aRF1uqMP15iK+4YcvIxDfkLZuQjhYIAB/NV7TSG/jGQvd2
g/czAu9tAWCl30JQhDaboMiZoLRrYNnYVdzIKkkp2hyF8vQCJeol6gX8zT2o
rVIEgMnPoATE6oy9g1U79vH3yVp6dWw7hA+UrBxXEH5vegv553rrjXK1jU6K
kw/WNg+s1uB5pUI0HQRos1Exgteg9XxnsEab5XH0sV3+nZGaNXTGonKDVSzr
Wvt+rix6dza19vHKq2yZFGGYYS9m9/f4RHGamDSCyOyZ0eeCNWamwWANPLa2
RsDKpqQIa03yjxNmbyZg2hkBKwdx2ciL+WaEWbTMrGMRnI+bnh14MDWNLpFK
F4HZYgSm6kNFnHWYLYWY1VqzNqs1wwMcwdXxnQRjjDmw0hbMMbJ/9gKuWE7f
qt6xFKJXrjv68bw2yP9u9QDbxrgMuln3GYa+580dhYuJi0TtQqYAvFB+8eN8
OXnFNe+sPuyERLCl80iTmER4Ef7J4aYoXkTGVod4sZnD8xfQHHSktxnghZe3
yikot+AcQ4XgJIy5AHBXBMa1CBTDNBo/LcNTqnbk7F3kJ/xmfCiyP5oKDCuk
vYtI+x7AnIVuyaUIGehSKzBgluOPSoF0EDWi7P59qiO9rEA7b0B7QZUX2BT+
9UI95p0fw2vRZ+cy6Uwul3l691z69N453oOYhOj0OT959PGw3awO3x/Ppkr9
n06WY0oHA9AdulMh7Y54ivLCORdewCvGXCvGqJwStwWh0lB7ZEziOYocmAh8
vhG82ZRMfSa3ZLsvmfoiE0Dqy3BDZXded+ZU5ZVNfStxaMnUlycqsvecl/pK
fh1OBO6+d+nla4ZJQ5IROSzF1mIEk+pDdQS1D43NRvpM08nt47NpLYD421Qj
vSLwCnUuttobZW6zZYeBMEfjtJZZgvQDkyUv7NIjzBCqscmIJE+8N5pn7VoB
XINBNHXTPKhW2dK137jre5xdQ0/71VyeHl7NRSkiVIbhE1q8mtwhxxN9j0h0
paGmE+OYbtv5lTAh4AnbiqjWtkYgG3IdXfYabz4IQXl0VrJNHBVcceoV0XjV
uUBR5gIJIRfl16hNXJOSnxI42JYsbIuM1DLJDTykOpK5egnYpPi9qW5odi1q
4Z3+bL4R3UnSVJ2TxFcqIbZ+cucEqWwjgD0SX3QY8yH2px/ExQtGzyR28AHL
WE7Mfx6n1wDWk+NIb38WdctFxRxJGa1SWq2Asg5a86VjPslnbW0tvXxmORpd
t0WgKnngreSukusTm4JwdYl8+V0TPF4eqOq9H467HkE4CDQPh99c8Q5Mr53c
TLAxwb6oaxe6uQppea8pTLOe99bUzvSz+YbJEn7R23X8IUeQJHga3n+YsPvt
mV0CwiWRHtxtAt3s4I4ZlhW0fkV7zLpwrEgI++SfQiREv6bfNo8XPvTVzhq7
+6IJFjIkGSvZnMWc6yO5GhvjEbpwbjioylbZ9kgaK5PxVtJYad2xLYJyfht4
hwbNSS6cabhXcGlDUaYNSQzTJT97KOZJLDgMFy3LXYO3w4KXB9msk1yd2A1y
I3HZb0/vTD9faMTk6BGpT2YZAdHdVSy+258pwrLU9kfGlTtvhCFYwhe+tJ0v
VjzSHNrHseePWCQw400GvbQAYzLw5+bQJW/j7AIMP8WVuMXnerh1SzHMh8tU
QfYO8Hea1GtEG/TaAo0sDnVMTnaadq9ALz2aZLqh+0GMZSEBzbkUXiPjCaBe
YvVnAdhNijyVNpPpbEDeEIxxa7vQnITqDatbT8oBtKktqg2Zir6KQxsvd3gs
DR7soZcGdSV2zCIDAZH4jgY6r9kLlthn1+x9Zyjxd2d2xrKMHMLQY7NmL4S1
mGCsfWObZN782Ye2t0i56EK0neVpZVERAqQ/oKmUIJfaLb7N5XBa/X1rgGnP
k86nDAVQF/xMhnrOmK5kPouhbtplrxG6K5QJMLJFQtxKPiypFnn5MArrd18K
1QWAOilZAoZ5FIDrgs2QW8B0yVNjah59IG1XHyM4yv6CD60f7vD9mc1k4+v5
evp3BXGUhATxcQ3x54uN1rLo/3VKE+nvX17Jw3cT12VuAH/qYxs5ORicrzgQ
W8Ae1/h+1SXYdkJnqJxPj7+Z5R+TlXEg7pA0IplriKw5BmSF3nBVh+maccIc
m8Rxqn5iXz09e7CNwPs6/VmmBHrZXyAaTZIlzVikEM3yZGZKmFy5CYr/RiMJ
tsUwD43hosRwUsjNnCNQ1iS6oiTR5SvsEqcQWQ/ZTn6clEJka7ln3brnfbNQ
J9Ed9qQzyCG8+24ZXHQnjhf4lisDv7o2mj56sJbeGu9tzrBvZjeC3+czowwx
Y47//GOh9IrLpO0M2kf4a6axIRhEMYZ9ybO+V6CJkezZoSBYBZezWTcEueF9
9plojQncFaFkNxM45jKDVMHd4L0G59b1XmEX3x9ADX0mw9Q57KllU+dyeumA
pQMx0JNwjGGAzuw4iXOTeyQlG54Tmr1Zveg6rPxCc9lTSYCawlwxonwKF0A4
VUlFqkrkvlYN805pEmln0jCJejrfnZ4d30uG4yAzC/1TksnAEcfBKrp3dqoA
ZmghvXi0M+khF8iz/T30gB4Nxo+XBrrTqwON9OZge3p3sBbn44+5kbRKxH//
x0KRJyKenMQHuyeBMmCPMJ3Ldi4huUThoBaoYWgHwzoJbcEAZWjnzOsY2six
uULUWUg7hfQTh3vS5SN96fzRXenUwNvp2CDx+myyb560x/8JE27ZJ+G4Lgch
r5iniGX3fIsK2L8E6sNs+yPmiWrIFyXkk0Jeyq15/qWQ508U6QLZ85YMmbTC
u3oKscUnX2mrE6P40/aoVc8eVZD7iYihjXq7qX2N1vUPS/X0g7ktFOUZ+o/c
Gh5PzP+VIY1OTEykI0P96muNDx7GXGHwAHlHzg28SQ/2kRwfOpxoI0ltCgfW
0YRgXYFaiJ2L1MLW7etfn01Vuj6aS8QGCdsR9MHvDWIM+H/Nk6Wwkbm183Jx
2tSVObugeH1JrE3C/r7N8hcJ/h0mrgP4xw/3potHdzDw1ZMFMU0VqP1vprP9
r9P78KDRvDog2HzXEwF4bGAd5ujIhTjBwfNB+fSOTitpjl3AcWh6FIryKCSU
5fAwW5yD9QK/erMUB7RyDGKKwmKau1klKyss5m6t6g2PRlRUiPYiWovwvXg8
uy1dGjtojwlcLHFM/l9zITzBhXBqpJCxu+Csh9oyguBxe6idCElws7w20gP+
Ifl2Xhnto1/cp7pu+eE56wNI7eIfgxdyGq6PQVYVkM2UXVZs8pScDXwbxT+P
E2P432bwf/pQJ50B4BtYV2fA4L9MlwDOAN6HM3LqUFdSMp+n/q6p/OrSgHBA
VbYZP/8w789Mv/3xDqdEKF3vmTV25mgk7mwkzsHxPSNddh3zki1lvSKg7BWy
5pRkWube8QjT/k9t8/wz0ZLx0/5yIhQ1JWeIqR90StzayhbORonOxraWz4ZU
0KCr87PKmCC+Bc0aTNRT5px8enWCqoIbg21JwbXdI6ZEEVEBjzgfjHencyMH
yLgWU1r1c/351Xyl63t7X3jymWPeQfndpCdUGuuDUvJcYKgKGCK7XDMwInCw
NkUOjZoelowinPOkHG1ibIy52bCbmuVJfFT4usDxUB+vKjndhcfn4nNwhArm
bSf2uvtxU+Q8NCslJE9qG6d++0p0ZviRuVaSojw6CdXSTc9NWDyjvNCv/uPx
9vSd8QafHZ1c5Z4cJzlDReG0Of5psfqzFk9LnOqaXdpl9eqS8JpzbP4r4Ari
SnlkjhAyLWRc6lpJxLTKOSjR/Dmyd1Oa1zybrqWXxvX04c7kdnSxfvhpqZzE
XGy8M1P60xBcmRrg2crz1jbTzJT0U26rvNr8nLChAt6lvgrfJ6FLgiqbE0n+
O+uR/yr2kAQ5FV8p8ozgw9T1Y2kCJyOKnJhXl/TFi2kUuLG/erDEntUJ3Sgl
BDXay1tEaFPPFkfkvrGyvj6sSsPhnnR1uJdVCyeG96SLKjfGY3LYCBZq+Cul
BsdH9qaXxnbAQplIraayKLhsquxlU9ltH0nZ06X5+stSqL+Mbavjc+DWt8fQ
r3nfpfAIaHFao+kJkHUHLpGbF1b05THQ5hvaBTmV7JF+YkxwpLcINtR9PtfB
na0/1yb7XvvXCq9O8vqmy/ocbKc/y5JXa1kHoXs94wEXhYmfSXcQTyEgf1Xc
EsCaaevnLPGKJVksqZSHglkFdZEsbSTJ2hHRqMnNcq0UHLL5yifi6mF9ItQj
KdG5aE9vDrSnVwa700uDPen5wd707GBfempoB6muFob2ElEfdeIo1Zh4zh30
b5D4F9X78TimPvbM8A7ilkL5gxz69kgjXRtpt51b9cu4o950caQvXVHHCmUn
zhD2GKyqM/Rwojv9aKqWk2mxWFmlsl/MlPO0nEkTjVu+oQklWrIR5WiQYjE9
l+h2S96/7OocyS/n0/L1UoNOy6eL3XRa7J3hHZeIJQ8uZ9wbbMVD3HJ1VH5Y
KNOpxYWFVXzqQoKPrjkunhDIOy4V2bKSDAftvVedXxKnhaexvO8hppGQrhE4
MaYRm3NiuOeTk27xoTkpqDilIN3CwchLt/B2pGOcbu3J1QfFLHIzeonQJcNV
JVX6eZdwRgd3k2prVp2LKXUGJoYO27PMPRW8D2dHnSH1PnWa1Le6MNSbXh3q
psedofYCUjSy9iv59PWiU1m0kQYUuk/I4Fjxg6T7/Nju9PZEb/pksuGr+dc5
IAV7QErrieLWPRS5+yPdeFmcDL0ARR8OXtF7/+JC+s69m6hDRInek2v9w81a
1HxPDWXdno3FMp2Nfx/TSdvEcD84vqHHNFXm/gHxelfqP/AnYHX1pvlMiIh4
bbc0r+JN0p3iQAjtcyjuj5wTwQrmcxKbIx9/u14zRQJT1nKyLPqKIwj6kVJk
f+RstImfJ7TolRdIOMFwZUc9PfFWhQ4EDsbJwR3pOXWJXFSXCZReuFzuDNTU
Z64h6eLMq4iXUv0STIXCj5jeyJGN1b2DpBo9yrtj3emFUX0kcIngSJwY3Zve
GO9Ln0w1KMnOLlSryHwqVwktroVwiVVOIpVzFizDM7fCCM8ELpBb4730wt9Z
2l8Iaww5qMvzW8e5QAT4ccE7D9BjJMEmYKox/NzqRXAW6LgYddKv7Ekp59Bi
cmczlOzatRxr1rjUn8VyzTSh+BYzR/1ECmcgTKT6m0iSmpUWkm2cHWHoM3hX
vxrq+6s/i6bKWDMvj3okhHf1sz8w4cs8ijbyF9kEwJFB/WuAwF+ylLkCDT3a
KT94Ml5L7413p5dH+0j8jGMAxT+W8Fwd35G+r47BZzO1pODtE2wR/kl8I3s+
8kOZiMX+Jt/0Yp36AofgXr/6jV1eSR/eupxkTsDtYA1RxqFI8EMxxMA9+It6
ojendwO+0a3CS/IE+O8yk4z/DA8c4RTBIl+K5VgsEjhn5zgENNtsyb2cnAl1
3bx7fv/mWP4zGoG73JXO1LdmajvZvOUfAENqA/c8sJeC4F6UwT2J5TilPFVe
wQnx6lRb3x3vSU+N7qEwz64WVyd2pI+nuuFskVguhSDA5faHflioCDz7OwnJ
uqXk0Fvy0GtpoR3rghgDyttzb2iX3vk3/AHEOmac0tiQec4fUWu6girp6ccz
7dFNLz6O7aBO4JhGEcy/j63ICNWa6Dj2BaERb2sFwTmDaP4WyGQwNwBgp7hJ
ui+UNsUXW8iIzJlJjECEeceNIz5sC0BtwaYjSVGG56RZYoLuqQvUSWta02bi
KJ5UTyK1YXdP7N+6N9FDNTHwDoE0KPer47vTtalt6YczjcCAK0/rn+RsfI9J
UDNALwLoJSIYVW1hyygHwlFZXCfx7cPr56IDtjziXL4EhUQJa586A655SSAy
+O7zkxhiz+3Tb/t9MeLeKbT/idygwmDhGCc1Jwpg0mdW7BxsJTkBfYhnB7MR
aJcjkI3J85ox7mFodOuI7OREco8CsJ0Ube0EbBci0TkG79JLqlJKkltnmaJi
Yecm35RuWr34CvJY0AldKtIXhHi0xyGoRov8o9kGewMkhfzsvGU5YJIjrm7L
aAPZofY65mLzJpxP7ywbAl2zJdxNlSozlRfq/LwSidSLHsg9/28DcjkmsyA3
LnNe5JRtTgZ5oA5kkAc8Cwly9prnWTKDXM6S5yMgL4rvKAAc7n+RiXbsCcOw
806/zT4KNoQnJVsGmQehvdA0A4mGcB/jQVaS+PT+Up6yVW+e2yyNFk37UrOd
P5mu05T0xsR2i3HwOeF9cWNyZ/oxNNjzdU67XYZSbFEzWDRbPkVGIphy2gG0
TMk13D9VzE4fXFkBsBOpuQKa1wbXMUvMEvuxH/kV14n8LY7mGEMuunYhq6/y
7cK5CpMpSY6tMmcjOf3HGJoXI2gOPfWlTiYm+5NZC58mJNGAsoCzHksByqKq
t4G7JAM3HgUgutA0IaGZbsEmIklMsRJPSZIN6gkLrFbxBlxitSILCLES9p2p
LTT15DWKx8f2pTendtJGm28W6knugvANKwtrNgfH44lxvLW5+PTOkqdfcfOq
h6b53oK73O9fz1QM3FmaRY0SH+4vIpy46PIGzjw0gKPNRGlMJJKUUJZl6ENM
pInNbtsiiF+mP6sZsVUs945JAuWCL25kXjmkqSQO8SVXOuYAPsxU3tG5uKCK
5jIZNpCsJBsWHoIrN+nZFjBvlInSEeQXAnUWHOkeqWNwfXKnPQaQH0Ib/s7M
tvTT+UbE2qi5GLEYBPgKBWQA/sZAW/rw9mUO8uuJWt4dccPa2KodI2x5xU9L
qIEoQU+UOJOnZNc/JP6eknDhplMvZfIUXsaIN4e+BAz22EyWwS7ZPMcNUUGC
XQA4Xz3oc9jEocRXpyCjFXEF4D0pMuIJ8IUgRUflWQjagzLIJxmGtPM00BKY
kiSGri+vLbUofCll9eJCFKApb86dQzCiLeT17uca+0XbhgwM6t6f6aZsR4X/
Ag6AetnOjO+lpbqfLTSI/uzbzCRxmWISEXTxCUDuz/bQl5d1B+3i5B5tD72Z
PHRBi4a56IWBHhIDgP4ZCl9I9GLWSnw54zy+vpsnA8aYvGvBC//eAmmWdy1n
CtSanCXRI2gixhbq8nmIGdLxps+cjIePhDTuOmFoCjgSAU+z6cJGmQ1xloO+
zi0TZcyBSMITcfdlTkRRnohE3wKlkArqMp9morBC06Sn4C/2S2Ii3VB/btSN
FaluzJyMpBwOocSylU5PKPCVKgVgy3R3ant6YWKP3bkmZLxgQYcOpLmHo2gO
B9yl4SqNztKDe3fSK6sXcCLYO/1Ef196bGBXOjOoZ9s8zwYHBAZ48Le8NdJN
hpZMUsBg4Ts9hMXeFVbK/CBlYf7J4OW96yhlKtIzTLYkc5KhHeKSiB+Ksmfu
j8pWHQrLD5DEnVPmkjh+sIu+hWnJ0MlQ33azuBAiYkZpdsf50Ll9+lzwI3ZZ
9K93NIryaJhWjmtWeglSM5Z0UbI9k1wZe8GsyRCKAq2uSVrU/SbrScoqVtCe
lD26dMhXYMonH5LECsgENRqPZ3ON9G+zWyirsodmfF96fWo3bcb4aRnjgkjd
UI/WDWj83Ds1kj56uKaA35V4PXxTPNweqKXXBxvp6lAPkaBgCDtjDg+mchhS
gyl4ZXwH9MpP70/1wSEviW0oMgdFn6ES9zh5MXu+sKZMyMRZka3NnK1vUjMp
DkmztULsscs8nQsH6HEsR0QzMXDAjGVLVj2G42OPTpzULGlsXONjMcFNfWbU
l8SfVT47fm2Rc3jWXubwRHjSiafE4QOUOTxWZBxI5V9Kg1nKURjEV89VsrfL
nNi2XfZYPubc6NFu0sjICr5Xqdj7c1vIHGXJnCPIbW6oc/Rkblv61WIj6obC
B4jKI730+MZgG52fNaLAxdlvsRkBft0Px9qJ7IEp99nR3WzzDXMpnKGYMM07
QmU+XS+kp9pbTcYFvFMOTcj81CvjRbVVZF3hLgL1Nr5jTrnzo76j+nNuXYZo
NcMQVaeLSD6nD3Y20V46cptJ5fjaxFplVOeY06jXga4l9RXEoTIJm5v53tMP
3Xj1Cnc+U0nYc33Eoh3BbzAH6qXOU5Kn8vRWMOfq2gq+BYU7TwUjarPJGltf
FVs8VFl5pzlU5XD8RtM3TbnW3Jx/LNdpyRgyOnVJJVwTnZ/Ym96b2UkkUnDZ
3D7SKvHd7A4ncTvdJC2Pk/E0E/ZHd4TwOhWVwKoThq33TuXmnymeOvOxI7oE
nSl2TOPiOTR2Fe4rO8Q5EjYrfI5y/FT4HhLWbXgUcZTGI7xRc5TW5Y0WTb53
/mCVLzD6O76+Ku97IhdUyLOWRdCxvRXiWt84Yo9ZsuFzVgrPGc02wvnduucs
5pXRTE29MRVpi+4YWvtTCbU/ETl1ScqpnQVMJSR38MHTiWDZdxLQ587Iq8N9
PAF7+6dj9fRLdZvBYuDy5B6t9FG3HUSlsLT/ZrlBy4KJvR29zrq9cXcry3hc
i62CadAFQU3yRHPz8txVpNMG950dk7ssRyn00PsqsyK6zUFaaE5qTHStrpWt
TSbeHeJaYzIH/Ul320BwIGNk1TzdXBsrIMy9eJEuzDzdXK68VPL5+HAuvd1B
XSAcTnNA1ZdWR7SQe0KL8oSaFDOnh+11Lqx8NZzXuKb1RkXekWswyZGw5ii8
W1SxJmYNp84zk9KGVsfWvXsxYn0gzmc5HNfTiFMf0Y6w/Wfnm7gbny5sAbPP
6Vv7e/mUZq9FXbTRgHNAEK4iO4ViTfCTo3vlKfU64P4plabpOMQYhgq9xYXj
4oQGqj1vD4NYnZKj3Nti7sqcfRKxw8krgi4csHdnciBSxOFIuiJOc2v5iDK3
treJbC+vumOyod3BrO7wc0e7yLTCLK9OBJmoyLenKf9u0/m8c5RLP0O+1QwY
LvfwyJ8nlcPGepQJ4MzR/u8qyuNuC0mOSFYvafzCrhm11gtxpWDB2ZBU8s6j
TFWDZTAmVS3K2Wsith3VQ+MpS5nBmTzWv8O9mnghR7rstVnIYUI+ECPYPP3s
c6NuOTe+Z21wcDCJNeLn5IEs2v25rhFffXFMNNuN5o8VsPZ+DDLWVyNvFqcw
h+/IlZ+ct9Yjp/CNdQvBSkwqiCw1phbsDC7APK0sKxrRZkFReP5wJ32bq4fw
0tEOmGtUxXO9cZ1uyxtwEcPFWeXTGTY20R7DWe0vJx53GM5LBQgO1W8BUqgb
Qw1aS3FnqJ2WvD0YrnknM0xi/0bX4ToKdWmAxQr1cJLb9E5Uh7C0njg9adHw
xMlzrblb0LSMeDp4dWJAoU8KfgNTfRRzj89P7iUlpe684LXaalVW6iq0BUms
OpSCXTpxRrQrPGnBQoWnbCLIPrbJb05dbPuNHglXqeGSpzVkdS5npECsPHKi
gbnFgDa20aMjct4ObEBRGCaib0RUUx3iRov5/ISyWzwXnPPLB3F28Kdm7Km/
mX9dPlSipkwJB6+Ec6dgculIG12OWHJ76mhvelyFVCSuvqOTUxHjEsUDfx8n
G6ORoX76AO37VLK6XbOAqwDxrrqzjw/toa71qeHd9Dg3siO9NNKXrqrHVbN0
D104LN57OKZKpfFG+nhCHeMPJmr6XNFaB1cBlgIOnLnWivJaSzx1lm36r7uV
tamQt1kdWA41vGJNZVHmmYk4WiWP1k/8DDYUQkU/ocVa91aOJoWARhcTauFy
Q7z6ZNI/VtDD35nse6FeqpjRnH+yvKWVkhTKtBwpUjSnLGmIzFKY3easgOcD
FjMTih2wvS1UejFZItwfDuTKEpuaBvlVnS4KxXmiP/GtLxxqo3+VcMZw5x5u
S08d6UlPHMUW1eV+bFGdV09p2vP+KuHopBPYsTvwJt5fQEKDZFedw7NHutJL
h9vU70ed07LevnTlcFV9EngHF4500kOd3AItN22nw4vRKh44xFhRvaweOMyL
6jE/uDedHdwH2bD6/lND8L40knsnu9dnuELmExgpYYQL8fzK6F5oH9X3Gt2D
n29sd3pRPa6M70BVO9Gnruh7k73pw6ke0svg8ffpBukIPplFg+D5bL2ZsUQS
lwcX3BLkaqzRGWu4lGPVXIalWrQsVZ1r4M8tRGQirbCp2tdTg/FWFqQCCEaG
wZTener71R0zuSUoOGa8blCkjcWu87sTqwXO32zl54gKpXzMAr5GT3OqRuyk
se1upMlp7wI0L0Mh5EDklDH5dT2rUv7R8BxW9RGjB44WHaUjvXTU5tTzmFHH
xbN8MVkr6kd9knDmcPoKOEfoFqkDiczTPMgekrqn7ThZ1OyuONdaSmoYBCbm
VimluXa0ml5Xj6v97enl/s70Sn8jXR0gt6XBHvV92NsCj9NDOwogNKgvB+sK
3H9LtHSWVtPODOMATmYPILrzFZImgMCHB3iskCmcHlMH8MK4Sm+uTOxWvypw
W+9NbafHO9Pb0iczW4jrCivfZ/MNIvt9udCRfr9Yx6hNJnuBVlIne0lI7Ban
Rcyq7WnB2I7mt0v7dc5HiXk5qjmTigXZqMSpuT3Z99uxkX2GuOFpI2e90xIj
u14YPbqfQLQs2H6Gokr/ahcnKEz5AgbHZkHgkJRWEDi41pEsvx0b6D0iFZQp
31iTBXAxj1PpyMJ659nDr9J58M5Cnb4ljgj/H0fnjLpOzqmy69KhKt1RHfYY
lP1jUMWL247Xk5L4sutZ1igU3jEPDomiP0mjg0Tbg62pCuu+etwdVhnc7eGG
+q3eGNaeh9fV4/JIL0xaFJRUCgiDwJHd6Rn1gB/iSfU4NoKDsjiyT/3kuIdm
hw9iYKTeNjbcb4f+w/3k3wszU4+hpL5gpGuQMJaZvuqwvJXwC70CHmH9EnOH
kJqF98ddF+HpZOWPv0/Vn3485ZGU/owDOqYDzl3C5esn/aVxIssKCBeM6Rjh
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
IywhWPf5MwEdqwr3D4W66M4OOYMw0XLZxKxAsHUR1NiVdVD+kRb/KfpmFPft
NFaj2Q/ZmtI/0WpUcYgDqh3Gah8P12YZ03+OVovUpLUatWLaUf2/0FI/Q1+L
Tqm7y1gqoy+k5fdfo9VE7tFrtVb7iH1hSMi/0VJfjb+GLLXdWOrD9oWJIvt6
tFq0E4ZXk2YQfMbOTK6x899ptZ+lb0bllG3GanQwUjZM+A9a7efwsRTLf4k/
PWYs+P7AHhbr/me0oBywLhrYWpBzILkewSYtSIWUqtCApxtZq3VIq+FqlWhJ
bSHMJdsNtsf1+PiXX6DvRnXrLcZ6HTrIcMlGtGTEM9aS7SZ74Hp8esjXYq5B
jh411qMJfVmOxiX5uI1riCgAYi1EW2KzphEXGlALJdpuxFiSznXMmjdckk9p
oKpMrPI2G0s+Fa7S4mlcciRaMtJ71pJPhKu0zAwuycP6f4m+Hum/YWNJmmuQ
lTxcclu0ZFSPsZbko5xylgOX5BHtr9PXI2U4ZCx5PlxlVgDvjpaMuLsCMAwY
69LgFduQ4KK7aFGqSEUZc1jYWpJndOcK17gqj7P+Ffq64I6Xai25Yl8lsgmu
tydaT/Rjdj2ap5ettuKSPPKYak5x7bHfWJLmZ2UrmbjkdLSkMDuykbXk8XCV
lpHBJXna7a/R1yMl2WcsSdMn2jP7vmjJaH+LtSTtOM4WpXBJnlD66/T1SE/2
Gks+FK4yy+y0A6HAmhfqSWshGjTZhrsPqVWCksT3e4z1DuYvzNsYHuP4m/TR
SEm6n8vsVtWN1Rfsqw3m5ki0dKQs3Y/8bS1N97S95eE5g1Qiq2m96f8Xa2nV
Q6Zt0RVti45HS2v9eUsItJYmeWkvADzS7rfxMRoSDH9bq06Gm5iVgdPRqjoY
y606Hm5K1jLxqLTfoa+LGGSR3R0uNCsGpGy5khd3wtSMJWk2UjbLhUuei5Zc
1PffWvLu/FV6meAZVb9HX490aWksSbaxjSA8Eq0Xsai1Hpnv9tzP442oNhgr
0qqxJDkZ7T2wJ6IlI0VqLUmuUHsPjAfm/H78dVSkFWPJ4XCVWVYnx6/4A3hA
RZoshHdpIFxblrufUQsVjUiXup9oub7AM9nrImeZ65aRHhVdAH9309ttXa1n
9UrxkfecfBDtjD+1cHFZseNUxR/RFzQknkY+FCZve94TrSFKMVqDbkU2Nsdl
eCIElTy7N5Il8i7T+/T34nwToyLygZ/A71DZtfgTfCyFGyJkKDImH0ePdI+K
q+rUsXhitr0EmmJMt+L7H0zf707/M5kfj4Ume83wnTB93v4kJ6OME3/iwxnw
2x/IfNs4HqMaHY/R9tty8/GZyhrGuL3/f+Tbd3TlFCGVHif+0et1POTCWO91
JWBQY7HuYBEf2qBX4YiotZafZZx7vJgwO3BkEWUk27BlyHHisx6PSht+b/qH
w2++8OYLb77w5gv/X14oNv0XwJIDgQ==\
\>", "ImageResolution" -> \
168.],ExpressionUUID->"0d1160dd-746b-4713-a9b9-f6f1f70d784f"]
}, Open  ]],

Cell["\<\
\:6fc0\:5149\:8154\:4e2d\:7684\:76f8\:5e72\:5149\:6ce2\:8fd1\:4f3c\:4e8e\:675f\
\:7f1a\:52bf\:4e2d\:7684\:76f8\:5e72\:6001\:3002\:4e0e\:6e90\:81ea\:5b58\:5728\
\:5bf9\:79f0\:6027\:7834\:7f3a\:76843D\:53ef\:79ef\:7cfb\:7edf\:5f973D\:51e0\
\:4f55\:62d3\:6251\:6709\:5173\:7684\:91cf\:5b50\:52a8\:529b\:5b66\:3002\:4f46\
\:5bf9\:79f0\:7834\:7f3a\:5bfc\:81f4\:76843D\:62d3\:6251\:7ed3\:6784\:672a\
\:88ab\:7814\:7a76\:3002\
\>", "Text",
 CellChangeTimes->{{3.8135918115871973`*^9, 
  3.81359206206648*^9}},ExpressionUUID->"9a34e39a-45d9-410d-9dc9-\
38bf1bef6194"],

Cell[CellGroupData[{

Cell["SU(2)\:8026\:5408\:7cfb\:7edf", "Subsubsection",
 CellChangeTimes->{{3.8135920863465576`*^9, 
  3.81359209411858*^9}},ExpressionUUID->"9daac6ed-8216-48f5-b087-\
f4be75093b18"],

Cell["SU(2)\:6b27\:514b\:53ef\:7528\:6765\:7814\:7a76\:7ea0\:7f20\:6001\:ff0c\
bosonic realization\:548c\:91cf\:5b50\:6da1\:65cb\:6001\:7b49\:3002", "Text",
 CellChangeTimes->{{3.813592107979624*^9, 3.8135921207826624`*^9}, {
  3.8135922390969057`*^9, 
  3.813592261128975*^9}},ExpressionUUID->"9487c9cd-636c-4ed3-a302-\
ef4a4d7ceb90"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:73bb\:8272\:5b50\:5b9e\:73b0", "Subsubsection",
 CellChangeTimes->{{3.8135937477252755`*^9, 
  3.813593751634288*^9}},ExpressionUUID->"f95ca06b-2843-430a-b5d2-\
651dc2e9502e"],

Cell["\<\
\:73bb\:8272\:5b50\:5b9e\:73b0\:7c97\:7565\:5730\:8bb2\:662f\:73bb\:8272\:5b50\
Fock\:7a7a\:95f4\:4e0a\:7684\:8868\:793a(\:5c06\:674e\:4ee3\:6570\:5d4c\:5165\
\:5230\:73bb\:8272\:5b50Fock\:7a7a\:95f4\:7684Weyl\:4ee3\:6570\:4e2d)\
\>", "Text",
 CellChangeTimes->{{3.8135937655423307`*^9, 
  3.8135937758083816`*^9}},ExpressionUUID->"4b83c3f7-0e28-48d0-91f1-\
9579a9eba672"]
}, Open  ]],

Cell[CellGroupData[{

Cell["tiny SU(2)\:8026\:5408", "Subsubsection",
 CellChangeTimes->{{3.813592304096119*^9, 
  3.813592312586135*^9}},ExpressionUUID->"3d0f417e-3b08-4baf-b64f-\
24fbae9121c1"],

Cell["\:82e5\:65e0SU(2)\:8026\:5408\:ff0c\:91cf\:5b50\:80fd\:8c31\:4e2d\:5b58\
\:5728\:8bb8\:591a\:7b80\:5e76\:6001\:548c\:80fd\:9699\:3002", "Text",
 CellChangeTimes->{{3.8135923241739035`*^9, 
  3.8135923560536084`*^9}},ExpressionUUID->"e89cfeef-77c8-414c-90c5-\
ebc3a2101d35"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:91cf\:5b50\:80fd\:8c31", "Subsubsection",
 CellChangeTimes->{{3.8135923724426603`*^9, 
  3.8135923741956654`*^9}},ExpressionUUID->"12a6288f-7a45-4c6d-96f4-\
a34ede6c0ed3"],

Cell["\:6a2a\:7eb5\:9891\:7387\:6bd4\:7684\:51fd\:6570", "Text",
 CellChangeTimes->{{3.813592393065304*^9, 
  3.8135923968363132`*^9}},ExpressionUUID->"e8efaf80-372c-4df8-89af-\
875a7d583241"]
}, Open  ]],

Cell[CellGroupData[{

Cell["tiny SU(2)\:8026\:5408\:6253\:7834\:539f\:7b80\:5e76\:6001", \
"Subsubsection",
 CellChangeTimes->{{3.813592412863366*^9, 
  3.813592435045434*^9}},ExpressionUUID->"7a06c659-67fc-42cc-aed7-\
70a1359ed17f"],

Cell["\:539f\:7b80\:5e76\:6001\:9644\:8fd1\:5f62\:6210\:591a\:79cd\:65b0\:7684\
\:7b80\:5e76\:6001\:548c\:80fd\:9699\:3002", "Text",
 CellChangeTimes->{{3.8135924514134846`*^9, 
  3.813592467622533*^9}},ExpressionUUID->"0af0aaf2-e94b-4812-a89e-\
f597dada97b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:66f4\:7cbe\:7ec6\:7684\:7c7b\:4f3c\:80fd\:8c31", "Subsubsection",
 CellChangeTimes->{{3.813592478853591*^9, 3.8135925035066447`*^9}, {
  3.813592558273816*^9, 
  3.8135925584018173`*^9}},ExpressionUUID->"14d3cd90-7d5f-4c13-aaa2-\
b416f43a5e37"],

Cell["\:539f\:7b80\:5e76\:6001\:9644\:8fd1\:5f62\:6210\:591a\:79cd\:65b0\:7684\
\:7b80\:5e76\:6001\:548c\:80fd\:9699\:ff0c\:8868\:73b0\:4e3a\:66f4\:7cbe\:7ec6\
\:7684\:7c7b\:4f3c\:80fd\:8c31", "Text",
 CellChangeTimes->{{3.813592542704767*^9, 
  3.8135925566158113`*^9}},ExpressionUUID->"2e266ede-08fd-4725-a6cc-\
9676b44d2702"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:65b0\:7b80\:5e76\:6001\:7684\:8f68\:9053", "Subsubsection",
 CellChangeTimes->{
  3.813592621568022*^9},ExpressionUUID->"15b9a900-4f31-47fa-ad8f-\
41fc12c82ab3"],

Cell["\:65b0\:7b80\:5e76\:6001\:7684\:8f68\:9053\:4e0e3D\:53c2\:6570\:9762\
\:6709\:5173", "Text",
 CellChangeTimes->{{3.813592591394928*^9, 
  3.8135926115759788`*^9}},ExpressionUUID->"c475c6d3-4cf2-44b5-a607-\
4aaf75c04698"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:62d3\:6251\:4e0d\:53d8\:66f2\:7ebf", "Subsubsection",
 CellChangeTimes->{{3.8135926367160788`*^9, 
  3.8135926391280656`*^9}},ExpressionUUID->"13c4e8fd-6a3d-4943-8804-\
d0c908308e25"],

Cell["\<\
\:6a2a\:5c42\:6790\:9762\:4e0a\:7684\:62d3\:6251\:4e0d\:53d8\:66f2\:7ebf\:5f62\
\:62103D\:53c2\:6570\:9762\
\>", "Text",
 CellChangeTimes->{{3.813592643557079*^9, 
  3.8135926749581766`*^9}},ExpressionUUID->"265210fa-0821-479c-9d13-\
78b7ed953a4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:542b\:65f6\:548c\:5b9a\:6001\:76f8\:5e72\:6001", "Subsubsection",
 CellChangeTimes->{{3.813592686376231*^9, 
  3.813592696357243*^9}},ExpressionUUID->"cbb08ace-cfe9-4a2b-8c53-\
281f5eb8ec50"],

Cell["\:4ee5\:8868\:73b0\:8f68\:9053\:76843D\:51e0\:4f55\:62d3\:6251", "Text",
 CellChangeTimes->{{3.8135927065162964`*^9, 
  3.813592731090349*^9}},ExpressionUUID->"5013a93b-95be-4386-98a6-\
d29b50a39959"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5b9a\:6001\:76f8\:5e72\:6001", "Subsubsection",
 CellChangeTimes->{{3.8135927449753942`*^9, 
  3.813592749416408*^9}},ExpressionUUID->"454ecb5e-f13f-49b3-8703-\
252edb019270"],

Cell["\:7814\:7a76\:5c0f\:91cf\:5b50\:6570\:7684\:6ce2\:7ed3\:6784", "Text",
 CellChangeTimes->{{3.8135927590174475`*^9, 
  3.8135927684584665`*^9}},ExpressionUUID->"6b40b2b4-4351-4f5e-8694-\
7d2cc24286e0"]
}, Open  ]],

Cell["", "Subsubsection",ExpressionUUID->"e79a81ea-cc7d-4e41-b95c-5b339476f18a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"499da7a9-1c46-4464-9383-27d860e677a4"],

Cell[CellGroupData[{

Cell["2. \:5e26\:6709SU(2)\:8026\:5408\:4f5c\:7528\:76843D\:5bf9\:79f0\:8c10\
\:632f\:5b50 \:80fd\:8c31", "Section",
 CellChangeTimes->{{3.813592869681334*^9, 
  3.813592898503559*^9}},ExpressionUUID->"3f32aba9-02b2-4a49-a028-\
828041b0eb5f"],

Cell["3D\:6a2a\:5bf9\:79f0\:8c10\:632f\:5b50\:7684\:54c8\:5bc6\:987f\:91cf", \
"Text",
 CellChangeTimes->{{3.813592944430702*^9, 
  3.8135929555947576`*^9}},ExpressionUUID->"82b005bd-7db6-4c25-9061-\
f4004600d576"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["H", "TI"], "^"], "0"], "\[LongEqual]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "1", "\[Dagger]"], 
        SubscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "1"]}], "+", 
       FractionBox["1", "2"]}], ")"}], 
     SubscriptBox["\[Omega]", 
      StyleBox["o", "TI"]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "2", "\[Dagger]"], 
        SubscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "2"]}], "+", 
       FractionBox["1", "2"]}], ")"}], 
     SubscriptBox["\[Omega]", "0"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "3", "\[Dagger]"], 
        SubscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "3"]}], "+", 
       FractionBox["1", "2"]}], ")"}], 
     SubscriptBox["\[Omega]", 
      StyleBox["z", "TI"]]}]}]}], TraditionalForm]], "Input",ExpressionUUID->\
"5a3425ee-de6c-4785-8d02-24d812ba1a0c"],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Omega]", "0"], 
   SubscriptBox["\[Omega]", 
    StyleBox["z", "TI"]]}], TraditionalForm]], "Subsubsection",
 CellChangeTimes->{{3.813593004148887*^9, 
  3.8135930139589195`*^9}},ExpressionUUID->"751e783a-d7d0-480d-9c1d-\
47406de609de"],

Cell["\:6a2a\:5411\:9762\:548c\:7eb5\:5411\:65b9\:5411\:7684\:975e\:6270\:52a8\
\:9891\:7387", "Text",
 CellChangeTimes->{{3.813593016544926*^9, 
  3.813593056530054*^9}},ExpressionUUID->"1db40308-622d-401e-ba13-\
34479695e595"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
\:6a2a\:5411\:9762\:4e0a\:7684SU(2)\:8026\:5408\:ff0c\:5e7f\:4e49\:54c8\:5bc6\
\:987f\:91cf\
\>", "Subsubsection",
 CellChangeTimes->{{3.813593063121071*^9, 
  3.813593094675231*^9}},ExpressionUUID->"fc3114c2-f563-40dc-bad9-\
2f4ba196fd0a"],

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox[
    StyleBox["H", "TI"], "^"], "\[LongEqual]", 
   RowBox[{
    SubscriptBox[
     OverscriptBox[
      StyleBox["H", "TI"], "^"], "0"], "+", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{
       StyleBox["i", "TI"], "=", "1"}], "3",
      LimitsPositioning->False], 
     RowBox[{
      SubscriptBox["\[CapitalOmega]", 
       StyleBox["i", "TI"]], 
      SubscriptBox[
       OverscriptBox[
        StyleBox["L", "TI"], "^"], 
       StyleBox["i", "TI"]]}]}]}]}], TraditionalForm]], "Input",ExpressionUUID\
->"90b96385-5c6b-4d82-8118-2614ebf99f50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:8026\:5408\:53c2\:6570",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CapitalOmega]", 
    StyleBox["i", "TI"]], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b4f14eb5-541d-49f9-8859-c045efcf21d3"]
}], "Subsubsection",
 CellChangeTimes->{{3.8135931198063097`*^9, 
  3.8135931333559055`*^9}},ExpressionUUID->"a3ee1c6c-e1e8-41e9-b2be-\
1a3036106332"],

Cell["\:5b9e\:53c2\:6570", "Text",
 CellChangeTimes->{{3.8135931444579315`*^9, 
  3.813593149145947*^9}},ExpressionUUID->"0cd7fcb3-8167-4fbc-b3fe-\
cf96ef527b23"]
}, Open  ]],

Cell[CellGroupData[{

Cell["SU(2)\:7b97\:5b50/\:65bd\:6e29\:683c/\:89d2\:52a8\:91cf\:7b97\:5b50", \
"Subsubsection",
 CellChangeTimes->{{3.8135931508119507`*^9, 3.813593168876007*^9}, {
  3.8135932263551865`*^9, 
  3.8135932310481987`*^9}},ExpressionUUID->"97b838e4-c1e7-4e5d-9379-\
3133141bca5a"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["L", "TI"], "^"], "1"], "\[LongEqual]", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "1", "\[Dagger]"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "2"]}], "+", 
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "2", "\[Dagger]"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "1"]}]}], ")"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["L", "TI"], "^"], "2"], "\[LongEqual]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      StyleBox["i", "TI"]}], "/", "2"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "1", "\[Dagger]"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "2"]}], "-", 
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "2", "\[Dagger]"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "1"]}]}], ")"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["L", "TI"], "^"], "3"], "\[LongEqual]", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "1", "\[Dagger]"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "1"]}], "-", 
      RowBox[{
       SubsuperscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "2", "\[Dagger]"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["a", "TI"], "^"], "2"]}]}], ")"}]}]}], 
  TraditionalForm]}], "Input",
 CellChangeTimes->{{3.8135931823630514`*^9, 
  3.8135932160521526`*^9}},ExpressionUUID->"69378ce2-8aca-4b26-8b5d-\
907a4c994d75"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:8026\:5408\:7b97\:5b50\:7684\:672c\:5f81\:6001\:ff0cSU(2)\:4ee3\:6570\
", "Subsubsection",
 CellChangeTimes->{{3.813593260565301*^9, 
  3.813593274029333*^9}},ExpressionUUID->"44f3dd3f-9c3f-41e2-a6cd-\
094d2b95d2cf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"M", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", "\[InvisibleSpace]", 
          FractionBox["\[Alpha]", "2"]}]], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Beta]", "2"], "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "\[InvisibleSpace]", 
          FractionBox["\[Alpha]", "2"]}]], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Beta]", "2"], "]"}]}]},
      {
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", "\[InvisibleSpace]", 
           FractionBox["\[Alpha]", "2"]}]]}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Beta]", "2"], "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "\[InvisibleSpace]", 
          FractionBox["\[Alpha]", "2"]}]], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Beta]", "2"], "]"}]}]}
     }], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"M", "//", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tr", "[", "M", "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Det", "[", "M", "]"}], "//", "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.813593303493424*^9, 3.813593477292272*^9}, {
  3.8135936416889486`*^9, 3.8135936633060136`*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"8c8cba0b-b76b-40a2-90bc-79f927bce42e"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        FractionBox[
         RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "2"]], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Beta]", "2"], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "2"]}]], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Beta]", "2"], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "2"]]}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Beta]", "2"], "]"}]}], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}], "2"]}]], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Beta]", "2"], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.813593370379181*^9, 3.8135934777072754`*^9}, {
  3.8135936459899597`*^9, 3.8135936638180265`*^9}},
 CellLabel->
  "Out[170]//MatrixForm=",ExpressionUUID->"441b0aec-a6c3-43b4-8d0e-\
e8183a7e90d7"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Cos", "[", 
   FractionBox["\[Alpha]", "2"], "]"}], " ", 
  RowBox[{"Cos", "[", 
   FractionBox["\[Beta]", "2"], "]"}]}]], "Output",
 CellChangeTimes->{{3.813593370379181*^9, 3.8135934777072754`*^9}, {
  3.8135936459899597`*^9, 3.813593663829014*^9}},
 CellLabel->
  "Out[171]=",ExpressionUUID->"93ecfed5-1455-4553-b703-d7169b703ff1"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.813593370379181*^9, 3.8135934777072754`*^9}, {
  3.8135936459899597`*^9, 3.813593663837015*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"7cf830ca-8aae-491c-8013-9874a192c2dd"]
}, Open  ]],

Cell[BoxData[{
 FormBox[
  RowBox[{"\[Alpha]", "\[LongEqual]", 
   RowBox[{
    SuperscriptBox["tan", 
     RowBox[{"-", "1"}]], "(", 
    RowBox[{
     SubscriptBox["\[CapitalOmega]", "2"], "/", 
     SubscriptBox["\[CapitalOmega]", "1"]}], ")"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"\[Beta]", "\[LongEqual]", 
   RowBox[{
    SuperscriptBox["tan", 
     RowBox[{"-", "1"}]], "(", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SubsuperscriptBox["\[CapitalOmega]", "1", "2"], "+", 
       SubsuperscriptBox["\[CapitalOmega]", "2", "2"]}]], "/", 
     SubscriptBox["\[CapitalOmega]", "3"]}], ")"}]}], 
  TraditionalForm]}], "Input",
 CellChangeTimes->{{3.81359371345617*^9, 
  3.813593725551216*^9}},ExpressionUUID->"cdde1287-29e8-4946-8aad-\
822734505682"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:53ef\:5206\:79bb3D\:8c10\:632f\:5b50", "Subsubsection",
 CellChangeTimes->{
  3.813593894151684*^9, {3.8135939249577813`*^9, 
   3.8135939388688445`*^9}},ExpressionUUID->"b56978f9-bb2c-4a92-9175-\
b661ac54587d"],

Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox[
    StyleBox["H", "TI"], "^"], "\[LongEqual]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "1", "\[Prime]\[Dagger]"], 
        SubsuperscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "1", "\[Prime]"]}], "+", 
       FractionBox["1", "2"]}], ")"}], 
     SubscriptBox["\[Omega]", "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "2", "\[Prime]\[Dagger]"], 
        SubsuperscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "2", "\[Prime]"]}], "+", 
       FractionBox["1", "2"]}], ")"}], 
     SubscriptBox["\[Omega]", "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubsuperscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "3", "\[Dagger]"], 
        SubscriptBox[
         OverscriptBox[
          StyleBox["a", "TI"], "^"], "3"]}], "+", 
       FractionBox["1", "2"]}], ")"}], 
     SubscriptBox["\[Omega]", 
      StyleBox["z", "TI"]]}]}]}], TraditionalForm]], "Input",ExpressionUUID->\
"b0b0a9ce-b6a6-4106-8c81-4ae8bfc44158"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["\[Omega]", "1"], 
   SubscriptBox["\[Omega]", "2"]}], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"ee242d68-708d-423c-98b8-8e897ab657be"]], \
"Subsubsection",
 CellChangeTimes->{{3.8135940111804857`*^9, 
  3.813594018360507*^9}},ExpressionUUID->"904507bf-1540-4825-bc93-\
4fe165ecab39"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox["\[Omega]", "1"], "\[LongEqual]", 
    RowBox[{
     SubscriptBox["\[Omega]", "0"], "+", "\[CapitalOmega]"}]}], ",", 
   RowBox[{
    SubscriptBox["\[Omega]", "2"], "\[LongEqual]", 
    RowBox[{
     SubscriptBox["\[Omega]", "0"], "-", "\[CapitalOmega]"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"\[CapitalOmega]", "\[LongEqual]", 
   RowBox[{
    SqrtBox[
     RowBox[{
      SubsuperscriptBox["\[CapitalOmega]", "1", "2"], "+", 
      SubsuperscriptBox["\[CapitalOmega]", "2", "2"], "+", 
      SubsuperscriptBox["\[CapitalOmega]", "3", "2"]}]], "/", "2"}]}], 
  TraditionalForm]}], "Input",
 CellChangeTimes->{{3.813594049478603*^9, 
  3.813594049974614*^9}},ExpressionUUID->"58eb2086-ba82-4358-b336-\
dd48ca8b469d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:672c\:5f81\:6001\:548c\:672c\:5f81\:503c", "Subsubsection",
 CellChangeTimes->{{3.813594064741208*^9, 
  3.8135940742222395`*^9}},ExpressionUUID->"5cdc56a1-0fc0-4b15-8c90-\
0933403bc728"],

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox[
        RowBox[{
         RowBox[{
          RowBox[{"|", 
           StyleBox["n", "TI"]}], ",", 
          StyleBox["m", "TI"], ",", 
          StyleBox["l", "TI"]}], "\[RightAngleBracket]"}], 
        OverscriptBox[
         StyleBox["H", "TI"], "^"]], "\[LongEqual]", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           SubsuperscriptBox[
            OverscriptBox[
             StyleBox["a", "TI"], "^"], "3", "\[Dagger]"], ")"}], 
          StyleBox["l", "TI"]], 
         SqrtBox[
          RowBox[{
           StyleBox["l", "TI"], "!"}]]], 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           SubsuperscriptBox[
            OverscriptBox[
             StyleBox["a", "TI"], "^"], "2", "\[Prime]"], ")"}], 
          StyleBox["m", "TI"]], 
         SqrtBox[
          RowBox[{
           StyleBox["m", "TI"], "!"}]]], 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           SubsuperscriptBox[
            OverscriptBox[
             StyleBox["a", "TI"], "^"], "1", "\[Prime]"], ")"}], 
          StyleBox["n", "TI"]], 
         SqrtBox[
          RowBox[{
           StyleBox["n", "TI"], "!"}]]]}]}], "|", "0"}], ",", "0", ",", "0"}],
     "\[RightAngleBracket]"}], 
   OverscriptBox[
    StyleBox["H", "TI"], "^"]], 
  TraditionalForm]],ExpressionUUID->"7f7b9111-503a-4871-9d0d-7cfabc2c89ad"]], \
"Text",
 CellChangeTimes->{{3.8135936793380623`*^9, 3.813593683015073*^9}, 
   3.813594091622303*^9},ExpressionUUID->"81fa65ae-3eca-4efe-9985-\
5bbed9c2c80b"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    StyleBox["E", "TI"], "(", 
    RowBox[{
     StyleBox["n", "TI"], ",", 
     StyleBox["m", "TI"], ",", 
     StyleBox["l", "TI"]}], ")"}], "\[LongEqual]", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       StyleBox["n", "TI"], "+", 
       FractionBox["1", "2"]}], ")"}], 
     SubscriptBox["\[Omega]", "1"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       StyleBox["m", "TI"], "+", 
       FractionBox["1", "2"]}], ")"}], 
     SubscriptBox["\[Omega]", "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       StyleBox["l", "TI"], "+", 
       FractionBox["1", "2"]}], ")"}], 
     SubscriptBox["\[Omega]", 
      StyleBox["z", "TI"]]}]}]}], TraditionalForm]], "Text",
 CellChangeTimes->{
  3.813594107382341*^9},ExpressionUUID->"93b658fc-fc15-4c89-9205-\
dedaa5cb0fd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:91cf\:5b50\:6570", "Subsubsection",
 CellChangeTimes->{{3.8135942356743507`*^9, 
  3.81359423618535*^9}},ExpressionUUID->"70865a03-d766-4698-923b-\
c066b2fe1b3f"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"(", 
   RowBox[{"n", ",", "m", ",", "l"}], ")"}], TraditionalForm]],
 FormatType->
  "TraditionalForm",ExpressionUUID->"bced029d-f494-4f7d-b478-3911ba5a0ba0"]], \
"Text",
 CellChangeTimes->{{3.81359423901736*^9, 
  3.8135942460423794`*^9}},ExpressionUUID->"a8e74fd0-6e09-43bc-8641-\
327f350df309"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:80fd\:91cf\:5dee", "Subsubsection",
 CellChangeTimes->{{3.8135942641694374`*^9, 
  3.813594271593479*^9}},ExpressionUUID->"97f8cf43-55b8-4512-b7d3-\
c4202ace1093"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[CapitalDelta]", 
    StyleBox["E", "TI"]}], "\[LongEqual]", 
   RowBox[{
    RowBox[{
     StyleBox["E", "TI"], "(", 
     RowBox[{
      StyleBox["n", "TI"], ",", 
      StyleBox["m", "TI"], ",", 
      StyleBox["l", "TI"]}], ")"}], "-", 
    RowBox[{
     StyleBox["E", "TI"], "(", 
     RowBox[{
      SubscriptBox[
       StyleBox["n", "TI"], 
       StyleBox["o", "TI"]], ",", 
      SubscriptBox[
       StyleBox["m", "TI"], 
       StyleBox["o", "TI"]], ",", 
      SubscriptBox[
       StyleBox["l", "TI"], "0"]}], ")"}]}]}], TraditionalForm]], "Text",
 CellChangeTimes->{
  3.8135943109546256`*^9},ExpressionUUID->"4f19c0e9-e4fa-4491-8c5a-\
b2dbf40912f3"],

Cell[TextData[{
 "\:6307\:6570",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox[
      StyleBox["n", "TI"], "0"], ",", 
     SubscriptBox[
      StyleBox["m", "TI"], "0"], ",", 
     SubscriptBox[
      StyleBox["l", "TI"], "0"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "acca67d2-a0e2-41ab-be47-8d67766adfb0"],
 "\:7684\:80fd\:8c31",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["E", "TI"], "(", 
    RowBox[{
     StyleBox["n", "TI"], ",", 
     StyleBox["m", "TI"], ",", 
     StyleBox["l", "TI"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "b23cf993-375d-4446-a7cd-2b0dedca2409"],
 "\:4e3a"
}], "Text",
 CellChangeTimes->{{3.8135943309356427`*^9, 
  3.813594363325272*^9}},ExpressionUUID->"d18f5447-89bb-4f51-bcaa-\
ffab00059e15"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[CapitalDelta]", 
     StyleBox["E", "TI"]}], 
    SubscriptBox["\[Omega]", "0"]], "\[LongEqual]", 
   RowBox[{
    RowBox[{"[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         StyleBox["n", "TI"], "-", 
         SubscriptBox[
          StyleBox["n", "TI"], 
          StyleBox["o", "TI"]]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "+", "\[Eta]"}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         StyleBox["m", "TI"], "-", 
         SubscriptBox[
          StyleBox["m", "TI"], "0"]}], ")"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Eta]"}], ")"}]}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       StyleBox["l", "TI"], "-", 
       SubscriptBox[
        StyleBox["l", "TI"], "0"]}], ")"}], 
     StyleBox["R", "TI"]}]}]}], 
  TraditionalForm]],ExpressionUUID->"104209b2-02f5-41a4-b037-63105db955c1"]], \
"Text",
 CellChangeTimes->{
  3.8135943824373317`*^9},ExpressionUUID->"dcf12b2e-2f6f-4885-b4ae-\
fa9d02508834"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["R", "TI"], "\[LongEqual]", 
   RowBox[{
    SubscriptBox["\[Omega]", 
     StyleBox["z", "TI"]], "/", 
    SubscriptBox["\[Omega]", 
     StyleBox["o", "TI"]]}]}], 
  TraditionalForm]],ExpressionUUID->"9b8c071b-d5da-499e-880e-d3013fb9e805"]], \
"Text",
 CellChangeTimes->{
  3.8135946888731065`*^9},ExpressionUUID->"cf09354c-2b50-466e-a70a-\
bd90f67853b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7834\:7f3a\:7a0b\:5ea6", "Subsubsection",
 CellChangeTimes->{{3.8135944733896346`*^9, 
  3.813594479735653*^9}},ExpressionUUID->"3b09d6d2-de6b-4f0d-95c6-\
76512e7486d8"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[Eta]", "\[LongEqual]", 
   RowBox[{"\[CapitalOmega]", "/", 
    SubscriptBox["\[Omega]", 
     StyleBox["o", "TI"]]}]}], 
  TraditionalForm]],ExpressionUUID->"ec3640bd-597c-4ef8-9031-efc5cc4cc40c"]], \
"Text",
 CellChangeTimes->{{3.8135944244144816`*^9, 3.8135944504775696`*^9}, {
  3.8135944839976664`*^9, 
  3.8135944909506893`*^9}},ExpressionUUID->"026547dc-289b-4f5a-9b7e-\
60fd4176bc35"]
}, Open  ]],

Cell[CellGroupData[{

Cell["tiny\:7834\:7f3a", "Subsubsection",
 CellChangeTimes->{{3.8135946519673815`*^9, 
  3.81359465462039*^9}},ExpressionUUID->"84ce077d-0e5d-4d16-a703-\
ae93d27cbb79"],

Cell["\[Eta] < 0.01", "Text",
 CellChangeTimes->{
  3.8135946747940607`*^9},ExpressionUUID->"d20f1ec9-fc0f-4d23-ad77-\
2611bb1620f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:52bf\:9631\:5f62\:72b6", "Subsubsection",
 CellChangeTimes->{{3.8135947099231367`*^9, 
  3.813594711408143*^9}},ExpressionUUID->"f36466ee-687d-4792-a74d-\
756292aec33a"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["R", "TI"], "\[LongEqual]", 
   RowBox[{
    SubscriptBox["\[Omega]", 
     StyleBox["z", "TI"]], "/", 
    SubscriptBox["\[Omega]", 
     StyleBox["o", "TI"]]}]}], 
  TraditionalForm]],ExpressionUUID->"91ba8893-af2b-4104-ab82-2fefc045c105"]], \
"Text",
 CellChangeTimes->{
  3.813594713794159*^9},ExpressionUUID->"d3eb20f9-944b-4763-93ac-\
270b2707e1fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7403\:5bf9\:79f0\:52bf\:9631", "Subsubsection",
 CellChangeTimes->{{3.813594486254676*^9, 3.813594488550682*^9}, 
   3.8135946854690604`*^9, {3.813594716510156*^9, 
   3.8135947428312607`*^9}},ExpressionUUID->"63e7ddf1-ae60-44ae-8501-\
7fa74b9ff56d"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox["R", "TI"], "\[LongEqual]", "1"}], 
  TraditionalForm]],ExpressionUUID->"e2d01acc-35a3-4941-b900-a3676f4b77e6"]], \
"Text",
 CellChangeTimes->{
  3.8135947546558356`*^9},ExpressionUUID->"1d0674c2-f648-4123-950b-\
9ae18c39027b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:6241\:692d\:7403\:578b\:52bf\:9631", "Subsubsection",
 CellChangeTimes->{{3.813594796323964*^9, 3.8135948007229786`*^9}, {
  3.813594856511734*^9, 
  3.813594864011758*^9}},ExpressionUUID->"dfb9529c-f5e1-4027-9193-\
eb82d9d9b1ee"],

Cell["R<1", "Text",
 CellChangeTimes->{{3.8135948340496635`*^9, 
  3.8135948354696693`*^9}},ExpressionUUID->"b2eccd67-9824-4dcf-a1f7-\
f8a6d438c070"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:957f\:692d\:7403\:578b\:52bf\:9631", "Subsubsection",
 CellChangeTimes->{{3.8135948696357737`*^9, 
  3.813594876184795*^9}},ExpressionUUID->"02c3729b-12ab-45e9-b433-\
dc87e0c1d4c3"],

Cell["R>1", "Text",
 CellChangeTimes->{{3.8135948790408025`*^9, 
  3.8135948801098046`*^9}},ExpressionUUID->"c2b06dff-3799-460e-a0bf-\
3f745a9339ff"]
}, Open  ]],

Cell[TextData[{
 "\:521d\:91cf\:5b50\:6570",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox[
      StyleBox["n", "TI"], 
      StyleBox["o", "TI"]], ",", 
     SubscriptBox[
      StyleBox["m", "TI"], 
      StyleBox["o", "TI"]], ",", 
     SubscriptBox[
      StyleBox["l", "TI"], 
      StyleBox["o", "TI"]]}], ")"}], TraditionalForm]],ExpressionUUID->
  "f290bbc9-6183-45d9-b282-57199e1191ac"],
 "\:9644\:8fd1\:7684\:80fd\:8c31E(n,m,l)[R]\:ff0c\[CapitalOmega]=0\
\[DoubleLongRightArrow]\[Eta]=0"
}], "Subsubsection",
 CellChangeTimes->{{3.8135948983128614`*^9, 
  3.8135950192608547`*^9}},ExpressionUUID->"09b69d78-6a56-45c9-8280-\
f67cd0c09c05"],

Cell[CellGroupData[{

Cell["\:65e0SU(2)\:8026\:5408", "Subsubsection",
 CellChangeTimes->{{3.8135951464798098`*^9, 
  3.813595169846883*^9}},ExpressionUUID->"06bb7c21-25e6-41ce-813a-\
5b1e7b2f95db"],

Cell[TextData[{
 "\:9891\:7387\:6bd4",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["R", "TI"], "\[LongEqual]", 
    RowBox[{
     SubscriptBox["\[Omega]", 
      StyleBox["z", "TI"]], "/", 
     SubscriptBox["\[Omega]", 
      StyleBox["o", "TI"]]}]}], TraditionalForm]],ExpressionUUID->
  "2129c772-9d0e-4a07-85ca-fb0d94ad446c"],
 "\:5904\:7684\:7b80\:5e76\:6001\:548c\:80fd\:9699\:4e3a\:6709\:7406\:6570\
\:ff0cP,Q\:4e92\:7d20\:3002"
}], "Text",
 CellChangeTimes->{{3.8135951909499683`*^9, 
  3.8135952726382008`*^9}},ExpressionUUID->"c818f8e0-b585-4cd1-a2ca-\
d644b0c8a46e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5206\:6790\:540c\:7b80\:5e76\:7684\:672c\:5f81\:6001", "Subsubsection",
 CellChangeTimes->{{3.8135984166774225`*^9, 3.8135984392414923`*^9}, 
   3.8135984810846324`*^9},ExpressionUUID->"03fb17b2-6a4c-442e-afb7-\
4ea09e68c185"],

Cell["\[CapitalDelta] E == 0 \[Eta] == 0\:53ef\:5206\:6790\:540c\:7b80\:5e76\
\:7684\:672c\:5f81\:6001", "Text",
 CellChangeTimes->{{3.813598459354558*^9, 
  3.813598476415619*^9}},ExpressionUUID->"e3a4dc8c-d3a2-4791-8962-\
429df5db7104"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7b80\:5e76\:6001\:5206\:7ec4", "Subsubsection",
 CellChangeTimes->{{3.813598505124696*^9, 
  3.8135985182937384`*^9}},ExpressionUUID->"30bcf9d7-a431-4597-99b1-\
1ee4cb05d6f4"],

Cell[TextData[{
 "\:5c5e\:4e8e",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["R", "TI"], "\[LongEqual]", 
    RowBox[{
     StyleBox["Q", "TI"], "/", 
     StyleBox["P", "TI"]}]}], TraditionalForm]],ExpressionUUID->
  "f5d55a3b-9566-41ef-8f5d-4e06623e3d82"],
 "\:7684\:7b80\:5e76\:6001\:6ee1\:8db3",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       StyleBox["p", "TI"], "+", 
       StyleBox["q", "TI"]}], ")"}], "+", 
     RowBox[{
      StyleBox["s", "TI"], "(", 
      RowBox[{
       StyleBox["Q", "TI"], "/", 
       StyleBox["P", "TI"]}], ")"}]}], "\[LongEqual]", "0"}], 
   TraditionalForm]],ExpressionUUID->"c42b706d-a793-480d-b6be-929505eb2bca"]
}], "Text",
 CellChangeTimes->{{3.813598564759883*^9, 
  3.8135985883309517`*^9}},ExpressionUUID->"742846f8-29a6-42c1-8bd6-\
e4576264ee4b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"\[Eta]", "\[LongEqual]", 
   RowBox[{"\[CapitalOmega]", "/", 
    SubscriptBox["\[Omega]", 
     StyleBox["o", "TI"]]}]}], 
  TraditionalForm]],ExpressionUUID->"5cf067c8-fc39-491e-bbb0-68da2d28a6b8"]], \
"Subsubsection",
 CellChangeTimes->{
  3.8135986820348516`*^9},ExpressionUUID->"ee568f50-60ca-4959-a7c0-\
118eb502d0c8"],

Cell[TextData[{
 "\:8026\:5408\:80fd\:91cf",
 Cell[BoxData[
  FormBox["\[CapitalOmega]\[HBar]", TraditionalForm]],ExpressionUUID->
  "eea5f4b4-610f-4aba-8f4f-caa9dace8860"],
 "\:4e0e\:6a2a\:6a21\:91cf\:5b50\:5316\:80fd\:91cf",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[HBar]\[Omega]", "0"], TraditionalForm]],ExpressionUUID->
  "21185867-ab15-4031-9f9f-720293af93a2"],
 "\:3002"
}], "Text",
 CellChangeTimes->{{3.8135986091560183`*^9, 
  3.8135986844138393`*^9}},ExpressionUUID->"b34fd028-d24f-45be-a9ac-\
c46a9f8d4a7f"]
}, Open  ]],

Cell[TextData[{
 "\:9009\:62e9",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Eta]", "\[LongEqual]", "0.0017"}], TraditionalForm]],
  ExpressionUUID->"13ac8083-c94a-480e-9ddd-675274abcc1b"]
}], "Subsubsection",
 CellChangeTimes->{{3.813598738190859*^9, 
  3.813598740645868*^9}},ExpressionUUID->"5f2da83d-de53-487d-8065-\
9c18ecd73d4b"],

Cell[CellGroupData[{

Cell["\:5bf9\:79f0\:6027\:7834\:7f3a\:7684\:5f71\:54cd", "Subsubsection",
 CellChangeTimes->{{3.813598755535915*^9, 
  3.8135987893120193`*^9}},ExpressionUUID->"cff1ae45-66ac-45b4-8059-\
19a55100401a"],

Cell[TextData[{
 "\:6253\:7834\:4e86",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["R", "TI"], "\[LongEqual]", 
    RowBox[{
     StyleBox["Q", "TI"], "/", 
     StyleBox["P", "TI"]}]}], TraditionalForm]],ExpressionUUID->
  "3a881a15-0702-49b1-adc0-7f1298c780be"],
 "\:5904\:7684\:539f\:59cb\:7b80\:5e76\:6001"
}], "Text",
 CellChangeTimes->{{3.8135987921700277`*^9, 
  3.8135988250271273`*^9}},ExpressionUUID->"f3a6aee4-ade5-4cf8-9def-\
56b385092262"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"912d566f-5ded-40d4-90d4-8bbae5d9c780"],

Cell[CellGroupData[{

Cell["\:53e4\:5178\:529b\:5b66\:4e2d\:76843D\:51e0\:4f55\:9762", "Section",
 CellChangeTimes->{{3.8135991190962095`*^9, 
  3.813599130420246*^9}},ExpressionUUID->"75c6d346-b3e5-448b-a2fc-\
34ea44895787"],

Cell[TextData[{
 "\:7cfb\:7edf",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     StyleBox["H", "TI"], "^"], "\[LongEqual]", 
    RowBox[{
     SubscriptBox[
      OverscriptBox[
       StyleBox["H", "TI"], "^"], "0"], "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{
        StyleBox["i", "TI"], "=", "1"}], "3",
       LimitsPositioning->False], 
      RowBox[{
       SubscriptBox["\[CapitalOmega]", 
        StyleBox["i", "TI"]], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["L", "TI"], "^"], 
        StyleBox["i", "TI"]]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "ffaa78fd-6e00-4317-bed6-31c2830edfb0"],
 "\:7684\:7ecf\:5178\:5bf9\:5e94\:7269\:ff0c\:53ef\:7528\:65e0\:91cf\:7eb2\
\:53d8\:91cf\:5199\:4e3a"
}], "Text",
 CellChangeTimes->{{3.81359918630412*^9, 3.8135992637563577`*^9}, 
   3.8136309429472*^9},ExpressionUUID->"b9c48879-4c24-4256-a44b-120d7e044d20"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["a", "TI"], "^"], "1"], "\[LongEqual]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      OverscriptBox[
       StyleBox["x", "TI"], "~"], "+", 
      RowBox[{
       StyleBox["i", "TI"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["p", "TI"], "~"], 
        StyleBox["x", "TI"]]}]}], ")"}], "/", 
    SqrtBox["2"]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["a", "TI"], "^"], "2"], "\[LongEqual]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      OverscriptBox[
       StyleBox["y", "TI"], "~"], "+", 
      RowBox[{
       StyleBox["i", "TI"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["p", "TI"], "~"], 
        StyleBox["y", "TI"]]}]}], ")"}], "/", 
    SqrtBox["2"]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["a", "TI"], "^"], "3"], "\[LongEqual]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      OverscriptBox[
       StyleBox["z", "TI"], "~"], "+", 
      RowBox[{
       StyleBox["i", "TI"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["p", "TI"], "~"], 
        StyleBox["z", "TI"]]}]}], ")"}], "/", 
    SqrtBox["2"]}]}], TraditionalForm]}], "Text",
 CellChangeTimes->{{3.813599287642434*^9, 
  3.8135992929134493`*^9}},ExpressionUUID->"8dc44567-9a0b-4072-9689-\
d4f6034fa911"],

Cell[CellGroupData[{

Cell["\:65e0\:91cf\:7eb2\:53d8\:91cf\:7531\:4e0b\:5f0f\:7ed9\:51fa", \
"Subsubsection",
 CellChangeTimes->{{3.813599309067498*^9, 3.813599311065505*^9}, {
  3.8136309633533664`*^9, 
  3.8136309679663806`*^9}},ExpressionUUID->"dad37edb-ea48-4e4b-bb5c-\
4ae089cfb8a3"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   OverscriptBox[
    StyleBox["x", "TI"], "~"], "\[LongEqual]", 
   RowBox[{
    StyleBox["x", "TI"], 
    SqrtBox[
     RowBox[{
      SubscriptBox["\[Mu]\[Omega]", 
       StyleBox["o", "TI"]], "/", "\[HBar]"}]]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   OverscriptBox["y", "~"], "\[LongEqual]", 
   RowBox[{
    StyleBox["y", "TI"], 
    SqrtBox[
     RowBox[{
      SubscriptBox["\[Mu]\[Omega]", 
       StyleBox["o", "TI"]], "/", "\[HBar]"}]]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   OverscriptBox[
    StyleBox["z", "TI"], "~"], "\[LongEqual]", 
   RowBox[{
    StyleBox["z", "TI"], 
    SqrtBox[
     RowBox[{
      SubscriptBox["\[Mu]\[Omega]", 
       StyleBox["z", "TI"]], "/", "\[HBar]"}]]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["p", "TI"], "~"], 
    StyleBox["x", "TI"]], "\[LongEqual]", 
   RowBox[{
    SubscriptBox[
     StyleBox["p", "TI"], 
     StyleBox["x", "TI"]], 
    SqrtBox[
     RowBox[{"1", "/", 
      SubscriptBox["\[HBar]\[Mu]\[Omega]", 
       StyleBox["o", "TI"]]}]]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["p", "TI"], "~"], 
    StyleBox["y", "TI"]], "\[LongEqual]", 
   RowBox[{
    SubscriptBox[
     StyleBox["p", "TI"], 
     StyleBox["y", "TI"]], 
    SqrtBox[
     RowBox[{"1", "/", 
      SubscriptBox["\[HBar]\[Mu]\[Omega]", 
       StyleBox["o", "TI"]]}]]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["p", "TI"], "~"], 
    StyleBox["z", "TI"]], "\[LongEqual]", 
   RowBox[{
    SubscriptBox[
     StyleBox["p", "TI"], 
     StyleBox["z", "TI"]], 
    SqrtBox[
     RowBox[{"1", "/", 
      SubscriptBox["\[Mu]\[Omega]", 
       StyleBox["z", "TI"]]}]]}]}], TraditionalForm]}], "Text",
 CellChangeTimes->{{3.8135993310145884`*^9, 
  3.8135994128985147`*^9}},ExpressionUUID->"2b76fa45-1fc6-4add-83f5-\
720f666e19fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7c92\:5b50\:8d28\:91cf", "Subsubsection",
 CellChangeTimes->{{3.813599423282548*^9, 
  3.813599428187561*^9}},ExpressionUUID->"d66eee2f-af0f-45ea-9301-\
fc314a39fa64"],

Cell["\[Mu]", "Text",
 CellChangeTimes->{{3.8135994306825676`*^9, 
  3.8135994330035768`*^9}},ExpressionUUID->"2488e498-517d-4b0a-8620-\
c9a5d0c0d7db"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5199\:6210\:590d\:53d8\:91cf\:5f62\:5f0f", "Subsubsection",
 CellChangeTimes->{{3.813599458892655*^9, 3.8135994626666756`*^9}, {
  3.8136310167395315`*^9, 
  3.813631065552396*^9}},ExpressionUUID->"e4188fac-2990-4ed7-ac5c-\
943733adc749"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   SubscriptBox[
    StyleBox["v", "TI"], "1"], "\[LongEqual]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      OverscriptBox[
       StyleBox["x", "TI"], "~"], "+", 
      RowBox[{
       StyleBox["i", "TI"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["p", "TI"], "~"], 
        StyleBox["x", "TI"]]}]}], ")"}], "/", 
    SqrtBox["2"]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     StyleBox["v", "TI"], "2"], "\[LongEqual]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       OverscriptBox["\[Gamma]", "~"], "+", 
       RowBox[{
        StyleBox["i", "TI"], 
        SubscriptBox[
         OverscriptBox[
          StyleBox["p", "TI"], "~"], 
         StyleBox["y", "TI"]]}]}], ")"}], "/", 
     SqrtBox["2"]}]}], " "}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   SubscriptBox[
    StyleBox["v", "TI"], "3"], "\[LongEqual]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      OverscriptBox[
       StyleBox["z", "TI"], "~"], "+", 
      RowBox[{
       StyleBox["i", "TI"], 
       SubscriptBox[
        OverscriptBox[
         StyleBox["p", "TI"], "~"], 
        StyleBox["z", "TI"]]}]}], ")"}], "/", 
    SqrtBox["2"]}]}], TraditionalForm]}], "Text",
 CellChangeTimes->{{3.8135994651686788`*^9, 
  3.81359948883375*^9}},ExpressionUUID->"a14aa410-ada8-49c1-82a2-\
16fb07d11e18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    StyleBox["H", "TI"], "^"], TraditionalForm]],ExpressionUUID->
  "88d3cda5-6158-4e0d-8ad9-d945bd42679f"],
 "\:7684\:7ecf\:5178\:52a8\:529b\:5b66"
}], "Subsubsection",
 CellChangeTimes->{{3.813599498206781*^9, 3.8135995366804094`*^9}, {
  3.8136310909064703`*^9, 
  3.813631092939479*^9}},ExpressionUUID->"9438a2d5-f8ec-4326-95fc-\
5aa381c1d6c1"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"[", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             SubscriptBox[
              StyleBox["v", "TI"], "1"], "(", 
             StyleBox["t", "TI"], ")"}], "DisplayFormula"], TraditionalForm]],
          ExpressionUUID->"7c7a93d5-567d-4343-acd3-ea30493b9605"]],
          ExpressionUUID->"e3e9a158-e3a4-46f9-bfe5-29288ead8ae3"]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             SubscriptBox[
              StyleBox["v", "TI"], "2"], "(", 
             StyleBox["t", "TI"], ")"}], "DisplayFormula"], TraditionalForm]],
          ExpressionUUID->"86fb428b-afbb-42f9-882d-532b14bd380d"]],
          ExpressionUUID->"f4c06125-0177-46ed-987b-34d76d80a474"]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             SubscriptBox[
              StyleBox["v", "TI"], "3"], "(", 
             StyleBox["t", "TI"], ")"}], "DisplayFormula"], TraditionalForm]],
          ExpressionUUID->"aeb8c6cd-f233-4655-bfff-5e97536ef248"]],
          ExpressionUUID->"d20d4a95-4f61-417d-9d7b-7aa5a537b956"]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}}], 
      TraditionalForm]],ExpressionUUID->
     "180090eb-04ea-4a33-8de4-92734551884f"], "]"}], "\[LongEqual]", 
   RowBox[{
    RowBox[{"[", Cell[BoxData[
      FormBox[GridBox[{
         {Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              SuperscriptBox[
               StyleBox["e", "TI"], 
               RowBox[{"-", 
                StyleBox["i", "TI"], "\[Alpha]", "/", "2"}]], "cos", 
              RowBox[{"(", 
               RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]],ExpressionUUID->
           "71c31860-e34c-452f-96cc-92f3f6390d9d"]],ExpressionUUID->
           "87c2a61f-11b9-4907-9aa1-7308a458cdc7"], Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"-", 
              SuperscriptBox[
               StyleBox["e", "TI"], 
               RowBox[{"-", 
                StyleBox["i", "TI"], "\[Alpha]", "/", "2"}]], "sin", 
              RowBox[{"(", 
               RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]],ExpressionUUID->
           "97d230ae-0405-4af9-9ceb-ccef6484cf02"]],ExpressionUUID->
           "35ade418-99be-441e-86e9-0cbee472bd54"], Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox["0", "DisplayFormula"], TraditionalForm]],ExpressionUUID->
           "4bf1d24b-6e43-4997-90e8-5f346a9b5f97"]],ExpressionUUID->
           "78d8314a-0890-4e8f-b663-f9fb9f05f922"]},
         {Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              SuperscriptBox[
               StyleBox["e", "TI"], 
               RowBox[{
                StyleBox["i", "TI"], "\[Alpha]", "/", "2"}]], "sin", 
              RowBox[{"(", 
               RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]],ExpressionUUID->
           "125fee75-e548-4304-a23c-ca507bfe0a10"]],ExpressionUUID->
           "f935e748-5c0a-4d83-a50e-58198de64fea"], Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              SuperscriptBox[
               StyleBox["e", "TI"], 
               RowBox[{
                StyleBox["i", "TI"], "\[Alpha]", "/", "2"}]], "cos", 
              RowBox[{"(", 
               RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]],ExpressionUUID->
           "907a2ba0-a346-40b0-8b88-eaeddd0d46fa"]],ExpressionUUID->
           "ca0f3602-bc26-4d1e-8c3c-e13aa5958fc5"], Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox["0", "DisplayFormula"], TraditionalForm]],ExpressionUUID->
           "b4a2e65c-6bb1-4b85-bcab-9da95fb45246"]],ExpressionUUID->
           "d3eceda0-d1ee-4723-a248-f799cddc6dd2"]},
         {Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox["0", "DisplayFormula"], TraditionalForm]],ExpressionUUID->
           "ce476ef7-9ecd-4f15-927e-f840da96ea3f"]],ExpressionUUID->
           "b2bef763-20cb-409f-b665-0c5174ab2403"], Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox["0", "DisplayFormula"], TraditionalForm]],ExpressionUUID->
           "ac0a3a67-cc20-4c6d-990d-9dcf95384e47"]],ExpressionUUID->
           "4cf9d0b8-06e2-4e7c-90e0-049d4e697db4"], Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox["1", "DisplayFormula"], TraditionalForm]],ExpressionUUID->
           "fb33acb7-e4e4-4e63-91ae-ffbae82ebe64"]],ExpressionUUID->
           "65a0f71e-7296-4197-b07a-94081e80c092"]}
        },
        GridBoxAlignment->{
         "Columns" -> {Center, Center, {Center}}, "Rows" -> {{Baseline}}}], 
       TraditionalForm]],ExpressionUUID->
      "aaee9228-dabf-4ee3-b78e-9f18772b3a09"], "]"}], "[", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             SubscriptBox[
              StyleBox["u", "TI"], "1"], "(", 
             StyleBox["t", "TI"], ")"}], "DisplayFormula"], TraditionalForm]],
          ExpressionUUID->"ab249413-6add-4cf1-9474-95e9b2736c14"]],
          ExpressionUUID->"72520f8c-6375-47b9-aa74-19d41aad1b69"]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             SubscriptBox[
              StyleBox["u", "TI"], "2"], "(", 
             StyleBox["t", "TI"], ")"}], "DisplayFormula"], TraditionalForm]],
          ExpressionUUID->"cc426a79-953f-4aeb-96d5-35f3554f4bf0"]],
          ExpressionUUID->"34cd44dc-ee89-42f2-bd2b-4bfb8bf8fef1"]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             SubscriptBox[
              StyleBox["u", "TI"], "3"], "(", 
             StyleBox["t", "TI"], ")"}], "DisplayFormula"], TraditionalForm]],
          ExpressionUUID->"b5b86ddd-8825-4df4-8627-c0961f0604a3"]],
          ExpressionUUID->"ba23bf40-b555-451e-a01f-f483564cfa4a"]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}], 
      TraditionalForm]],ExpressionUUID->
     "c6ad7af6-dfc9-4b74-87bd-23f1c9183936"], "]"}]}], 
  TraditionalForm]], "Text",
 CellChangeTimes->{
  3.8135995501954603`*^9},ExpressionUUID->"72c6072a-57d8-4004-bfa6-\
2cfb9a884056"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    StyleBox["u", "TI"], "i"], "(", 
   StyleBox["t", "TI"], ")"}], TraditionalForm]],
 CellChangeTimes->{{3.8135996025884295`*^9, 
  3.8135996092164474`*^9}},ExpressionUUID->"7a2a0bc7-9170-4096-be21-\
becfb85f4814"]], "Subsubsection",
 CellChangeTimes->{{3.813599581142816*^9, 
  3.813599617976495*^9}},ExpressionUUID->"86217443-beac-40ed-bb4d-\
72da449eb7b6"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     StyleBox["u", "TI"], "1"], "(", 
    StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
   RowBox[{
    SubscriptBox[
     StyleBox["A", "TI"], "1"], 
    RowBox[{
     SuperscriptBox[
      StyleBox["e", "TI"], 
      RowBox[{"-", 
       RowBox[{
        StyleBox["i", "TI"], "(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Omega]", "1"], 
          StyleBox["t", "TI"]}], "-", 
         SubscriptBox["\[CurlyPhi]", "1"]}], ")"}]}]], "/", 
     SqrtBox["2"]}]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     StyleBox["u", "TI"], "2"], "(", 
    StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
   RowBox[{
    SubscriptBox[
     StyleBox["A", "TI"], "2"], 
    RowBox[{
     SuperscriptBox[
      StyleBox["e", "TI"], 
      RowBox[{"-", 
       RowBox[{
        StyleBox["i", "TI"], "(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Omega]", "2"], 
          StyleBox["t", "TI"]}], "-", 
         SubscriptBox["\[CurlyPhi]", "2"]}], ")"}]}]], "/", 
     SqrtBox["2"]}]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   RowBox[{
    SubscriptBox[
     StyleBox["u", "TI"], "3"], "(", 
    StyleBox["t", "TI"], ")"}], "\[LongEqual]", 
   RowBox[{
    SubscriptBox[
     StyleBox["A", "TI"], "3"], 
    RowBox[{
     SuperscriptBox[
      StyleBox["e", "TI"], 
      RowBox[{"-", 
       RowBox[{
        StyleBox["i", "TI"], "(", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[Omega]", 
           StyleBox["z", "TI"]], 
          StyleBox["t", "TI"]}], "-", 
         SubscriptBox["\[CurlyPhi]", "3"]}], ")"}]}]], "/", 
     SqrtBox["2"]}]}]}], TraditionalForm]}], "Text",
 CellChangeTimes->{{3.8135996025884295`*^9, 
  3.8135996356945305`*^9}},ExpressionUUID->"b8a66846-c01a-4a55-8f54-\
0527de3158ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox[
    StyleBox["A", "TI"], "1"], ",", 
   SubscriptBox[
    StyleBox["A", "TI"], "2"], ",", 
   SubscriptBox[
    StyleBox["A", "TI"], "3"], ",", 
   SubscriptBox["\[CurlyPhi]", "1"], ",", 
   SubscriptBox["\[CurlyPhi]", "2"], ",", 
   SubscriptBox["\[CurlyPhi]", "2"]}], 
  TraditionalForm]], \
"Text",ExpressionUUID->"2f06e2b6-72ea-4f4b-90c3-6df65b757677"]], \
"Subsubsection",
 CellChangeTimes->{{3.813599637825537*^9, 
  3.813599654636588*^9}},ExpressionUUID->"6de759aa-1df4-4991-aae9-\
84feb1e7b393"],

Cell["\:4e0e\:53e4\:5178\:52a8\:529b\:5b66\:7684\:521d\:59cb\:6761\:4ef6\:6709\
\:5173", "Text",
 CellChangeTimes->{{3.813599661033609*^9, 
  3.8135996991887274`*^9}},ExpressionUUID->"9789f487-1082-44f2-927f-\
7084fbbbcd42"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "\:91cf\:5b50\:54c8\:5bc6\:987f\:7cfb\:7edf\:5bf9\:89d2\:5316",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", ",", 
    RowBox[{"\[Beta]", "\[Element]", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", "2"]}], ",", 
       FractionBox["\[Pi]", "2"]}], "]"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ea6a5f80-a023-413e-934b-65b951f78ecf"]
}], "Subsubsection",
 CellChangeTimes->{{3.8135997606309385`*^9, 3.8135997675039616`*^9}, {
  3.8136312435339866`*^9, 
  3.8136312615650225`*^9}},ExpressionUUID->"c24b8508-d6ec-4590-9aa8-\
84039741e727"],

Cell["\[Alpha],\[Beta]\:7528\:4e8e\:4e0b\:5f0f\:ff0c\:5bf9\:89d2\:5316\:91cf\
\:5b50\:54c8\:5bc6\:987f\:7cfb\:7edf", "Text",
 CellChangeTimes->{{3.8135997739769793`*^9, 3.813599777207989*^9}, {
  3.813631167093731*^9, 
  3.813631209503862*^9}},ExpressionUUID->"914235d5-5833-4370-a36d-\
23d67bc382ad"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"[", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            SubsuperscriptBox[
             OverscriptBox[
              StyleBox["a", "TI"], "^"], "1", "\[Prime]"], "DisplayFormula"], 
           TraditionalForm]],ExpressionUUID->
          "ac25e62b-4755-4c86-9b42-30b1e991cd5d"]],ExpressionUUID->
          "2340bc51-8f4b-4cc1-a2c4-a60b918ad038"]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            SubsuperscriptBox[
             OverscriptBox[
              StyleBox["a", "TI"], "^"], "2", "\[Prime]"], "DisplayFormula"], 
           TraditionalForm]],ExpressionUUID->
          "20a16ccb-41ad-48aa-b6b7-9b702992214a"]],ExpressionUUID->
          "5a77d0ea-be28-4520-9d5a-2e4a9e259f2d"]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}], 
      TraditionalForm]],ExpressionUUID->
     "ccbb4284-d086-4485-a1e7-e5132c84fa6b"], "]"}], "\[LongEqual]", 
   RowBox[{
    RowBox[{"[", Cell[BoxData[
      FormBox[GridBox[{
         {Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              SuperscriptBox[
               StyleBox["e", "TI"], 
               RowBox[{
                StyleBox["i", "TI"], "\[Alpha]", "/", "2"}]], "cos", 
              RowBox[{"(", 
               RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]], "Text",ExpressionUUID->
           "630751fb-e208-45ca-b5b7-b72794f2858c"]],ExpressionUUID->
           "238a1f02-dcf4-4e14-b2ea-db69914613c3"], Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              SuperscriptBox[
               StyleBox["e", "TI"], 
               RowBox[{"-", 
                StyleBox["i", "TI"], "\[Alpha]", "/", "2"}]], "sin", 
              RowBox[{"(", 
               RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]],ExpressionUUID->
           "ab518874-f414-4d7f-a9c4-cfc8fb16f8d4"]],ExpressionUUID->
           "4939bdc7-55ed-4495-aec1-885f66dca817"]},
         {Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{"-", 
              SuperscriptBox[
               StyleBox["e", "TI"], 
               RowBox[{
                StyleBox["i", "TI"], "\[Alpha]", "/", "2"}]], "sin", 
              RowBox[{"(", 
               RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]],ExpressionUUID->
           "84edae4b-9f91-45d4-be2e-f8d02d602877"]],ExpressionUUID->
           "4c629425-15d5-4ab8-ab3f-efc2e2a804f6"], Cell[TextData[Cell[BoxData[
           FormBox[
            StyleBox[
             RowBox[{
              SuperscriptBox[
               StyleBox["e", "TI"], 
               RowBox[{"-", 
                StyleBox["i", "TI"], "\[Alpha]", "/", "2"}]], "cos", 
              RowBox[{"(", 
               RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "DisplayFormula"], 
            TraditionalForm]],ExpressionUUID->
           "ea46ee4f-077c-4c64-9f8d-8ba65c1b9e44"]],ExpressionUUID->
           "553aefa8-87cb-43d1-a990-00d83b77bf83"]}
        },
        GridBoxAlignment->{
         "Columns" -> {Center, {Center}}, "Rows" -> {{Baseline}}}], 
       TraditionalForm]],ExpressionUUID->
      "b72ae5bf-630a-4ded-86c3-54bc7c06320b"], "]"}], "[", Cell[BoxData[
     FormBox[GridBox[{
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            SubscriptBox[
             OverscriptBox[
              StyleBox["a", "TI"], "^"], "1"], "DisplayFormula"], 
           TraditionalForm]],ExpressionUUID->
          "2ee6994c-d3f7-4e73-8f9c-9264b30f4613"]],ExpressionUUID->
          "7cf2f5bc-a09d-4d30-b385-ba74460a5378"]},
        {Cell[TextData[Cell[BoxData[
          FormBox[
           StyleBox[
            SubscriptBox[
             OverscriptBox[
              StyleBox["a", "TI"], "^"], "2"], "DisplayFormula"], 
           TraditionalForm]],ExpressionUUID->
          "769dff1e-2dbd-44f0-814c-b348d6570ca2"]],ExpressionUUID->
          "1541886d-b381-477d-9309-44e3383757eb"]}
       },
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}], 
      TraditionalForm]],ExpressionUUID->
     "71dd20a4-e298-497e-bef6-8f1a7e6ccb15"], "]"}]}], 
  TraditionalForm]], "Text",
 CellChangeTimes->{
  3.813631163850741*^9},ExpressionUUID->"76d9c1eb-12f7-4d37-aab7-\
6439fe5489ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:8026\:5408\:5f3a\:5ea6", "Subsubsection",
 CellChangeTimes->{{3.813599798967057*^9, 
  3.8135998031850715`*^9}},ExpressionUUID->"6e59e2cf-d8e6-4f66-9ff3-\
b80a9fd1112b"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[CapitalOmega]", "1"], ",", 
    SubscriptBox["\[CapitalOmega]", "2"]}], TraditionalForm]],ExpressionUUID->
  "3b94e498-d317-42d6-9844-77af31326257"],
 Cell[BoxData[
  FormBox[
   RowBox[{",", 
    SubscriptBox["\[CapitalOmega]", "3"]}], TraditionalForm]],ExpressionUUID->
  "5ab64940-d861-42d4-8b68-7202f0dbbc79"]
}], "Text",
 CellChangeTimes->{{3.8135998135591035`*^9, 
  3.8135998221501293`*^9}},ExpressionUUID->"8054a3af-fc63-473b-bef5-\
7551ef4999d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"p", ",", "q"}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "cbba2a6f-75d1-4854-aaa1-de88b4c75942"],
 "\:7b80\:5e76\:6001\:7684\:8f68\:9053"
}], "Subsubsection",
 CellChangeTimes->{{3.813599853359229*^9, 
  3.813599884122321*^9}},ExpressionUUID->"5835f296-bec3-4789-b1bf-\
817abe73fcf5"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[Cell[BoxData[
    FormBox[GridBox[{
       {Cell[TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             OverscriptBox[
              StyleBox["x", "TI"], "~"], 
             RowBox[{"(", 
              StyleBox["t", "TI"], ")"}], "\[LongEqual]"}], "DisplayFormula"],
            TraditionalForm]],ExpressionUUID->
          "5573adfb-7032-4233-85b7-c4396af2f2f3"],
         " "
        }],ExpressionUUID->"e6ca5ea5-3f15-46c4-82f2-94980440f883"], Cell[
        TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              SubscriptBox[
               StyleBox["A", "TI"], "1"], "cos", 
              RowBox[{"(", 
               FractionBox["\[Beta]", "2"], ")"}], "cos", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[Eta]"}], ")"}], 
                SubscriptBox["\[Omega]", "0"], 
                StyleBox["t", "TI"], "+", 
                FractionBox["\[Alpha]", "2"], "-", 
                SubscriptBox["\[CurlyPhi]", "1"]}], "]"}]}]}], 
            "DisplayFormula"], TraditionalForm]],ExpressionUUID->
          "4fe76c27-ed95-47e5-b4fe-d0b9ce8b6dcf"],
         " "
        }],ExpressionUUID->"3383adf0-c453-4bb9-8737-476a70711791"]},
       {Cell[TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox["\[Null]", "DisplayFormula"], TraditionalForm]],
          ExpressionUUID->"c8c3eb0c-3663-43ab-944c-6217c97b46b0"],
         " "
        }],ExpressionUUID->"dad4a54d-1379-4fd2-bbc0-0b711b48dc17"], Cell[
        TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             RowBox[{"-", 
              SubscriptBox[
               StyleBox["A", "TI"], "2"], "sin", 
              RowBox[{"(", 
               FractionBox["\[Beta]", "2"], ")"}], "cos", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[Eta]"}], ")"}], 
                SubscriptBox["\[Omega]", 
                 StyleBox["o", "TI"]], 
                StyleBox["t", "TI"], "+", 
                FractionBox["\[Alpha]", "2"], "-", 
                SubscriptBox["\[CurlyPhi]", "2"]}], "]"}]}], "}"}], 
            "DisplayFormula"], TraditionalForm]],ExpressionUUID->
          "92884ef2-ab6c-47f7-afcb-fa4dd1d2fdb9"],
         " "
        }],ExpressionUUID->"34e06591-9367-4eef-afdb-dffe26e220d8"]}
      }], TraditionalForm]],ExpressionUUID->
    "7d16d07e-3514-4e53-a15f-58ca18f565e6"], TraditionalForm]],ExpressionUUID->
  "d82d6b14-37f2-41a9-aa5a-3e02b2ee54ce"],
 "\n",
 Cell[BoxData[
  FormBox[Cell[BoxData[
    FormBox[GridBox[{
       {Cell[TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             OverscriptBox[
              StyleBox["Y", "TI"], "~"], 
             RowBox[{"(", 
              StyleBox["t", "TI"], ")"}], "\[LongEqual]"}], "DisplayFormula"],
            TraditionalForm]],ExpressionUUID->
          "f24fb3c8-bc93-47f4-8a01-2a136a0819fa"],
         " "
        }],ExpressionUUID->"0f2b1586-5006-4231-a87e-6c272410a655"], Cell[
        TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              SubscriptBox[
               StyleBox["A", "TI"], "1"], "sin", 
              RowBox[{"(", 
               FractionBox["\[Beta]", "2"], ")"}], "cos", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[Eta]"}], ")"}], 
                SubscriptBox["\[Omega]", "0"], 
                StyleBox["t", "TI"], "-", 
                FractionBox["\[Alpha]", "2"], "-", 
                SubscriptBox["\[CurlyPhi]", "1"]}], "]"}]}]}], 
            "DisplayFormula"], TraditionalForm]],ExpressionUUID->
          "1ba0d34d-f538-4a0b-b836-3dde16949e64"],
         " "
        }],ExpressionUUID->"28dd2891-ac5e-4f0d-badb-84b8d8dbddbc"]},
       {Cell[TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox["\[Null]", "DisplayFormula"], TraditionalForm]],
          ExpressionUUID->"55f35ca8-6419-409d-a1e2-acad528c7bab"],
         " "
        }],ExpressionUUID->"e3732145-9326-4f20-b12d-8b3db1471aa6"], Cell[
        TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             RowBox[{"+", 
              SubscriptBox[
               StyleBox["A", "TI"], "2"], "cos", 
              RowBox[{"(", 
               FractionBox["\[Beta]", "2"], ")"}], "cos", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", "\[Eta]"}], ")"}], 
                SubscriptBox["\[Omega]", "0"], 
                StyleBox["t", "TI"], "-", 
                FractionBox["\[Alpha]", "2"], "-", 
                SubscriptBox["\[CurlyPhi]", "2"]}], "]"}]}], "}"}], 
            "DisplayFormula"], TraditionalForm]],ExpressionUUID->
          "259f6135-eb2f-4d7e-9a27-9daa0f1f9a02"],
         " "
        }],ExpressionUUID->"b1841f2c-61b7-448a-b2d8-db3b792fae2b"]},
       {Cell[TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{
             OverscriptBox[
              StyleBox["z", "TI"], "~"], 
             RowBox[{"(", 
              StyleBox["t", "TI"], ")"}], "\[LongEqual]"}], "DisplayFormula"],
            TraditionalForm]],ExpressionUUID->
          "9666c19b-2380-402f-b243-5844e18449f5"],
         " "
        }],ExpressionUUID->"6b4c292f-484a-4579-b85f-3a1144b26014"], Cell[
        TextData[{
         " ",
         Cell[BoxData[
          FormBox[
           StyleBox[
            RowBox[{"{", 
             RowBox[{
              SubscriptBox[
               StyleBox["A", "TI"], "3"], "cos", 
              RowBox[{"[", 
               RowBox[{
                FractionBox[
                 StyleBox["Q", "TI"], 
                 StyleBox["P", "TI"]], 
                RowBox[{"(", 
                 RowBox[{"1", "+", "\[Eta]", 
                  FractionBox[
                   RowBox[{
                    StyleBox["p", "TI"], "-", 
                    StyleBox["q", "TI"]}], 
                   RowBox[{
                    StyleBox["p", "TI"], "+", 
                    StyleBox["q", "TI"]}]]}], ")"}], 
                SubscriptBox["\[Omega]", 
                 StyleBox["o", "TI"]], 
                StyleBox["t", "TI"], "-", 
                SubscriptBox["\[CurlyPhi]", "3"]}], "]"}]}], "}"}], 
            "DisplayFormula"], TraditionalForm]],ExpressionUUID->
          "2185d2ea-0620-42b3-9379-14013c1e7c5f"],
         " "
        }],ExpressionUUID->"3607e071-d1fc-44e4-8ff7-d52981f45c53"]}
      }], TraditionalForm]],ExpressionUUID->
    "49bf7fb3-8772-4094-b946-5dadff71a659"], TraditionalForm]],ExpressionUUID->
  "9fa9ae84-4a68-49fd-99f0-872a02791e8d"]
}], "Text",
 CellChangeTimes->{{3.813599895581358*^9, 
  3.813599909327429*^9}},ExpressionUUID->"18a5bf90-c35a-4d6a-98b1-\
b3f0e7a44568"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:542b\:65f6\:8f68\:9053\:4e3a3D\:53c2\:6570\:9762", "Subsubsection",
 CellChangeTimes->{{3.813600010312741*^9, 
  3.813600025002787*^9}},ExpressionUUID->"23fa8aa4-0a1b-4bbb-a221-\
b4defe2d6418"],

Cell[TextData[{
 "\:5728\:7b80\:5e76\:6001",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"p", ",", "q"}], ")"}], TraditionalForm]],ExpressionUUID->
  "0c14c187-5aa4-4041-8162-a76c1468f407"],
 "\:5904\:ff0c\:5e26SU(2)\:8026\:5408\:4f5c\:7528\:76843D\:8c10\:632f\:5b50\
\:7684\:542b\:65f6\:8f68\:9053\:3002"
}], "Text",
 CellChangeTimes->{{3.8135999457145433`*^9, 3.813599992181687*^9}, 
   3.8136000452808504`*^9, {3.813631340298975*^9, 
   3.813631348991001*^9}},ExpressionUUID->"812a7357-b97e-4fdd-8655-\
65d7eb7d0d7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:674e\:8428\:5982\:6446\:7ebf\:6a21\:5f0f", "Subsubsection",
 CellChangeTimes->{{3.813600083335967*^9, 
  3.8136000856729746`*^9}},ExpressionUUID->"9f7462e5-c67d-47ef-92b0-\
b7c2ed716f68"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Alpha]", "=", 
    FractionBox["\[Pi]", "2"]}], TraditionalForm]],ExpressionUUID->
  "a384cba0-068e-49c5-82be-cb9797cc5a1b"],
 "\:65f6\:ff0c\:674e\:8428\:5982\:6446\:7ebf\:6a21\:5f0f"
}], "Text",
 CellChangeTimes->{{3.813600087231979*^9, 3.813600121781087*^9}, {
  3.813631399592147*^9, 
  3.8136314044061737`*^9}},ExpressionUUID->"f0cff388-b2c4-4b6f-901e-\
793828dbb6b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Beta]\:5bfc\:81f4\:674e\:8428\:5982\:53d8\:4e3a\:6446\:7ebf", \
"Subsubsection",
 CellChangeTimes->{{3.8136001242900968`*^9, 
  3.8136001487218127`*^9}},ExpressionUUID->"26dfa8b0-f51e-451b-bf8a-\
4d6c25284503"],

Cell["\[Beta]\[Element][0,\[Pi]]", "Text",
 CellChangeTimes->{{3.813631421124213*^9, 
  3.8136314354502583`*^9}},ExpressionUUID->"d605ccd3-0703-4a85-a328-\
c960304fde82"],

Cell[TextData[Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            OverscriptBox[
             StyleBox["Y", "TI"], "~"], 
            RowBox[{"(", 
             StyleBox["t", "TI"], ")"}], "\[LongEqual]"}], "DisplayFormula"], 
          TraditionalForm]],ExpressionUUID->
         "b6f60ad1-ce34-4a15-844e-a0e1796f4e82"],
        " "
       }],ExpressionUUID->"10e867ff-94cf-4132-9003-fce52a200b08"], Cell[
       TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox[
              StyleBox["A", "TI"], "1"], "sin", 
             RowBox[{"(", 
              FractionBox["\[Beta]", "2"], ")"}], "cos", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "\[Eta]"}], ")"}], 
               SubscriptBox["\[Omega]", "0"], 
               StyleBox["t", "TI"], "-", 
               FractionBox["\[Alpha]", "2"], "-", 
               SubscriptBox["\[CurlyPhi]", "1"]}], "]"}]}]}], 
           "DisplayFormula"], TraditionalForm]],ExpressionUUID->
         "5cb290b4-d52f-4d9d-bdac-78b6aa9d931e"],
        " "
       }],ExpressionUUID->"805ab398-50e2-40c7-8e85-36ba614323f2"]},
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox["\[Null]", "DisplayFormula"], TraditionalForm]],
         ExpressionUUID->"32cf4469-192d-4a5e-9fda-c7e092e48560"],
        " "
       }],ExpressionUUID->"82f8c12b-0459-4f55-9579-aa7b4f3cb0ac"], Cell[
       TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            RowBox[{"+", 
             SubscriptBox[
              StyleBox["A", "TI"], "2"], "cos", 
             RowBox[{"(", 
              FractionBox["\[Beta]", "2"], ")"}], "cos", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "\[Eta]"}], ")"}], 
               SubscriptBox["\[Omega]", "0"], 
               StyleBox["t", "TI"], "-", 
               FractionBox["\[Alpha]", "2"], "-", 
               SubscriptBox["\[CurlyPhi]", "2"]}], "]"}]}], "}"}], 
           "DisplayFormula"], TraditionalForm]],ExpressionUUID->
         "4c07df44-72a1-4a43-802f-4b589f818aab"],
        " "
       }],ExpressionUUID->"5abcb809-d60e-4be2-98a2-3ca70f4c8ab0"]},
      {Cell[TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{
            OverscriptBox[
             StyleBox["z", "TI"], "~"], 
            RowBox[{"(", 
             StyleBox["t", "TI"], ")"}], "\[LongEqual]"}], "DisplayFormula"], 
          TraditionalForm]],ExpressionUUID->
         "8ff16fc8-a254-4734-9556-f1ddd5824eec"],
        " "
       }],ExpressionUUID->"02c100fe-dc48-449c-82b6-5e009d9c110e"], Cell[
       TextData[{
        " ",
        Cell[BoxData[
         FormBox[
          StyleBox[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox[
              StyleBox["A", "TI"], "3"], "cos", 
             RowBox[{"[", 
              RowBox[{
               FractionBox[
                StyleBox["Q", "TI"], 
                StyleBox["P", "TI"]], 
               RowBox[{"(", 
                RowBox[{"1", "+", "\[Eta]", 
                 FractionBox[
                  RowBox[{
                   StyleBox["p", "TI"], "-", 
                   StyleBox["q", "TI"]}], 
                  RowBox[{
                   StyleBox["p", "TI"], "+", 
                   StyleBox["q", "TI"]}]]}], ")"}], 
               SubscriptBox["\[Omega]", 
                StyleBox["o", "TI"]], 
               StyleBox["t", "TI"], "-", 
               SubscriptBox["\[CurlyPhi]", "3"]}], "]"}]}], "}"}], 
           "DisplayFormula"], TraditionalForm]],ExpressionUUID->
         "9056bb0f-d9d6-42b1-a522-4dd379146506"],
        " "
       }],ExpressionUUID->"e37ea1b5-4944-476b-b82c-4a33f0904c22"]}
     }], TraditionalForm]],ExpressionUUID->
   "949fe148-c309-4d25-9dd0-e0f1d8bf6362"], 
  TraditionalForm]],ExpressionUUID->"4234788f-6d29-4826-99bc-5b9da58815e3"]], \
"Text",
 CellChangeTimes->{{3.813600171915884*^9, 
  3.813600190044625*^9}},ExpressionUUID->"0f7e36e4-c017-4c33-bba7-\
dbe91b75fad8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:51b3\:5b9a\:8f68\:9053\:7684\:521d\:59cb\:4f4d\:7f6e", "Subsubsection",
 CellChangeTimes->{{3.8136041237210493`*^9, 
  3.8136041283550644`*^9}},ExpressionUUID->"8f8366b4-b0fb-474a-9ec4-\
d257d27fee76"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["A", "TI"], "1"], ",", 
    SubscriptBox[
     StyleBox["A", "TI"], "2"], ",", 
    SubscriptBox[
     StyleBox["A", "TI"], "3"], ",", 
    SubscriptBox["\[CurlyPhi]", "1"], ",", 
    SubscriptBox["\[CurlyPhi]", "2"], ",", " ", 
    RowBox[{"and", " ", 
     SubscriptBox["\[CurlyPhi]", "3"]}]}], TraditionalForm]],ExpressionUUID->
  "c5e6a7b2-e56e-446a-a184-b31d9f3089b5"],
 "\:ff0c\:4e0d\:5f71\:54cd\:9762\:578b\:ff0c\:9009\:62e9",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       StyleBox["A", "TI"], "1"], ",", 
      SubscriptBox[
       StyleBox["A", "TI"], "2"], ",", 
      SubscriptBox[
       StyleBox["A", "TI"], "3"]}], ")"}], "\[LongEqual]"}], 
   TraditionalForm]],ExpressionUUID->"ce693841-e7f0-4511-8f1c-2ce4f7ee469f"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"10", ",", "7", ",", "10"}], ")"}], ",", 
    RowBox[{
     SubscriptBox["\[CurlyPhi]", "1"], "\[LongEqual]", 
     SubscriptBox["\[CurlyPhi]", "2"], "\[LongEqual]", 
     SubscriptBox["\[CurlyPhi]", "3"], "\[LongEqual]", "0"}]}], 
   TraditionalForm]],ExpressionUUID->"0622ddab-4ab2-499e-928a-ea05ccead996"]
}], "Text",
 CellChangeTimes->{
  3.813604102762988*^9, {3.813604144000111*^9, 3.813604174336227*^9}, {
   3.813631457582325*^9, 
   3.8136314616913385`*^9}},ExpressionUUID->"6e40ae3b-9598-4bea-8882-\
5d9d235af8b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:8f68\:9053", "Subsubsection",
 CellChangeTimes->{{3.813604202690304*^9, 
  3.813604229293375*^9}},ExpressionUUID->"c69c7033-3720-4f83-9325-\
eaaf3e8cf573"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], ")"}], "\[LongEqual]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Pi]", "/", "2"}], ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     StyleBox["Q", "TI"], "/", 
     StyleBox["P", "TI"]}], "\[LongEqual]", 
    RowBox[{"1", " ", "and", " ", "\[Eta]"}], "\[LongEqual]", "0.0017"}]}], 
  TraditionalForm]],ExpressionUUID->"c0a6a7fb-1df4-43ca-9818-8718df7b7a9f"]], \
"Text",
 CellChangeTimes->{
  3.813604242857418*^9},ExpressionUUID->"b8167116-539e-44ae-a494-\
2869a6709f13"],

Cell[BoxData[
 RowBox[{"<<", "Notation`"}]], "Input",
 CellChangeTimes->{{3.813604283216552*^9, 3.813604286889557*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"ec1f7b69-bcc4-4f90-b7d0-b7ba845f0792"],

Cell[BoxData[{
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["A", "1"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["A", "2"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["A", "3"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["\[Omega]", "0"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["\[CurlyPhi]", "1"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["\[CurlyPhi]", "2"]},
   "NotationTemplateTag"], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  TemplateBox[{
    SubscriptBox["\[CurlyPhi]", "3"]},
   "NotationTemplateTag"], "]"}]}], "Input",
 CellChangeTimes->{{3.8136042952115793`*^9, 3.8136043269607863`*^9}, {
  3.8136043679699535`*^9, 3.8136044064620523`*^9}, {3.8136061096080685`*^9, 
  3.8136061099060698`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"842f655a-1369-4b73-8029-34ae0589aff7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["A", "1"], "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "2"], "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["A", "3"], "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CurlyPhi]", "1"], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CurlyPhi]", "2"], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[CurlyPhi]", "3"], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   FractionBox["\[Pi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]", "=", 
   FractionBox["\[Pi]", "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Eta]", "=", "0.0017"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Omega]", "0"], "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q", "=", 
    RowBox[{"-", "1"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    SubscriptBox["A", "3"], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Q", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"\[Eta]", " ", 
                RowBox[{"(", 
                 RowBox[{"p", "-", "q"}], ")"}]}], 
               RowBox[{"p", "+", "q"}]]}], ")"}]}], ")"}], " ", 
          SubscriptBox["\[Omega]", "0"]}], ")"}], " ", "t"}], "P"], "-", 
      SubscriptBox["\[CurlyPhi]", "3"]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "1"], " ", 
         RowBox[{"Cos", "[", 
          FractionBox["\[Beta]", "2"], "]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
            SubscriptBox["\[Omega]", "0"]}], ")"}], " ", "t"}], "+", 
         FractionBox["\[Alpha]", "2"], "-", 
         SubscriptBox["\[CurlyPhi]", "1"]}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "2"], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Beta]", "2"], "]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
            SubscriptBox["\[Omega]", "0"]}], ")"}], " ", "t"}], "+", 
         FractionBox["\[Alpha]", "2"], "-", 
         SubscriptBox["\[CurlyPhi]", "2"]}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "1"], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Beta]", "2"], "]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Eta]"}], ")"}], " ", 
            SubscriptBox["\[Omega]", "0"]}], ")"}], " ", "t"}], "-", 
         FractionBox["\[Alpha]", "2"], "-", 
         SubscriptBox["\[CurlyPhi]", "1"]}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", "2"], " ", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Beta]", "2"], "]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Eta]"}], ")"}], " ", 
            SubscriptBox["\[Omega]", "0"]}], ")"}], " ", "t"}], "-", 
         FractionBox["\[Alpha]", "2"], "-", 
         SubscriptBox["\[CurlyPhi]", "2"]}], "]"}]}]}], ",", "z"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813604273712512*^9, 3.813604281078535*^9}, {
   3.8136043350108113`*^9, 3.8136049189486094`*^9}, {3.8136049586420603`*^9, 
   3.8136050004941463`*^9}, {3.813605035730075*^9, 3.8136050402860575`*^9}, {
   3.813605096775258*^9, 3.8136051280823555`*^9}, {3.813605274170396*^9, 
   3.8136053096725063`*^9}, {3.813605353648698*^9, 3.813605359038714*^9}, {
   3.8136054123945427`*^9, 3.813605416713541*^9}, {3.8136055125967016`*^9, 
   3.813605521313705*^9}, {3.8136056031946497`*^9, 3.8136056992269096`*^9}, {
   3.8136057318880095`*^9, 3.813605761685104*^9}, {3.8136057935262012`*^9, 
   3.813605837910341*^9}, 3.813605964949875*^9, {3.81360616232922*^9, 
   3.8136061849362907`*^9}, {3.813606219439437*^9, 3.8136062225944104`*^9}, {
   3.813606328569734*^9, 3.813606361944838*^9}, {3.8136065544714527`*^9, 
   3.8136065552974005`*^9}, 3.8136301251056643`*^9, {3.8136315086064854`*^9, 
   3.8136316644736075`*^9}, {3.813631697780719*^9, 3.8136317258548155`*^9}, {
   3.8136317662639713`*^9, 3.813631839255198*^9}, 3.813631918500455*^9, {
   3.813634042317705*^9, 3.813634082065819*^9}, {3.8136365255636406`*^9, 
   3.8136365772721343`*^9}, {3.8136366829936943`*^9, 
   3.8136367670060463`*^9}, {3.813636840372285*^9, 3.8136369238078766`*^9}, {
   3.8136369727405915`*^9, 3.813636974572406*^9}, {3.8136374270796356`*^9, 
   3.8136374639487133`*^9}, {3.8136399967059946`*^9, 3.813640029340598*^9}, {
   3.813640060719696*^9, 3.813640144381954*^9}},
 CellLabel->
  "In[930]:=",ExpressionUUID->"b44645cb-655c-4717-bcf6-bce6071774cc"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyVvXeY30W5v79pNBGRFkLxUBaCEAihxKjIrkhbUQ8qoBICESOhrYCUBEQP
ItJCKCu9E4ooIohhpWaXHpCSLrrgUYFIICgQAun7PYeZe3J97jnP9eOXf3Ll
vp7MZ96vmXm/Z5555pnNDz/uG9/v29TU9OInm5r6/c/f91x3zpY3vdev9S+/
O27msd1bt9537pB1m5rebjH/5z9+8Z2O5ncqvsEXlt7Q3PZuxfe64vC5ne0L
Kn7SO08Paet4r+I37zfsxJ7OhRWfceuV97f3vF/xPk3/+2dRxXc8eOzeHc2L
K37Y5OcvaG5bUvEL1xo+s7N9acUfPvK6QW0dyyo+/9H+o3s6l1d8402Pva29
Z0XF9x03c35vb2/LxS/s//SuJ6zoevnyS0++ru/iFnQ2R2dzdDZHZ3N0Nkdn
c3Q2R2dzdDZHZ3N0Nkdnc3Q2R2dzdJ76lW3//vichV1ztnxx0vdeHtyNzubo
bI7O5uhsjs7m6GyOzubobI7O5uhsjs7m6GyOzubobI7Oe+930/mLD+7bOvzp
C8Zu+oum8t4wR2dzdDZHZ3N0Nkdnc3Q2R2dzdDZHZ3N0Nkdnc3Q2R2dzdF77
0J9t9vXfT2kZ8et7P/HkvSvfz+bobI7O5uhsjs7m6GyOzubobI7O5uhsjs7m
6GyOzubobI7Oa7atNeadbfp0d886r/vhbTco7w1zdDZHZ3N0Nkdnc3Q2R2dz
dDZHZ3N0Nkdnc3Q2R2dzdDZH522PeeTVLxz7dssPW6760ZjDtyw6m6OzOTqb
o7M5Opujszk6m6OzOTqbo7M5Opujszk6m6OzOTrf1/u/fz5o2eXDem9e3hvm
6GyOzubobI7O5uhsjs7m6GyOzubobI7O5uhsjs7m6GyOzpO+9bWrrlprRVfL
Gr9pGnPMJkVnc3Q2R2dzdDZHZ3N0Nkdnc3Q2R2dzdDZHZ3N0Nkdnc3Q2R+cX
b7v+hf43/bVr/dmHLb/zq1uV94Y5Opujszk6m6OzOTqbo7M5Opujszk6m6Oz
OTqbo7M5Opuj828fO/bOcV/u23rEt7Y/asKzaxWdzdHZHJ3N0dkcnc3R2Ryd
zdHZHJ3N0dkcnc3R2RydzdHZHJ0fuaHn4elP/7NrzKvfPqxfx+Dy3jBHZ3N0
Nkdnc3Q2R2dzdDZHZ3N0Nkdnc3Q2R2dzdDZHZ3N0fva1/mMf/Waf7pfmjXvq
sq2mlXW3OTqbo7M5Opujszk6m6OzOTqbo7M5Opujszk6m6OzOTqbo/Mf9/jm
2Nu/3ttyy0bP33nH5SvX3ebobI7O5uhsjs7m6GyOzubobI7O5uhsjs7m6GyO
zubobI7O6zU//7HxQ/9nXXVm+9D/mLRGeW+Yo7M5Opujszk6m6OzOTqbo7M5
Opujszk6m6OzOTqbo7M5Ou//lRl3/3W7P7VstM6/Dpz4zy1bp+06enhbx9st
d+/w8dWGrzqg+5LTtrvlrmf+oxtue9rFfMVFT53e0/lOVQ7c9ju8scNj7T3v
VvZw2x+y5+WrNzW9V9nDbX/B9cv/s6N5YWUPt/0Di8Zc3tz2fmUPt/0b33j2
pc72Dyp7uO03vHPnLds6FlX2cNvvu+o1R/V0Lq7s4bY/5bt9727vWVLZw21/
24NHvd/bu7Syh9t+1vrTd+toXl7Zw23f//gRP2tuW1HZw22/0zM3PN3ZXvdP
+q3Lwb7p7evHPr/gjZa9+/zrzLHf+VR31J/pt7anf5rTD83pb+b0K3P6jzn9
xJz+YE67m9O+5rSjOe1lHrUX+tse/Xe/duQn/7poRcsFP7tizv7XNpf3ie3R
3/bob47+5uhvjv7m6G+O/ubob47+5uhvjv7m6G+O/lW7Z/1tj/6HPD725ksO
XNq14ux1l4x77ZNFf9ujv+3R3xz9zdHfHP3N0d8c/c3R3xz9zdHfHP3N0d8c
/at2z/rbHv2//bFd9zzml/O7zpi26Remfn9wef/YHv1tj/7m6G+O/ubob47+
5uhvjv7m6G+O/ubob47+5uhftXvW3/bo/42HnxiybHZT6yHf+fbszUe91YX+
tkd/26O/Ofqbo785+pujvzn6m6O/Ofqbo785+pujvzn6V+2e9bc9+v9zxAOf
ufd7M7uOGHvfJnssGlzeP7ZHf9ujvzn6m6O/Ofqbo785+pujvzn6m6O/Ofqb
o785+lftnvW3Pfo/u3THpZ8/t7fr+FfGzpo7Z0B5/9i++Adkj/7m6G+O/ubo
b47+5uhvjv7m6G+O/ubob47+5uhftTv+Ftmj/5hF/W/eabsPWsZ3P7f7pD23
LvrbHv1tj/7m6G+O/ubob47+5uhvjv7m6G+O/ubob47+5uhftXvW3/bov/ZB
z/3utd0Wtlz4+JXXt7RvWN4/ti/7y7JHf3P0N0d/c/Q3R39z9DdHf3P0N0d/
c/Q3R39z9K/anf162aP/AW03nzHlrr7dJ+389pwZ47Yo+tse/W2P/ubob47+
5uhvjv7m6G+O/ubob47+5uhvjv7m6F+1e9bf9ui/4/kbjdlpzPSuA1499OCR
j25e3j+2R3/bo785+pujvzn6m6O/Ofqbo785+pujvzn6m6O/OfpX7Z71tz36
/3Hyn1ff4/BVWr921X/MuO/NQUV/2xe/sezR3xz9zdHfHP3N0d8c/c3R3xz9
zdHfHP3N0d8c/at2xw8ve/S3nxP9bR/pH/mfKd9xj5TvOL2I077mtK857WtO
+5rTvua0rzntW8UZ5vY1p33NaV9z2tec9rWe6Gx7uOP00Nkcnc3R2RydzdHZ
HJ3N0dkcnas4w6yzOTqbo7M5Opujszl6Oh4PPc3R0xw9zdHTHD3N0dMcPc3R
s4onzHqao6c5epqjpzl6mpf5p+LuyvxHvMwzxcs8U7zMM8XLPFO8zDPFyzxT
vMwzHTfIPFO8zDPFyzxTvMwzxcs8Rxw9HV+HnuboaY6e5uhpjp7m6GmOnubo
WcUHZj3N0dMcPc3R0xw9zdHTcXToaY6e5uhpjp7m6GmOnuboaY6eVRxg1tMc
Pc3R0xw9zdHTHD0dL4ee5uhpjp7m6GmOnuboaY6e5uhZxftlPc3R0xw9zdHT
HD3N0dNxcehpjp7m6GmOnuboaY6e5uhpjp5VXF/W0xw9zdHTHD3N0dMcPR3/
hp7m6GmOnuboaY6e5uhpjp7m6FnF72U9zdHTHD3N0dMcPc3R03Fu6GmOnubo
aY6e5uhpjp7m6GmOnlWcXtbTHD3N0dMcPc3R0xw9Hc+GnuboaY6e5uhpjp7m
6GmOnuboWcXjZT3N0dMcPc3R0xw9zYv/X3Frxf8sXvz84sXPL178/OLFzy9e
/Pzixc8vXvz8jrvDzy9e/Pzixc8vXvz84sXPLF78OYpPK/4E8eK3ES9+G/Hi
txEvfhvx4rcRL34b8eK3cXwdfhvx4rcRL34b8eK3EUdP8yieh/g9c+L3zInf
Myd+z5z4PXPi98yJ3zMnfs+c+D1z4vfMid8zJ37PnPg9x+Ggmzm6maObObqZ
o5s5upmjmzm6maObObqZo5s5upmjm+Nn0M0c3czRzRzdzNHNHN3M0c0c3czR
zRzdzNHNHN3M0c1xL+hmjm7m6GaObuboZo5u5uhmjm7m6GaObuboZo5u5ujm
eBV0M0c3c3QzRzdzdDNHN3N0M0c3c3QzRzdzdDNHN3N0c5wJupmjmzm6maOb
ObqZo5s5upmjmzm6maObObqZo5s5ujk+BN3M0c0c3czRzRzdzNHNHN3M0c0c
3czRzRzdzNHNHN0c14Fu5uhmjm7m6GaObuboZo5u5uhmjm7m6GaObuboZl7O
xSgeo5wnEi/nicTLeSLxcp5IvJwnEi/nicTLeSLxcp5IvJwnEi/nicTLeSLx
cp5IHN0cR4Fu5uhmjm7m6GaObuboZo5u5uhmjm7m6GaObuboZl7yGCj+oeR/
EC/5H8RL/gfxkv9BvOR/EC/5H8RL/gfxkv9BvOR/EC/5H8RL/gfxkv9BHN0c
t4Bu5uhmjm7m6GaObuboZo5u5uhmjm7m6GaObuboZo5ujjdAN3N0M0c3c3Qz
RzdzdDNHN3N0M0c3c3QzRzdzdDMv5/gUR1HOP4qX84/i5fyjeDn/KF7OP4qX
84/i5fyjeDn/KF7OP4qX84/i5fyjeDn/KI5uxw86Y591+s1vWeuE/Z76yahB
3YesueSp9p63K37+Ed9dq6np3Yo/0D31gI7mBRV/faMdr2lue6/iG558xd87
2xdWfO8XVgxu63i/4qd8+ogf9HR+UPFbfvbc5PaeRRWf9fIuS3t7F1e874hr
v9jRvLTiO3X0O7e5bVnFR88/+vnO9uUVv3jvGeu1daxoWX2PJ1/6zZ19Wre+
8dWD7v3bVq3oZo5u5uhmjm7m6GaObuboZo5u5uhmjm7m6GaObubo1v3MyGHd
n1rWdds6f5w9+2urFd3M0c0c3czRzRzdzNHNHN3M0c0c3czRzRzdzNHNHN1e
e23XL1y91btdc16f/uSbcwaXcWqObuboZo5u5uhmjm7m6GaObuboZo5u5uhm
jm7m6Lbmeues3vzZPq3ddy364a+n/KMF3czRzRzdzNHNHN3M0c0c3czRzRzd
zNHNHN3M0c0c3abdNeZPf95mcteU47d7e/cJg8s4NUc3c3QzRzdzdDNHN3N0
M0c3c3QzRzdzdDNHN3N0O/+8J5+9c5Om7oevufC+2+5eu4xTc3QzRzdzdDNH
N3N0M0c3c3QzRzdzdDNHN3N0M0e33eZ+/MKfnryg5eyH17706r5bFd3M0c0c
3czRzRzdzNHNHN3M0c0c3czRzRzdzNHNHN32HN/1zrglC1taPz3yuCUnb1rG
qTm6maObObqZo5s5upmjmzm6maObObqZo5s5upmj2+RTf33I8Tc2dW834K7j
B/54s6KbObqZo5s5upmjmzm6maObObqZo5s5upmjmzm6maNb04jxf9jvidld
uz8++PpN7tmyjFNzdDNHN3N0M0c3c3QzRzdzdDNHN3N0M0c3c3QzR7c91tzt
ktFr9m8dcPZLL3znr+sV3czRzRzdzNHNHN3M0c0c3czRzRzdzNHNHN3M0c0c
3Y7fZb+Dfj3yra5nttjmpVmPbF3GqXlZn4qX9al4WZ+Kl/WpeFmfipf1qXhZ
n4qX9al4WZ+Kl/WpeFmfiqPbap/9w7QrP9uv+/tb//C8Q3+1tMx71zlm+Cf/
/YnFXTtc8saPXjt15Tpi/K4DHt5uWP/WBzY97tqh667ZGvkBfnj/9m92tr9T
2Uc8Wv9i7/InrXvZsLaOd6tyIh6to7F3+dPal43r6VxQlRPxaD2Ovctvmvq9
Ke0971XlRDxa12Pv8nfY4o/9m5rer8qJeOQfwN7lH3r6Tvt1NH9QlRPxyM+A
vcu/YM5VlzS3LarKiXjkr8De5T+0Y58XO9sXV+VEPPJ7YO/y3zj/yE+1dSyp
yol45D/B3uVv9NoLY3o6l1blRDzyw2Dv8vdt+cwd7T3LqnIiHvlzsHf546+6
/p3e3uVVORGP/GnY+31124IBIzqae6vfhbt8uMuHb7bZ0hcOGz+9ZVTTpn98
7PSVfjxz3lfmkZ8qsue9ZB75tSJ73j/mkR8ssuc9Yx75zSJ73ifmkZ8tsue9
YR755SJ73g/mkR8vsuc9YB75/SJ7xrt55CeM7BnX5pFfMbJn/JpHfsjInnFq
Hvl7I3vGo+3hrR//0ktjZvftfvDuNd46cLeNy7zFnHFnHvlFI3vGnXnkR43s
GXfmkd81smfcmUd+2siecWce+XUje8adeeQHjuwZd+aR3ziyZ9yZR37myJ5x
Zx75pSN7xp155MeO7Bl35pHfO7Jn3JlH+wuRPePR9vCLm5ePm/i7+S2Dj93x
g2eP3byMU3PGnXnkh4/sGXfmkd8+smfcmUd+/siecWce7QtE9ow782gfIbJn
3JlH+w6RPePOPNqniOwZd+bRvkZkz7gzj/ZBInvGnXm0bxLZM+7Mo32WyJ5x
Zx7tZ0X2jEfbw6csbduod/2lLYd88mOn7bt4izLvNWfcmUf7PpE948482ieK
7Bl35tG+UmTPuDOP9qEie8adebRvFdkz7syjfa7InnFnHu2LRfaMO/NoHy2y
Z9yZR/tukT3jzjzap4vsGXfm0b5eZM+4M4/2TyN7xqPt4WvPuOOvtw5Y1rXO
1C+t+O7IgWWcmjPuzKN9xsiecWce7UtG9ow782gfM7Jn3JlH+56RPePOPNon
jewZd+bRvmpkz7gzj/ZhI3vGnXm0bxvZM+7Mo33eyJ5xZx7tC0f2jDvzaB85
smfcmUf79ZE949H28J0ePebRBce/1vXbzw666m8Tti7zXnPGnXm0rx3ZM+7M
o33wyJ5xZx7tm0f2jDvzaJ89smfcmUf78pE948482seP7Bl35tG+f2TPuDOP
4gQie8adeRRXENkz7syjOITInnFnHsUtRPaMO/MoPiSyZzzaHr7192YtPGDn
Pq3/nnvc5Kda+5Vxas64M4/iKCJ7xp15FHcR2TPuzKM4jciecWcexXVE9ow7
8ygOJLJn3JlHcSORPePOPIoziewZd+ZRXEpkz7gzj+JYInvGnXkU9xLZM+7M
oziZyJ5xZx7FI0X2jEfbw/v1+/hlq/X7e9fB373iiOOWrIw/NGfcmUdxO5E9
4848ivOJ7Bl35lFcUGTPuDOP4ogie8adeRR3FNkz7syjOKXInnFnHsU1RfaM
O/MoDiqyZ9yZR3FTkT3jzjyKs4rsGXfmUVxWZM+4M4/i3yJ7xqPt4Yf8/Oz+
T23b1D34X/3nnj5vQRfj1JxxZx7FiUX2jDvzKK4ssmfcmUdxaJE94848iluL
7Bl35lGcW2TPuDOP4uIie8adeRRHF9kz7syjuLvInnFnHsXpRfaMO/Mori+y
Z9yZR3GAkT3jzjyKt4zsGY+2hx+11SoP9t9tacvspp8uW775yrgvc8adeRSX
GNkz7syjOMbInnFnHsU9RvaMO/MoTjKyZ9yZR3GVkT3jzjyKw4zsGXfmUdxm
ZM+4M4/iPCN7xp15FBca2TPuzKM40siecWcexZ1G9ow78yi+N7JnPNoefuO7
ez//q7cXttz/5y2GXdFn3TLvNWfcmUdxsJE94848ipuN7Bl35lGcbWTPuDOP
4nIje8adeRTHG9kz7syjuN/InnFnHsUJR/aMO/MorjiyZ9yZR3HIkT3jzjyK
W47sGXfmUZxzZM+4M4/iySP7Emco+7Ivc9Sd16z7yQHde56zecsjGzev3JcR
L/ss4oxT87KfIs54NC/7JuKMO/OyPyLO+DIv+yDijCPzst8hzngxL/sa4owL
87J/IU7/Ny/7FOL0c/OyHyFOfzYv+w7i9Fvzsr8gTv80p785nh/uvPr0N3P6
VXV/Qe4/5vST6v6C3B/Maffq/oLcvua0Y3V/QW4vc9qlur8g62+OztX9BYxf
5Xsv41S8jEfn1WfciZfx5bz6jCPxMl6cV59xIV76v/Pq08/FS392Xn36rXjp
n86rn3VzHnJ0M0e3Kt971s0c3ap871k3c3Sr8r1n3czRrcr3nnUzR7cq33vW
zRzdqnzvWTfnG0c3c3Sr8rpn3czRrcrrnnUzR7cqr3vWzRzdqrzuWTdzdKvy
umfdzNGtyuuedXNecXQzR7cqf3vWzRzdqvztWTdzdKvyt2fdzNGtyt+edTNH
typ/e9bNHN2q/O1ZN+cPRzdzdKvytGfdzNGtytOedTNHtypPe9bNHN2qPO1Z
N3N0q/K0Z93M0a3K0551c15rdDNHtyp/eNbNHN2q/OFZN3N0q/KHZ93M0a3K
H551M0e3Kn941s0c3ar84Vk351tGN3N0q/JaZ93M0a3Ka511M0e3Kq911s0c
3aq81lk3c3Sr8lpn3czRrcprnXXz+aY9D3vylua2+twl3PYP3/jZkT2d9Tww
ykdEObZnPVLdM5XXHeasL6p7pvI6wpz1QnXPVF4XmDP/r+6ZyvN8c+bz1T1T
ed5uzvzcnHm4z5Ghs/WE+zwL3OdZ0L86j8O9lr53KcjzQzm2L+tK38fE+lG8
rBN9HxPrQfGy7vN9TKzvxMs6zvcxsV4TL+sy38fE+ku8rLPEaUefX6BdrCfc
cdQRp72qe4iCPDm0l+1pr+p+otxe5rRXdT9Rbi9z2qu6nyi3lzntVd1PlNvL
nPaq7ifK7WVOe5nTXo6PRX/rCXecHry6zyjIw0O72J52qe45yu1iTrtU9xzl
djGnXap7jnK7mNMu1T1HuV3MaZfqnqPcLua0i3nxSzg+M/d/64n+jsuCV/ci
BXl+aBfb0y7VfUm5Xcxpl+q+pNwu5rRLdV9Sbhdz2qW6Lym3izntUt2XlNvF
nHYxp12qeLzcLtYT/R2HA6/uVwryCNEutqddqnuXcruY0y7VvUu5Xcxpl+re
pdwu5rRLde9Sbhdz2qW6dym3izntYh7FQaGz4yvgjq9A5yo+JLdvdd9QkIeH
cmxPe1X3EOX2Mqe9qnuIcnuZ017VPUS5vcxpr+oeotxe5rRXdQ9Rbi9z2ss8
2menXbx/B/f+HTpX+4/cF+z7d4I8NpRje9qrupcnt5c57VXdy5Pby5z2qu7l
ye1lTntV9/Lk9jKnvap7eXJ7mdNe5rSX92toF+tZ5gnyq8PtVy/zavv5czva
nnJ8XzP3MZlzH5M59zGZcx+TOfcxmXMfkzn3MZlzH5M59zGZcx+TOfcxmXMf
k9et3H/t+4bQ3/cyo6fLwc9gznhxOehve/wS5owvl0N72R4/hjnj0eXQvrbH
72HO+HU59Afb4ycxZ7y7HPqP7fGrmPN+cDn0N9vjhzHnfeJy6J+2x29jzvvH
5dCfbY+fx5z3lcuh/9sev5A57zeXw3ixPX4kc96HLicaX1H+nLIPLv8S77Hq
vrDM7Q9hnPreK3iVLyi/P6t7tQL/CeX4fii4/SqUU90/lbn9AJTje5TgVV6F
XP/qnqbAP0A5Xs/CfZ8OvDp/mn+3uq8nWP9STnU+Lpfj9QL2vm8FXp3fyeVU
97nk+lTnCLK957GU73s34J4PU351rwft7njL/Luej1G+71+Ae15H+dX9Dpl7
HkI5vqcA7vkD3y9zvkfmfF/M+V6Y8/43531uzvvZnPetOe9Pc96H5rzfzHlf
VXE+uR2reyKCeVc0fyvzat2DELVLmbf7noX8u34PR374yE8b+QMjfxTc6/do
PR6t+6L1RTTvivYjmL9V36+sm9//2Fd557K9dYv855Tj9zO8yp8T+NUjvyLl
VHkDAn8v5fh9SzluR+z9XsXefp7ovYq92z3yJ2Dv9yTc/SRa52LvcQqv4vqC
9W+0/qIcj+vInnm+OfN2c+bh5syrzZknmzPvNWcea8681Jx5pjnzRnPmgebR
vA79Pe7Q2fMueJX/LZfj8YW95z/ROIJ73gL3/ATu+QO8Og8VfPexr+K9s737
bamnviPROOU9efEL+z+96wkrul6+/NKTr+u7uOWmD55cu6npnYrTb81PnL30
Y01N9Xpzr9/vuGpTU73u4/tuPvCS7/dtavqgKr8p30NkPu8HVy/v7a35jNxv
zR/8yguLenuXVL97S14fmU/ctv97vb31OuiU/N03P2y1z/67t3dF9V1Azype
MT+XOc+19343nb/44L6tw5++YOymv2hqpRxz2sWcdjHnd82j30VPc/T0d4p6
VnGG3Psmzu+u2bbWmHe26dPdPeu87oe33aDoZl7yrYnzvOb8rnn0uzyvOc/r
7yn1rOID8++a87v+zlJOFS+XyzGnHI9ryqnix3I55pTj7zLlVPFUuRxzyvnt
Y8feOe7LfVuP+Nb2R014dq1SjjntaE47mvO75tHv0o7mtKPnD9SzioPKv2vO
7z77Wv+xj36zT/dL88Y9ddlW08r705znNed5zfld8+h3eV5zntfzGepZxS/l
3zXndz3PoRxzntec5zXnd82j3+V5zXnew47YasC20/u27nL3sgk/GLXyvbTe
8+m70HlD4/flwWy/4K5kz+8e2z3s8z/aYHnX3N/9Yu0v/KBvKefIr6X39st6
n5/VlexnTk72lLPNJj8b/cSq73UduMUrZ/z0nyv1b8rv1T8+3vh+fjvb75/t
KWeVBdfOvOOePq2bvjfhpw9+c+HK7/Wp6b16md63r7+b7G/7d7KnnDPe2WL4
4Xdc1dJ/wR5jv779yv4/Ir/3Hp3R+P5sHbrlh/Y7ZXvKuX6Di5u/N7Gp+82R
009ZPH7d8ly3HZXee5u0Nr4P78v2rxyc7CnnB2f12eWsOe+0PHP1ft1PfKG5
lPNG/n+Hfvj+22zl+/BnyX6Ta5I95ax2xf1Lv/+n91v2O/aobU569j/Kcz17
UHrvrb1m4/vwxmx/4jHJnnKWHbXuGwPP7u06/g+TRp/z+KdKOfvemd57F89q
fB9enO1/eF+yp5y1//bOmbtO/nPXjE0GD/rYhJXP9UB+L90+svH9duQryf7c
bE85t511wqnfHPg/840zXjp/7vbrlHL2vza9l3bS++rubP/qT5M95Vxz15YH
/vaxN7peumiz464bvrLdvzY3vTdu//j4hvfPLncm+7uzPeVcPem7f5sytG/3
p3+07x7n/OnfpR+O+mJ6bzyj98mibL/KOcmecoae/o9ffOemptbxv/3Vqrv+
auW4WLRVGtd//HHj++FfP0r2P8n2ZVy0j1n7uIMHtL7xxc/tOvK5tct7Zv97
vjHxx3NntRy9zgcrtni4ufBtj032a30h2TNfHfbmavst2WeV7rXmvXL1FfM3
64Zf+Wwq54x1Uznw1/e+b9+7N3mz5cKRF7cNn7dxsR83NvkZei5OfgbeV9sM
T+uaPbZO6xq46897zPWHbzgq+b2/sW7yezOPPffzib+6diN/JfuxdxuX/Njw
0zJ/7ceN3PowH7Y+cOsDtz7wrq2//8wl/92v++wHF35s3GWblu9+n8GJH/OH
xNHz8qMu/vytFzW17jLzyGlPfnmrov/+q6T14JjeTT5cD6Kny0e3pnnJ3/5Q
/+Rv53lX+yDxacvfauCuD/V3feBDnjt3xs0/ebNl1aPmz/nPAzcrz3Xxk4n/
5ujES/27po665rylXX/+9MFvrLnxWuW5etdM69ZjJ6d1K8/l8nmu3a9Pfv4j
zkx+fuq/x9WJ331WI3d9qL/rA9/xyhduP+ndZS1nXHnrD7eZs2UZR4dcnfgW
VyRO/d/89Fe2a/38213d47sm3XjH4PK8+26X1t2nHZ3W3TyXy+e5hjw69uZL
Dlzatd2EdZeMe+2TK/v5k4lPP7ORuz7U3/WBT36i/6iNzljadeagBQMPvmO9
8lxfeSzxJzdNnPpf33ve40f9u6l11esOmPr88Ce6Sv9cnPwGz62T/AY8l8vn
uX76ybQ/8sELaX+E+g8bkPhq0xu560P9XZ/SP3/VvuLRBa93vfiVET+dPGBw
6YeP35X4dplT/5c+c+CqA3ac2nXc2Z+f0f+FweV5F81Mfo9FjyW/B8/l8nmu
DR5+Ysiy2U2t037y7dmbj3qri/pfmPnrOzdy14f6uz7lfXJ49+rT5ze1Dl/+
2q/P/eWSLp7r0cxf+MTcDzn1f3H91Vf/2D29XWvcdtDyNe74WHne+Q8mv80Z
n0t+G57L5Zf1wnZp/+jSvH9E/T+xd+IjxF0f6u/6wJ846bnz7nrkL133/PVf
J3Stsk3ph+eNTfyBzKn/iJkHbPRAy8KWvh97+ed/uWur8lwjsr/9oZeTv53n
cvk8147Ld1z6+XN7u776l7Gz5s4ZUPrbmCWJXzq/kbs+1N/1gf9m6+8t+8qU
3q4rfzXpgEv/3Fva69vbJD7q8sSp/6tf/vja3cctbPnLxzf+3FO9G5Xn7btG
8qeNz/40nsvl81yzF6Z9t/0fSftu1H/BksQndTVy14f6uz7wgydPuvCc7Re3
nHXKnAG7dm9dxteTv0t8xLjEqf85K65e95Rr+nQP3/iAxfedtXl5ruPPSnlR
2poGfJgXhedy+TzXom+n++vv7k7311P/bb6Z+NFTG7nrQ/1dH/iiRZv/7YYj
FraMOvHs8QseWb/0w28vS3yN4xKn/t++/5srHlk4o2vFPyZuvNHjW5Tn3XOb
5M8cnv2ZPJfLL365fdN+5d92SfuV1H9h3sdcbadG7vpQf9cH/siS9t2ufrFf
9+EbPnrnjgeu/H71zXzeoMSp/32/+/byc7Ye0LrBHT+csN5JA8tzfeXfye86
6+Xkd+W5XD7P9fZVaR9wzj/SPiD1H31a4jNea+SuD/V3feBn/Mc/9/j4kOld
J37pziUH/nblfGPHHRN/+YuJU//TB3x/+y1/8u+unV751rpH7bLST3t/9huv
d3byG/NcLr/4/e5N+4xrXJf2Gan/2Xn/8ReXNXLXh/q7PnCv6/Gv2u8a+at5
LvNy74B45H8u8yVx6mmOf9g88g9Tz+o8Uf5dc37X/ljKMed5zXlec37XPPpd
ntec57W/l3pW527y75rzu/bHUo45z2vO85rzu+bR7/K85jyv/b3Uszq3wjpL
vIx3+XvLe8nnLHI55pRjfy/lVOcCcjnmZd4if2+ZXzmOPZdjTjn2x1KOOe1o
Tjua87vm0e/Sjua0o/291LOKA8+/a87v2h9LOeY8rznPa87vmke/y/Oa87z2
91LPKo46/655WT8qHq/4qcTxD5sXv414WS+Lo5s5upnjRzLHj2TOd9C8+GfE
0cc80od2MaddHH+InuboaY6e5uhpjp7m6Gle/I3i6GmOnuboaY6e5uhpjp7m
6Ol4y+KHFy95PsXR0xw9zdHTHD3N0dMcPc3R07z4u8TR0xw9zdHTHD0dX4qe
5uhpjp7m6GmOnuboaY6e5uhpjp7mxc8mjp7m6GmOnuboecjjya+14uzk10JP
c/Q0L345cfQ0L3lZxdHTHD3N0dMcPc3R07z48cTR0xw9zdHTccjoaY6e5mX9
K17Wv+LoaY6e5uhpjp7m6GmOnuZlvSxe1svi6GmOnt/IfrxDvpP8eOhpjp7m
6GmOnuboaY6e5uhpjp7m6GmOnuboaY6e5uhpjp6OS0dPc/Q0R09z9DRHT3P0
NEdPc/Q0R09z9DRHT3P0NEdPc/R8dmnyWx7/SvJblv1f8RKPIV7iMcTLvF28
zNvFy7xdHD3NS1yHeInrEEdP87IuEC/rAvGyLhBHT59fQE9z9DRHT3P0NEdP
c/Q0R09z9DRHT3P0NC/+cHH0NEdP8+IPOSj5aS98PPlpS7yceMmLIo6e5sWv
Il7y+Imjpzl6mpd4BnH0NC9+QvHi5xFHT3P0NEdPn3NBT3P0NEdPc/Q0R09z
9DRHT3P0NEdPc/Q0R09z9DRHT3P09LkV9DRHT/PifxZHT3P0NEdPc/Q0R0/z
sr8sXva/xIu/Wrzsg4ujp3nxq+g8Tom7Ey/n5cXR07z4Z8RLnjFx9DRHT3P0
NEdP8xJnKF78ReLoaY6e5uj5mRx/8uzrKf4EPQ/P/Cf/TBzdTvt+iuubk+MA
4Yu+lPwtZ3yy0S/k+BZ0OPeT6ZzCrJPSOYXiF9o88S+3N3LXB31cH/jxe6Y4
mScOSXEyPFfr7ok/c1ji1P++R1Oc4WW/TnGG8Cuy3+Nzpzf6ZxyHU97nX0rn
nva4IZ17ov59vpj4Gjc1cteH+rs+8Dk5TmbBjBQnw3NdfnTiQzOn/hcOSnGP
R+e4R/i5C5L/4fzetxr8JI7D4bl2mZrOg3xz43QepLxXn0t88eqN3PWh/q4P
fPKUFCezZLsUJ8NzPfRQ4gN3Tpz6H5vjNvv2u+DDOMzi97gm+QE+dVajv8Jx
ODzXb95I58guzufIqP+1/0h8g3mN3PWh/q4PvHlIipO5JcfJ8FyH7ZD4IZlT
/+62FEd64bspLrQ87xNpPf76WY1+A8fhlPjGddO9z09PSPc+U/+T8n3Q981s
5K4P9Xd94OfnOJl1HklxMjzXlzPfaecDP+TUf98cp7rDYSlOFd68WloXP6n1
u+Nwyvg6LZ3XG35COq9Xzqe8lvhexzdy14f6uz7w1mEpTuasHCdT4pM3TfzR
zKn/lWenuNkXr0pxs/Af5vXppL0b19GOwynPdX46P3jQFen8YPFD5nOF293Y
yF0f6u/6wDfbIMXJvHJzipMp50EGJr7WdYmXdrksxfEu+kGK44X/qCWtE/fX
etZxOCUu+pV0zvHXU9I5R+q/5PXED3+okbs+ZRypPvDLZqQ4mdYcJ8NzvfxC
4qusmTj13+yYFFc8eXKKKy7z/7xe2+n1xnWl43B4rvmnpfOY52+VzmNS/xtP
TvzdIY3c9SntovqUdtwvxcnMXzPFyfBc13418S3WSJz6vzgrxTk/s2mKc4b/
ZnFaN62l9Z3jcHiu1fN5uudWSefpqP/o0xI/r18jd32ov+tT/JM5TuaqHCfD
c81Ynvh/b5I49T8rx11//8cp7hp+4wFp/XL6k43rLMfhlH2ofdK515ceTede
y77JNonf+EQjd32ov+tT/IRTUpzMuTlOhufqfibx0X9PvLw37k1x4F+5OMWB
w2/L64gpOzWudxyHw3ONz+cZ1zw/nWek/mtlvuKnjdz1Kf1N9YE/luNkHsxx
MjzXbplveVfiZV/sphSXfuaoFJcObz0zzefXfa1x3eE4HJ7rr0PS+eIt8vli
6t93t8RP3LKRuz5l/0v1gW/dP8XJrJ3jZHiuNQb//o4tBjZ1jz/vg8Xnt75R
4vCPzPHbP9w9xW/D2ztPHvqHcz7o+tXbx77y8H0rv++vP53it7+e47fhe96f
7Kdne/TxeRnWI233Jvsrsz3c52Lgng+zTvH8Ge76lH1excnDV5ue4nAGXNh4
3ufpPE+eO75xnux5LOV43gv389IfHA8Pf2aXFP+/0/qN8f9+Ltr9xmdT/S+8
vTEe6YwZiQ/5eSNfbf8UL/SK4ojcXqy/XH+426vsX2u9w3rN6yO4nxfucxBw
rzuK/0frFPjpW6X+v+g3qf+zTmzO5ymu2SP1f/hXc397P/c3+Im5vy2em/ob
fE5ulxezPsWPd2dq3zVzf4MPeSzptumvkm5l3/kLqf+MGZ36D/zCYwZ99r92
7Nd6/z6v3XXq91Yp4+6tfH7hyvvSuYMy3rP9+NZkz3i8PfMhbYkzvnyODO5y
6M8+NwHfZr/Ur6bpvNu589O6rE+/xv1rr5sox+ssuOvPePH5C/hmQ9O5j2/1
2bTh3Iefi3F0bluq/zMaF7/9copbu7mrMf7N9aH/W0+461PiOnQ+pfjftA6F
e90Kn3V0qs8lX0j1of/8IbfXJg8lfeBPbpjqeVyuZ+nPWf9/TU/6lziT948e
07rqMy29v374nq9ttfL7suPUdE5kj3xOpMRbrnXMh/aT70j2ZZ7z71TO1FxO
OSelc4glPlPl0B98zqXEZ+Y4w0nPNZ6XbL0uraMXn9m4jvY6l3K8Loa7/iXP
gM7LwM/M+SXWuLPxnI6fi374t1z/p2c09re/XZriHt9RPKTrU85BSE+460P/
8XkiuP0GcPsZ4N3rp+d6Mz9X2Xd7Pulz/ZFJH/gFWf9TV036l/dz1v+zuyb9
4c+cP+S92+f36X7gfzritx7dsPS3l65K53p+mM/1lPXghGR/1rJkTz/szOXc
3XTHh5z+5nOsJY5U5RT/s84llX6yR2qvl37VeN52z8eS32O98xr9HvZLUI79
GHDXv8RX6HxT2TfcNJ2rmtneeK7Kz1X83oNT/c/4VWN/OzrHtV4xrTE+1vWh
v1nPss+o+tB/fP4Lbj8P3H4h+Kfyc124ND1XeY9dkfSZkdsL3r1e0v+orD/8
U0OT/ntm/eH73nDHmG3/618tc7raz5t0wsr10WaPp3NYD2ySzmHBb7w62S/p
Tvb0w/43JX50LqfE8eocNNzl0B98jgz+0r45DnlO43ntCWslP9UI+ansR6Ic
+53grj/9zefR4P9Yns7Bzf9E4zk4Pxf98Ne5/m+82NjfdjsyxUXPbm2Ml3Z9
Sry09IS7PvQfn9crcfvyy5X5p/x48OarUn0OeiTVp+yjPZn0+cmGSR/4Drme
w0enesKHZ/13/1bSH37pu5cc8vqxi1suG/H2vBdWWbm/ue9v07m5A/O5ubJe
ey/Zj/1Msi95UXI5C3M5pR/qHH05v6NyyvxN5/4KPza11wO7N573H579ihsc
2+hXtN+PcuwnLHH7qj/9zecH4UOmpXOL2z/beG7Rz0U/3OgHqf5r7d7Y39br
m+p7/oqUf6CcF1B9Sj+UnuVcsOpD//H5yhJvKT9q6Yfyu8Kn5edaLT8X/WeD
25M+fb+a9IF/+ZxUz7Oz/uV8ygZJ/z9l/eFnnL9wy9v+vqxrSr+n+s19Z1Dp
h8/kc46f/lg65wgfcl6y71wl2dMP387lPNI38fLeUx4GuMuhP/icJvzsFekc
xGp9/rfdVubPOXCn5Af+ifzA9tOW/ia/Ltz1p7/5vCd88tR0zvSvIxrPmfq5
il9uear/y7n+5b2X81estlbjeQ3Xh/5mPct5Z9WH/uPzsHD7veH2k8MfOjfV
5/erpvrQf97O+ly0KLVXWf9emuo57bhUzxK3mfV/9eqkP3y1aWv2zNn5H103
bvjUpm8vWuk/7zw6nUu9L59Lhb83K9nPHZjs6Yfjn0/8L7mcsh5RHg+4y6E/
+Fwt/Ihvp/bad7XGfCNnLUt++7v/2ui3t1+dcuyHh7v+9Defz4VvlM8Fb/52
47lgPxf9cLfvpPqfskpjf2udnM71NM1qPO/j+pTzcdIT7vrQf3x+Ge59itJv
ta9R+uecVJ8783PRf94Zl/S5O+sDPy3rP+f3qZ7wXbP+e2b94V/58eB7j729
T+u/znrm3G9ssPrKvCWD0zni565O54jL+ZdsP21Csi95BjI/4szE6W/OA1PO
v6gc+oPPQcNH35ja62rl79rkg7TP8qr2WbwPQjneN4G7/iVuWeep4f2Xrfnh
Oe7ddI7bz1XiIq5K9d92TmN/ezKf27pxdOP5L9eH/mY94a4P/cfnzeHeV4J7
H6r4eXJ9lk1M9Sn9J7fXGr9N+sDPnZ7quf6nUj2L/deS/rusnvSHL/rHxX0u
OvPVrpYVB1/6g5kr93+PuSed+14jn/uGn/Bysl8j29MPJ72a+P6Zl/NByiME
dzn0B59bh0/K7dX8zcZ8R2d9K+2L3fBo476Y960ox/tcpXzVn/7m8+/wEWen
c/d7v9S/4dy9n4t+eGmu/5CvNfa3l69M5/6adB7Q9SnnlaRnyZ+g+tB/nB+g
nG/SPmDxN2rfED61J9VnyfJUH/pPn3uTPgfl9irvw1zPkaenesJvz/p/cdOk
P3zEoTef96lfNnWPWOexe5d2/nd57126NJ/TPz6d04f3PSzZnzTn0Q/t6YdL
RiW+VXMqh/7mPFQlL4TKoT84zwB82M2pvS5Xvqz+eR9z210a9zG9z0g53peE
u/7lfah8BfALt0h5Ek7s05gnwc9FP7zptlT/qepvM3L+rlOGjW84H+r60N+s
J9z1of84nwPc+7Zw7/OWc0/5uc59PD0X/WcX2uukpE/xK3amen4v61/623NJ
/62y/vC5nRutPmW/5S1zf96+ziVHrVwXj8h5FU7NeRXg109O9nucnezph8/9
IfHuXE7Jh6M8ZiUvkMqhPzgvBHzffA537Scb8z2u3ZH2nS97pXHf2fvClON9
ZLjrT39zfgn42wtTXosbZjfmtfBz0Q8ffzXVf+9JjeeR325J54L/pfPCrk/J
NyI9yz6L6kP/cf6N8r3WPjvc+/LwIfm5DsjPRf95KeuzbW4v+E+y/pd9K9Wz
nIfK+h93d9If3rrj7CPvf/n9ll+v8/O9lg9duf9+/PYpD8bme6Q8GGWfZedk
v90nkn3Jkzk08bXXS7zEUcuedne+DviIPVO7/ER5+d7KcbZDrmmMB/bvlvhq
5fGAH31kyh9y8rmN+UNcT/rPrXul+nxH/cS/S39w+bSj85bAH8+/O36tVE5Z
hw5K9V+a9YG/++OUV7At5xUs758lYz6Mu2j+R4q7iPJ4oHN1XzDfX/EoP0Y5
l+H7avH/iEd5Jyinukc1l2NOOc4jQTnVvZ+5HHPKcR6JMk/zPZXBvfCU4zwS
lFPdqxjckx7lcyjvZ9/3F9wbHuVJKHH1vocuuEc76j+Md3PGkXmUf7vEB4qX
czriUV7rkidTnHLMSxy4+kOJVxenHHPKcX8o6xRxyjEvcX3qDyX+UJxyzKN8
0ZRjXvJBiUd5mMv5DvFyzkKccpwfie9CdX9fPg9iTr81L+9h8SgvU5QPP7rP
juedkuN2Pv7LFLdT4v9zPNttP048ukeA75TL4bmcTxW+eS5n23say7nvgHQe
pFN5Qvy7Zd6uesKdNxXuckr+uh+kPLFnXtKYJ9b2tLufF37xtcn+tHsa7zVw
PUtePv0u7ei8tXDn3S1+gPzdPChzdD5tefpuHpm/m/Bpg1P/OffUxv7m8lfm
gUz3hjyzXr7HJNdn+OcS7zOikft36VeuZ4mbyvOfE65onP84Lxnt6N+lvVxP
uOtDe7k+8GE5Tu+AHJ/G/R1v5HwR2+Z8Ef/8n//e0fxOxTf4wtIbmtverfhe
Vxw+t7N9QcVPeufpIW0d71X85v2GndjTubDiM2698v72nvcr3ifrZr7jwWP3
7mheXPHDJj9/QXPbkopfuNbwmZ3tSyv+8JHXDWrrWFbx+Y/2H93TubziG296
7G3tPSuquBF0M0c3c3QzRzdzdDNHN3N0M0c3c3QzRzdzdDNHN3N0O2hZ2h9/
f+20P45u5uhmjm7m6GaObuboZo5u5uhmjm7m6GaObuboZh7pxn09sxak/dk/
5P1Z9Byfn+M3Ob8949326GyOzubobI7O5uhsjs7m6GyOzubobI7O5uhsjs7m
5R75vO/ZP+f/R881s595j8eSnxn9zdHZHJ3N0dkcnc3R2RydzdHZHJ3N0dkc
nc3R2RydzdHZfl30NEdPc/Q0R09z9DRHT3P0NEdPc/Q0R09z9DRHT3P03Pe9
5L+680/Jf4Vu5uhmjm7m6GaObuboZo5u5uhmjm7m6GaObuboZh7pVu7ZlH8J
Pc3R0xw9zdHTHD3N0dMcPc3R0xw9zdHTHD3N0dMcPc3R0/NP/JPm076+w7c6
mt+teO8dl13X3Lag4jussvyVzvb3Kj5q9Jht2zoWVvyCB/54fE/n+xV/I8/D
zQc93WfPjuZ6/rzvlked39y2tOLjfjxtWmf7sorf9qfPDGzrWF7x2cNuGNXT
uaLifS9Y5Zb2nt7qOz43+L6vn/uh+Z65H5qfmPuh+aTcD82n535ozrrGfGju
h+aH5n5oPjH3Q/OHcj80fzP3Q/ONcj803yf4jr+Q+5s5/c18+9zfzOlv5hNy
fzNn3WdOfzPfJ/c3c/qb+a25v5nT38zpb7vk+2r75Ptquc/RnPuazbmv2Zz7
ms3xI5lzL7M59zKbcy+zOfcym3PPsvltCwaM6GjubTkon2c5Pp8nOv/Lv3ir
s/3tit93y5Kd2zreqfjrK757Wk/nuxXf4DtPd7f3LKj43tnvYX7Sx6/8akfz
+xW/ZWzvL5rbPqj4jEeO+Etn+6KK993k+c3aOhZXfMdTdh3b07mk4hdmP4n5
lLOO+VxH84pKN97ztp//1xlnNLf1VuvoF3YdPbyto/Y/TA/48oueOr2ns/ZL
9AZ8+zd2eKy9p/ZXDA34yD0vX72pqfZXjAr4hOuX/2dHc+3HmBjw+xeNuby5
rfZvPBjwed949qXO9g8q/mbAB96585ZtHbWfZFDA91n1mqN6Omv/SVvAT/5u
37vbe2q/yriA35r9b+a/DPjM9afv1tFc+1tmB7zf8SN+1ty2ouIDMnc/pH/a
ftgzNzzd2V7znTO3H+O8/B4wH7j59v/V01n3W9aJtv9Dfm9UfqEfXfpEe0/N
/5nfJ+br5/dJ5S8a+r1vdDTXfqRyL4/4zPOeubK5reYn5vdP5V96ddh/d7bX
/Ob8XjIftvtVW7V11Hx6fl9V/qgrm47t6ax5n/weM7/o3bH3tPfUfGh+v5m/
ddvwlo7m2n9V/MP2X/W5/ufNbbVf6+H8PjTfb+SAZzvba/5mfh+aj7/32HXa
OmpO/xlxaopHfWNwikfdK3+XzU/M32Xzm/N32Xx6/i6bD83fZfPD8nfZfGL+
Lps/nL/L5m/m77L5qcTriv8yf5eH5HjR7hwvOiGPR/P78/gyn5fHkfnAPI7M
9+G8gPjJeVyY35r7v/nM3M/N++X+bD4s91vzizj3Id6V+6F1471n+7dyP7Qf
hu+y+fSA81027w0432XzoQHnu2w+KuB8l80nBpzvsvmDAee7bP5mwPkumw8K
ON9l87aA8102Hxdwvsvmvww432Xz2QHnu2zOd9n9kP5pe77L5nyX7Qfju2zO
d9nl8F61Pd/lyq+Yv8uVfzK/T8z5Llf+xvxdrsrP7xlzvsvmfJcr/2T+Lle/
m99L5nyXzfkuV/7M/F2ufje/x8z5LpvzXTbnu2zOd7nyf+bvcuVHze9Dc77L
5nyXzfkum9N/Kv9Vfk+ar8jvw8p/ld975ofk91vlv8rvMfMH8vuq8mvl95L5
hvn9U/m18nvG/JT8Pqn8WtwvKT4rvx/M++f3gPlOeVxXfoOspzl6Vv6ErKc5
elb+hKynOXpW/oSspzl6VuvirKc5elb+h6ynOXqao6c5enodNC1YX8NtvyJY
X8Ntv0Owvobb/pBgfQ23/QXB+hpu+weC9TXc9m8E62u47TcM1tfwah0arK/h
tj8lWF/DbX9bsL6G235WsL6G275/sO7uH6y7dwrW1zsF62v6oTn9zZx+ZU7/
MaefmNMfzGl3c9rXnHY0p73MaRdz9DdHZ/My3hUnUMa1eBm/4mWcipfxKF7G
nXgZX+JlHImX8eI4B8aFeOn/4qWfi5f+LF76rTh6Oh4APc3R0xw9zdHTHD3N
0dMcPc3Rs4pnyHqao6c5epqjpzl6mqOn92XQ0xw9zdHTHD3N0dMcPc3R0xw9
zdHTHD3N0dMcPc3R0xw9vY+DnuboaY6e5uhpjp7m6GmOnuboaY6e5uhpjp7m
6GmOnuboaf8Jepqjpzl6mqOnOXqao6c5epqjZ+X/yXqao6c5epqjpzl6mqOn
1/vTAj8S3PYrAj8S3PY7BH4kuO0PCfxIcNtfEPiR4LZ/IPAjwW3/RuBHgtt+
w8CPBK/8LYEfCW77UwI/Etz2twV+JLjtZwV+JLjt+wf+pf6Bf2mnwI+0U+BH
oh+a09/M6Vfm9B9z+ok5/cGcdjenfc1pR3Pay5x2MUd/c3Q2R0/HU6GnOXqa
o6c5epqjpzl6mqOnOXpW8WBZT3P0NEdPc/Q0R09z9HQ8FXqao6c5epqjpzl6
mqOnOXqao2cVD5b1NEdPc/Q0R09z9DRHT/udiOszJ67PnLg+c+L6zInrMyeu
z5y4PnPi+syJ6zMnrs+cuD5z4vrMieuzfwndzNHNHN3M0c0c3czRzRzdzNHN
HN3M0c0c3czRzbzE7csfUs47OC6I8w7i5byD44I47yBezjs4LojzDuLlvIPj
gjjvIF7OOzheiPMO4uW8g+OCOO8gvnEQvxeda9ggiHvcK4h7PCmIe7w5iHuc
EcQ9opv5jkHc42FB3OOFQdzjw0Hc4/wg7hHdvK5BN3N0M0c3c3QzRzdzdDNH
N3N0M0c3c3QzRzdzdDNHN69f0M0c3ap4jKybObpV8RhZN3N0M0c3c3Sr4jSy
buboVsVpZN3M0c0c3TzfRjdzdDNHN3N0M0c3c3QzRzdzdDNHN3N0M0c3c3Qz
R7dqvpH3qc33zPvO1XwjnzM1n5T3l6v5Rt5HNm/K+8XVfCPvC5sfmvd/zR8K
zpnOz/u55hvlfVvzL+f92Wr/bs0lT7X31PuAEeec+EflD3RPPaCjuZ6fRPz1
jXa8prmtnrdEfMOTr/h7Z3s9n4n43i+sGNzWUc9zIn7Kp4/4QU9nvS8Z8Vt+
9tzk9p56vhTxWfnc8UflfUdc+8WO5noeFfGdOvqd29xWz68iPnr+0c93ttfz
rohfvPeM9do66n4Fr+ZjeTyaMx6rfdV8jsCc8+DmTb9J5wvMGb/Vvmo+d1DN
6/K4Nj80n0eofjeP92pfNZ9TqOaB+T1g/tB6O/+hvafmvB/MN8rnGsw5n17t
k+bzDtW8Mb9PzMfncxDV7+b3TLVPms9HmPP+MZ+Tz01U52KC/YveYP9iVLBP
MTHYp3gw2Kd4M9inGBTsU/wy2HeYHew7DAj85MRTVfPGPC7MT879v5o35n5u
TrxTNW/M/dac+KVq3pj7YTU/JA+tOHFH1fww9x9z4og8LxqZv0fmowJ+Xv4e
mU8I+P35e2T+YMD/mb9H5vMCPjB/j8wHBXyv/D0y3yfgJ+fvkfm4gN+cv0fm
twZ8Zv4emc8OeJ/8PTLvF/Bh+XtkvnPAD8vfI/PvBvyi/D0yvyRzzyfXz+PR
/Et5PJpPz98pc75T5nynzG/K49d8aP5OVb+bx7U53ynz3lfSeDefmL9T1e/m
94A53ynzUfn9YM53ypzvlHlb/k6Zv5nfJ+Z8p8wH5feM+S/zd6r63fz+MZ8T
nCfd/vnRk5rb6nUE59ei831VXOI2U1/vbK/9opx3i84D2n7CmUOHtnXU6xfO
x0XnB6u4x5cuP7mns55vN0393pT2nnodNG/4igfbe+p1EOfsovOJVfwkeV/F
OZcXnWe0/T5vPrtvR3O9nuIcX3T+sYrP3GuXi5rbav8w5/6i85K2v/WGa2Z3
ttfrOM4JRucrq/jPxX03aeuo/c+jp117Z3tPPf/f6LUXxvR01vb9Djj68J7O
ev6/b8tn7mjvqdeV0flEznva/rs5b161bs3xwB/1fOiQPL6q+MY8XqrzpLn/
V/GKuT9X50lzvzUn/1V1njT3qyqeMPeT6jxpbvcqPjC3Y3WeNLeL+eisp+P9
Xg/ySq0f5JUaGPA9g3xTewf8xCAP1ckBnxTkp7ol4NODvFV983y6Om8Y5K06
NMhbNTrgE4N8VhcF/KEgz9WUgL8Z5L/aKMh/xffFnPP15qPyuDDn3L0534vq
d/N8w/zBPI6q383zDXO+C9Xv5vmG+SDuyfLv5vmGOe9583F5PFbl53mIOe/n
qvw8DzGfncdv9bt5HmLO+7b63TwPqcrP8w1z3quOq2QdZD4y4CfkeYj5iQFn
3WR+XsBvyvOTKm9YwFlnmd8f8BfyvMV8esBZl1V50gLe+1Sa51R5zKb+35x1
nPnAgG+f5z/mQwPOuq/K2xbwUXleVOVVCzjrRPOTAz4hz5fMJwacdWXVHwL+
YJ5HVXneAs461HxmwOfl+ZX5mwFn3Vr1h4APyvOuKu9cwFnnmg8L+D55nmbe
FnDWxVV/CPi4PK8zPzXgrKPNLwr4rcz3xDmP7Dhn1uPmzA/NOadszjrdnHW9
/XWvB/vjy4O49JH5+2vO+Whz/ADm5d4r/e7AYF9++yAenvmwOeeyzfEzmOOX
8O/uHcQDjAzi8O/P8wdz/BVVe2X/hss/OciXyHzenHPl5vg9zPGT+HdvCeIZ
7g/OEbCOMOc8uzl+lapdsh/GvzsvOKfAOsWc8/Lm+G1cPvPtqh8G5yBOzvMu
c87jm+MXcvnDgniPfYJzFqyzzDnvb45/yRx/lH93dBBncnJwvmNmnh+afzev
083xX5nj7/LvXhTk52T9aI6/yxz/mMufEuT5JB+COf6xSufsT3P5/YLzLKxz
zcmrUPWT4LwG6yZzzqFXecbye7uK88nv7Sr/WH6vmnM+3Zx1U5WvLL+vzDmH
XuUx4x4Z7/vk90mV3yy/B8w5h17lPcvjt9onyuO3yoeWx50559CrPGl5XFT7
SnlcmLNuqvabcj80Z31kzjl0+/9PCPK63BTkdXkhyOvCesF8+yDfy6gg38uE
IN/Lg0G+l3lBvhfmn9X+UZ4fVvtEQX6YW4P8MMy7zJn/mDMPqfLJ5HFhzne8
yieT+78537sqn0zuz+Z8L6p8Mrl/mvNeNed95XMQrwf5itcP8hUPDPieQR7j
vQN+YpDf+OSATwryHt8S8OlBPmTmCVW+kSAf8qFBPuTRAZ8Y5Em+KOAPBfmT
pwT8zSCvMn45n8vg+2KOX86c74s5fjlzvi/V7+b5uTnfl+p387zanO9O9bt5
PmzOd6f63TxfNee7Y873pSo/zwPN+b5U5ef5mznfl+p38/zKnO9L9bt5vlSV
n+c55nx3fN4Ev5z5yIDzPTI/MeD45czPCzjftSrvdMDxy5nfH3C+j+bTA45f
rsqzHXC+s1Ue7Kn/N8cvZz4w4HyvzYcGHL9clfc74Hz3q7zcAccvZ35ywJk/
mE8MOH65qj8EnHlIlSc84PjlzGcGnPmM+ZsBxy9X9YeAMy+q8pYHHL+c+bCA
M78ybws4frmqPwSceZr5qQHHL2d+UcCZ75njl/P5L/xy5tvl76M5fjlz/HLm
+OXMmWea42er8rpnP5v5efk7W93PmNdx5vjHzPGPVc+bv8tV3vj8Xa50yP6u
Kk9+/l6b49cyx69ljl/LHH9Ula8+f98rHbI/qsrPn7/75vidzPE7Vc+V5wnm
+JGqPPl5/lDl/8/zB3P8Qub4har653mFOf4c81PzfMMcf07VP/M8xBy/jTl+
G3P8M+Z/yvOW6nmzf6bqn3k+Y44fxv4Z4prMiVOq8r3k+UDlD8/f8SrfS/7+
Vn7j/N2s8r3k713lX83fqSrfS/6+VP7J/F2o8r3k93nlx8vv4SrfS35/2n+F
buboVuV1ybqZo1uV1yXrZo5uVV6XrJs5ulV5XbJu5uhW5XXJupmjW5XXJetm
fw66maNblb8l62aOblX+lqybObpV+VuybuboVuVvybqZo1uVvyXrZo5uVf6W
4HuNbuboVp2Lz7qZo1t1Lj7rZo5u1bn4rJs5ulXn4rNu5uhWnYvPupmjW3Uu
PutW5Zk8cfHIjub6HBn3F3zU+x0evvGzI3s66/g3eJUnMP9ulWc+53d1fAj3
TVT504J7zTjnVe0b5vVjlS8rr/uqfbe8XqvyZeV1VrU/lddHVb6svK6p9nfy
eqTKl5XXEdU+SJ7/V/my8ry92nfI823zi4P96ym0l/hDmVf7X7ldzMflPKhV
3q3cLtU+Y86Pav5CcF6GdqzydOV2rPa7cztWebpyO1b7v7kdqzxduR2r/dPc
jlWertyO1f5jbscqT1dux2qfLrejOe1ovnOwf4T+1f01eTyakyfZHP2rvF5Z
f3P0r/J6Zf3N0b/K65X1N0f/Kq9X1r+6vybrX+X1yvqbo785+lffr9z/ve/w
pSAPP+PLnPFo//zy3F721/GerPL8BPeU0R/Mad8qr0tuX3Pat8rrktvXnPat
8rrk9jWnfau8Lrl9zWnfKq9Lbl9z2tf84sCfQLuY045VnpncLtXz5n7i7y/9
5//v97c6f5rtzXk/m/M+r/Jy5PKre2qCe4H53er+3FxOFceb+7O/O4yXKj4w
c393GBfm3PtQzduDe76iexB4LnP0rO5ryHpWeQCyDtW+STCu+d0qb3nQD9Gt
8t9m7n6IbuboZj2pj/XcMyg/6rfkRa/uyQr6VTTfQ4cqL0rm1T578L7ld91e
8MqPlMup8qJzv5X6bXSvLtztFf0u3M+Fzq4P+1m2517FKq4j20fnpKLzONG5
m+rcR/Yv+T3A+d/q3pwcv1Td+5PLqc5pTv2/4xY2DuIH8GO73fGDedxRz2o8
5npW9yDkcqq8W/m+g+pcf26XKt94vgfQfGIux/1/aJD/ti3IQzsuyJvKvQzW
h3pW5xlzPavzmLkc68B9dpU++R6HKv//b6ff3t5Tn8cflrnfG3OD80Qzg/M4
TVmX6j644DzOW8H5l02C8y/c52i+c65/5W/MOptz35DbcUKQH2BmcL827VXF
kQb96tYgzzP3DVW/G+R/pr1s/1aQt2qTIG8V96GYcw+IOTpX9yhl7niJuUHc
y8wgboT+U91bFMSNvBXEaWwSxGnQf8x5rmq/IPcfc/pP5c/P5Vf7L7k/mNPu
1X5Erk917jW4t4J2rPLMBPYTg3snbwnyPN8S5Cvmd80j+4nBvVq3BPn5Twy+
ayWfic8rkQdGfEZw7oNyonj7KB64uico+K5hX8VvZPvqXu9gH5xyojxLbseb
gu9gZD8v+D5SH7+faffq/pHs763OmeZ4oeq8Z3CPBv2kuo8j+2nN2Z/6qPcw
Us+Pei/hKUE8JHpWeRuC73tkPy/47qO/3288V5V/Oz9XFU+Y9a/i+oI80uhQ
5aPOOpij/0e9b4t6ftT7p04JzpVH95ujc5WXILh/PHo/RPuMPFf13Q++49H5
nRmBn/PBIH9O9H6I9ln2Cr5TE4P54cAg3wLt6/cP9lU+tODeZ8r5qOfro3HN
PKE6Z8p7TzyynxfM37Cv8jIF8fbUs8rzk+2rewGC9wnlfNQ452jcUf8q3i/r
Yx7ZzwvmM9i7n5wY5EuM7KPvGvU0p/xqfZ3LN6f+VX7jIJ9elCctzC9Hvwry
rX1Uv8GJQf6uqB9SfnVOIZdf3Vebyzen/OocQdatypsa5HeK8vaE+Y7y70b5
f6p84ME6N7rXPsonE733GI9VXujgvnjKr/wJwbw6mrfQXuZ8v6o8G1nPj7ru
ph3No3ndg4G/iPpU93EH+RmidTq/ax7N/w8L8hucH+QZKO3lc/d8X8RvCe6x
Ku3o+7CC886HBefUbgr8D9SnOkcZnA+NvlO3BPkGTwnijqin7Q8LzklF3yn6
f5VnOLjHObKP1oPRPBM9zekP1fmXPF4+qp8Bnc2jeXi0HqQ+1T25wbmJyC/B
75rfEtwnclhw7uD8IP6f9qri4XM9zW8J7t2gHav7O4I45Cie8KbA3xLNQ24J
7q2IxuMpQVzZXoE/MBpfkX/s/8ufVu1jBuM0WhegTxXvl/9dnQfPulXnTAM9
+d3/B+JPjmQ=
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxFnQW0FdUXxufduXduzty5dqGCAgp2JwKKYosoioIKKhioYGN3K6ioiGI3
KnZhIRYWJhhY2IWFXf/v977D+q/13po9+545c6ZOfHvvb3ccesiOBxeiKNqz
GUWxtndWouirahQdJ+UxpShKpRzXFkVHSW5Ivljy4ZLrki+SvI3KnqT9pvZ3
k3yz5KUk7y55hXoUdZC8q+rcWvuXqPwZ+r0l3XjJm0v3by2KqtrfQnJB5WuS
u5ej6Kkkiu5WmWtVfgnpbpB8leTFJV8veYjqHKhjbpR8tvQLSH+55DskLy35
FsldVc8TqudayduqbKr6c/22lvQra/uI9GtKXknyw5LXkNxd8kOS71I9y0i+
VfJwnWuIjr9d8lBt11I9y+m3vSWvJ3l5ySvr2C7a3qsy9+rYZSXfJnkj6V9X
G6ZKXklyZ+nvkXyFyiwm+TrJ+6r+vVTXJMkHSB4u+X7J+2t7uervpnIHS3+w
9qdIP1LbidKvJv1I6Q/R/qPS99Z5ntZ2jp7jKjpXV/1+n/b30++raX9F7Y+S
vI2OXV3yzjq2j/bPU5mdte0g/aLSD5J+R+1fIf2v2j9F78KPqvNPyadK/lny
vSrzo8qcrP2C5If1/4f0/6rMadL9IjmS7ln9/45e539I8m+SP1eZE1TmK8m/
Sn+39N9IvkfbufrtJP22XVH3XtvF1IbfeY767VuVmZhF0bktnVvlplKf2nCB
yvXL9Zz1v7nuQQeVP1/bITr2EZWJ9Y6dqTJTJNclnyW5KPk5/f+pOqdr25T+
Euk30nmv13YBHTtD+iWkv0L7z0suSx4neY7Ofby2X+jYt1V+luQdVf4Dye9I
3knyQ2rnGLWzo3R76Nj+aueV0u+k7eK6z4uojvP0Diyo7QT0avv1+h+gds9W
+b467mbaoWsZKF1HlZklfTe14Trpv1PZC1V/F+1vorI3SLegyuQq857+F5Zc
1/ZNrlny+9qurbK3qFxvlb9R24Wk7yf5NsmLS+6vMpupfefynqttJbXtbMmv
qMxbKrON5Bclvyl5a95nla+p/JaSV5RclLyp5IK2x+tcL6jcX9IfJPlpybH0
d+n4FyWvTLu0v5XKV7U9S2Vek/4B/f6ytptJ/5bu4eW6xqHSLavyv+p/TenH
aP9JlVlL8kWSp0peW3JF9Zymel7V/p8qu7/kaZIfVplXtO2jMo9KniF5c8mX
SH5K8jqSl1P5v/W/vuTltf1H/xtI/iH2+zVXz/pbyecX/B5O433X+cZq/ynJ
v0geIzkp+/36S2W+5BlL/ppvQfozCn7/47LfR76XRXXsl/pfjvZLv5me9b/S
PybdRzr+HJW7Qe18TtsNVWZxlTlaZbaTfJv006XfWPLNkp/n/ZX8o96NS3Xf
1tX1P8q3pbadrd/m6djHOZ/q/0FlLlGZNVVmXz3rhHPRD0h/q/6H6Ry/qOzZ
qvdxHbuU6rhDZedI3kD6JbU/iPuj3z+UbjfJ6/G9SL+75Pekf1v6/pK7Sfe8
jv1e+5uqzIraHyH9dyrzgXQDJX8t+X3Ju0peS2UWVJmdJR+ncWmy2llXGzeW
vqP0+/K86PNU51c6ppf0K2j/QOk7aHu39J9If56u427936FrWUj6T3WO96Rf
WPK1KjNb8g6q9z9tT2WMkPyv5FPo/3XMhdqepP8PGxr79C4+wzcee2z8TPew
h+7nayr3lPRLqg3f831KnqdzXqE276hzdNe5XtL2B+6/fh8q+THeIcnbSX5A
8ueSt5B8l+TVVX6W5F8lbyX9Oto/VnWur+0X0v/DPS1F7YP1adL3kH6g9gva
317lN9b+6dLvKV1RurMYH3UP71Z71uCb1vZe/X9Cv6GyP2kbq9xOujeTVPcS
Kr+Q6pnDM5bcxvlrfs+6qJ7X1HcN1umX1z15J9VzlNxZ8ruSD5K8ksq8rjJ7
SO4i/XvSHyx5HenflH4vyWtIfkPynpJXUJn3VWak5BUlfyB5FOOX5E8kHym5
m+QPJR8quZeOnaljh0reWvLbkveR3E/yO5L3pQ0q/7HKHy65q+TZkg+RvLLk
OZKPkDxA5d9V+WGS/9Pzek/ycMmrqsynKnOU5G/C+8l53wnvM9e7hsp8oTLH
SZ4d+nyufS3pv5L+BMkfSv9uwdc+M4wRB0peVuedoXMNkrymyn+p8sdL3lz6
WdLvLXl16T+X/ljJa0v+WvKJ3EPJ30o+mb4lfC/cq3Wl/076UySvJ3mu5FMl
zw3f5mGS54R3n/vwo+SPCr4/66v89yp/muTlJL+dup3dJX+U+tj71K43M7+f
S0r/gPSL0IckHqu1iZaW/hHpl2BMTzxn0CsU/Z14PqBXKOqgMg+rzOKSl5L8
kOTFuP8qc7rK6DTRMtJPkX5JyU+wzdwHvix5HcnjJS+i9l+mbUeV6ajyj+m3
DtxbyY9KXkpyIfS3UkV/JJ636FWOPgl96gI8o9j9oj6H6EnqYG7BuB57uyDv
QOjDF5L8fej/F5b8lMp3zLz/W+y+f1Hpn5V+RekvZAyIPT5wjdOkXy7zWLKB
GvWD9k+Xfqq2y2Q+x/26ATMl3y35v9h1cK9iXe9FBd/b6Sq/auZ5SFn6iwu+
V89Lv3Lm/Rckr555PvOi5I8YDyQ/J7l75roWLFq3rI59Sfq1Mt/TE2N/6/sx
Bqk9n0n/MO9N7O0A3k/1C8sy95c8rOj2Mn59owe+gx70/drfu+j3pRPzWMn3
SF5ecifmbBWP14uz1tB/Z8mLaPuJ/peS/Km2vVTPnfSzzFElT+b+6pkeqGfZ
S2V+Zs7M+Cb9+WGMYm5wTtH96xqSx0p+IswTflf5S8Nc4WvmzJLvk3xE0X3w
Cirzh/QH1jwneLbo+Qhzm2lFzyn6Sr666LkM84Qri55frCe5i479t+IxegVt
/6t4LOalO6rmsfk6lX+m4HnFcbqOftr21P/dRc+Vekv+SccNUvkp2r8vzJWY
U3WXvlT1HKas7Rk1z2MSyY+F+c10bV8veE61usqnVc/ZVpXcqHrO9qDKvBTm
V5l0F9U8t2tKvlTyTMlHq8yD2q6oMsdKfqjgca2D6vlB/91ZU8R+ptvrEh/U
e/Ku3pN7tX9A7PvaT/qHpJ+def/A2O/FjtI/IP3bmY8/PPazY0wZHvtd2k7y
cZKfLbg/3z923TtInqJjP87cvkclf5K5fQfH3u6sMiNZ20neRfKo2PdyV8mP
q/wXmX97RPJHmZ/9E5J/yV3u0Njv1EC+fT2jEwtep6Tqn6fXXX9V8vOSd5J8
dOz3ZYjkf5gj1H3t30meKnlbxinVs5nKdZZ8i761SOc6TMccFft9ZExchvWU
/ldiLqcyTXVKh+q3Y2O/M4xxf6jOp+u+Dz9Kfqrue9VSe16o+9tcWPKLdV/7
8bHnjYxxJ8R+BxnjSirznMr0l3xk7Lk0Y/ERsb8Xxu5fVP+0up/v4kX3u50k
/6xv8K6K1z5zQ//P2u1VycdKnqz2X6f2f69zHKT9myT/IXmU5ON07Ar6v1Nl
3ta5ji54zfuu5GMk38EaX+U/VPn9abfKzkq8hr1R+l+lH8m9kP6txOvoK6Wf
Jf1w6d9SPUcUvPafKP170u+n/Rsk/yT5EMnH69hu5YAtSP+N9COkv17yFD0X
wJD3uCfMAfX/juTRBa/931a/fVHqddyL0h9Q8Br5fsn9C5433qEyh6aemz3I
GrtgebL0h6eemz0s/S7SnyF5kvQjU88/H5J+QMFl7pb+yNRlLtH2YbVtL/12
r/RHa/9Mziv5mNRzvIcln5B6Dv+g5ONSr92mqM6BBZd5nLV9weu7KSpzUmr5
ETCagut8TPpTUmMCT0g/uBBk6U+T/nzWg7Hv0zVtfp4856uZc+qdGawye0ne
jGddsDxc+iGp5+2DaK+uZW39tpvkwfptTcZQvWNd6AdUZqD0g6RfQ/ux5qzd
eebS7yvdXqnlo1X/UmWv8QdIt5t+W1XlblY7R6SetzN/61Tw+oK50HIFr1Mi
1dmNMUryn9J35f2X/I/kFSUPlTxE9e2RWl5S5zlH79sekneXbg/9thb9i+TP
dS2rSZ4R+/0Cz/lAbbg/N+70cuz3ayLvufQXp5Zfkv7Agt+lNyUfTtsld9a5
HtO5rpJ8qco+ofdziH6brWPHpb7Pb8TuP26S/HrsfgIcbBv93k9t68zYIf2O
Bd+HW3Xswanfz9dif4vgaeOle0717817LPkNycMkT5A8Q/K+ki+TPE3yUPp6
yf0zP9fRamdH/Z+sep5S/WfotzGSN9XvzdSYQx/JLckNnpHK/K3/nPUd809t
U/3foPu0MP2d5HWl/7jN8hY6dsHUZQaqzT+0+dhDdc5U/y3Jg6Wf12asYzcm
eqkxkN2k/7HNGM6u0v/bsDxI20Jq3GMPycXUx+4kub/akUneS3LC/Jbyqufn
Npf/VvprVOYNxk3GWd4XnXI1tfMPri3MJ5+V/nPJH0mXZt7/VM/zk8RrxiWk
m9twmS+k+zxxXzpHuqZ+e77Nc9Tn2rxO/1q/f5V4DOrOnF/6WpvnqJQFW+ik
435qGKOoM29pc3uWlf7HhvGKT7j32p/e5nn79/r/LsxpX2jzsUvr9x8arvNn
/f4T5SR/Kl0rc7knVX6PgvuBObofdd2rquQ19fs/3F/JU2P3VWMlPy3dmWmQ
Y79r4Mm843sW/M48pzJnpcaTn4r9viPzLT+r/8uYo2p7bmoM+RmV2adgeab0
Y1NjaM/Ffn8vk/yq9Oenlp+N/S5fSt8l/Xmp5dclX5Aai35B8jmp2/Z87PEE
/ZvSj0mNLU+XfHZqDHyq5Ht1/RdIXkzX/h3r1chrk5nSxfrfUb//Kf1/DPlF
vzvII/X+lsvGeXiX36RPavM4O0vbov7XUJ1/NawfpTJV/be1ed7+Vpvv8wqS
Z7f5/m+i8lW1rSK5h7b/6NyL6hqWYX0qXaL/9VUm1m8lvjXJbanPtaHkUuoy
nVkntrmeTqxhtS3rf2OVKaeWj1Jblih7/sradsmC8U/64yWYp/GM1MeuMB9/
1nxhWNXY+Fsl49bg1ftKN7Vk3Hyw5G51Y+6DJHepG8cfqmP3qBqHn1Uybv2Y
5BHgilVj+G9Iv2psbPz6YH+gP7ypZPsD/eSBKtu7bqz/AMk968b6p5eMrz+g
Mnurzj2rxu0PlDyiarvAcyVj52Dy90vuFHve8lDJdgDmBvuo7AZ14/s9dGwX
7e/P/dT2cc2rv+FZ6P6cq/f+YOl/LxqjYrz7pWhcDTytVjKmNUzy+wFDAE/+
KKzfwcSuUZklY/fhy3MPVP/X+m1p7rHkT1mf6FwzdK7HVWZKyTYK5ldVzSsf
0v88lato+6D+f5BcVJkvwjhblvxlweP1MthodO7PtL+hrmvZqsfNNSQvUDW+
N0DyVlV/FzdprJiiOg9THWvouGsL7v9XlXxNwePC2kVj2PTtc/WeXqTyK2EH
Uj1vVNy/VbR9veJ3eyrrWpXZUMfluq6ddV1LU6bodTAY/t/SPwNGzNw4sV2C
/u0+6c6tG4/4S2UerNg28YfkByq2Zdyv7QV1YwSvsQZVWyYiF70e2lbn+lPl
n9Zv81T+BW1bNa+fG9L3Tzx2NIpec9P3NtTex/TfVL3n6xof1P/jKreL7tOE
YMcaIHmZuu1Ae6rOXau2be0muV/Vfdq3+n2a+oEbVed20tXrtp/1lVys2w7X
AjMM+NQcnWNT/X+q8i+qnoUCVlKS/FLF/dIS0l1e8Lf/qnSL6Vqu1P6yRds6
6AeOCfOd7emPAs6AHaeD5AkF9yGfFI2hDpC8iNpwdc2Y1KJcR83Y2Ve67mPV
b4xWmdV03RtKd6TkjSRvIvkYySfp+R4GLsc4Iv1GrI0knyb9UanlUyQfkfrY
viqzqcqcKPke1X96avkClTkVPE3yYZKHp8aEu6n8+ip/uOQTpB+VWj5P8sng
eJLPkXxiGrBWle9RcJtvZNzROU6Q3Ef63gXXf4bKj1b5oyWvAzZdsHyg9HtL
P7zNmOFSBX8jO0i3U+b55WJ6Z0YHDH9b6XfMPPfdhHmsvp/F+M4lD5R+Fcnb
cZ7c89SeqW21i0temP5Q2wPajAd2LBg//wx7CfNT3smS66A9+6u+oan7lqr0
K4d+pr90u+i3lejHJQ/IPOfeSfKumcuBHy4TnjWYZ4fQLx2h3/dLjec3S56D
7yf5IOn3SS1fpPber29hG/3eU/9/FXyf+4IDVf0ObCF5rarv+cradla5n1Ru
U23/LvgZXZn4ORyi/5VU5hW9Yz/qt8107CraP0z6zUvGyHlGic55n/6/Urmf
mFsWbJtYR+UXr3otsDbvf9VrhE0kd636fubajq8Zt11ez+v2xGP9MiVj+Qcx
XkueW/A7NlnHfpbYLthd+nnhfVtT9byjen4veE00SrrR+o5G6/4cqPszkm9N
8kGSD6U/17HrFix3lbxewdfFXHudgssvUPKag/Fl6ZLXIrRnFcm/FPwdHaU6
90+t71jyeov7toba85ba85v2Vy/ZzsA3tVTJ9hme43Cd6+3E4x3zDuwezG2W
lnxFGL/O0ft4QOo6P05se6bPeUW69TL3L7erf/o+t83xDskvZMGmK/lW3a+p
kW2grPUfBxOW/jbpnwJ7xBZf9/r9cWz0dZe7GdtQ3Wtv7P78/pjKT5K+U91r
oXUT+w2wzvlL795Fuecjw/W/HWs0cPXENnjWbD+ozBiVeUL7WwTfA9a386Qf
m3uOcgs21brXbOsk9kUAizhGug3rlv9V+YtzzxfWT+wLwTqtIN243HONBbS9
PPecZcPE/gpgFiXscfp/UfsbSH9byWvCCtit/l/W/h1qw2p14xEtvddv639T
7W+U2F/hSNZ9av+ver7b0j/ouAm551yLMV9NjWlfTRtz2656MUcoGbtZDLtV
7nlWT+kfLRmXWUTH3p0aJ/8ivONx5HUNtjD9RYuqzD2pcfXb+R7rxndW1z3p
lht33F/y+rntcD0lryz5Scmnsr4J/dfJiccV+po+KrNKbvz1WO5Bbrt+j5Kv
7xqd6xTWUKG/21DlV8qNh56YeP5EP/U7x6rxJ+m+DFaZNbX/un4bEOZj9Kt7
Sb+W9G9Kv4Pk1XLjqYfoOm6oGUc4T2X/Lnr9e1LiOdnSkrdS+VVzY8YXJJ4v
0c8fpmOfrLmPHqUyG+e2l46S/r6aMYh9pF8nt710bOJ5GH1vQe19Vf9XqNyF
iedk9M/DVH7d3L4GFyWeL9I/Hyj9BtJ/If1QyWvn9k24WGXSMAaMk5yHPvpQ
teGJmvuRQ1R+o9z22Ev07G6uBexF539N/7dq/7LE/R36g1R+w9w22/GJ+w4w
nCOk7yn9H9KflXiOy7h2nM61mf6Pkryito+W/c1+TF8dew2zrcp3CWuPj6T/
I7Y8R3JbWPcOZ01Qs7xV4rnI25KH4WdUcz0flOwbwpoH3HXZsP75kL4x9npm
LelHlrz+fFTyuJLXtEfjH6T/3Qped+OjosOjg6W7vOaxfMvE8yfWadtIXi6s
kY5PPAdjLdRH8gJFr+t6lu2Tgsw8kTXg0mCzzM1U5+fa78X8mr5Z+i0kf0Eb
Ja+Bv4mOXxsMVvKJFes3K/q4NSV3lfxVm8usgw8L44TkwWXPN7nGEyr2Q6He
HRLPxT9g3MFmXfU9fFf34OPYa8v3JH8Wex27ReI5JPrZrE1iX/txOrZN5/tQ
8rHYPqquc1/dqwVqPnbjxL5QPPc16VPDfb4ev5uascUHsBWWjD8epWNL4OqS
V0lswwa7XDGxnR79HB13tY6/Xtd4gHTbFyzfnXjNAQ57P7h9yRjrypIHhfpX
Smwrb8deS17jP6pjO+ucU8qWG5JvUv1TWDvQv5WMyV4r3bc1y1dJ/rDmc3dL
bI8H571X8uggH6TtDtreoHo+V9lrKpZXSOxnQDtvrNh3DmwCnzpwjwcYZ9WG
h8qW8V8DS7lf8iPMQUrGcG/QseW6cZDRrAn0vztjm/S/11xmCj4MJd/nqfo2
p7a89nhEdS9bN6Y3WWVGlYwVbl623wPyg9hkw/2fqDrfr3nsXDWxbxDfCD6B
1PFgZF9BsJ2HwMQS+5TQnjMTr2/BJEfqnDfWjMP+rX7iFbXnPO1vKbnGPv26
tovof6bkrbRN9f8q47a2S9CnMUZrG+v/Bcmb57anPC+5r7Zl/b8k+YHMNmPs
Fg9mnpcwJ8Eva0bqNcz72Dbrtku9l9leha1qTmbbEvakTzPbQbF9fiX5ybrt
Q4/nthdsqHv2eWbbEnalLzPbk7Al9c5td3hS7dkstx3kadYuuW0ZT0m+iGNT
26HHSfcxRvDYc+aP6vZNuVTyHMlt+IpJ/rRun41LMtvIsWdPlP6Luv14xkv+
pG6fkHcy2+ewn43PbOfGto0fHTZs7Ne3Z7YNYxe+NbMNG9vzTdizUtuwr8f2
lNrOfWdmezNrwgmZbdjYr+/LbG9mXXx/Zrsya88L1J6K9v+UPCuz/Q/b3+OS
30qNC+DT16vhvptzbdrwGECbezbc71wn+drMPolc+yYN91PjwAcy++Vdpu2l
mX0Mz2H8zOxTeKbk07k29VOHSl5I8jFVX+NmDY9DO7eMe9/IXEpyV9aEKnOE
5M6ST2CtIrmH5DOrfnY9Gu43D5N+ce0fK/1IyZnkwyVfqO3YzH5Dp0p/MM8b
/zjJO2MzlfyMtrfR7xSMddxStz/fo5Lf0P25im9Z8uupcYlHJL+Wes2O3xD+
GdjaH5P+TWwEkqcx167bzw8/OnwLsK2+jt21btv6K5Lvkny75FPUnhG862rP
iZJ359vAt1fyXthMJU/PPKdnPv+c5El1+yi+wXXUbaN/VfLdku+Q/JLkyXX7
FZ2l+1rIvC46U3Kb5J/phyVHmdd6XRivwxp7JpiE+p2J+vnWxOvAXtLvqu2W
Bet35puXfCU4tsrfrW/xKslXVOzrRLnLJT9d87HXJl6bgQVcJv0D0m8g+erE
603WXUtK/q9oeSLje8nrrmUS+6CBXywluRDWZj+rjnt03qt13sN1rTNq1ndQ
mVI413rabl1w2+5V2V9UZhvmqyVvOXZy2evjPswfuI7E59217HUv67ejdK96
qe/4C/wm8VqUtd+K9INcq+o5I/Fad3nt/6uyM/T8LsBnNPH6kOu9S3V+XfMx
X+Jnof3xOnaC7slrNd/THelntb1C+pWCPEHybmEtDP7SVdtOAYvpEtpOPfjb
bVYwbn9b4jU5z/T6xGtO7uEtibGAnpKP1H17r2Y86H5d46/aXwibv+Rf6vaR
BVecW7cPOrjXdwH7ukH6b+r2G39Q8m+SF5Z8m+QfJGeSb5H8fd2+7LdL/rFu
f/WHJf8efHGvl/x13b7oYyRXM+MU+M7FmdfV50ouZV47ny+5jO1H8nmSk8xr
/Eck/1G3H/W1kr+SXJF8teQvJZclLxnme6vr/twp/U91+6WfIvnv1JhCR92f
VsCVbpC8Vsm42LJgjUHuxNysZKxqOcmLlnwPb5S8bjh2POvpmu/zEfhp1Fz+
dJ3rv9T4CXa0wYltaSdJ/6f03xbse/lraiz4WJ5Faoz4GMnzsH0y95D8c2p8
+ESuPTXWfTTXlRqLPlnyX5K/k3wC9zw1Xn0xfvjg1TrvYkVvV9M92TExRoyN
kHXl1vipqo2LBxvZ2rF9EA6r2na2RLBtrRPbPw1b1bqxMWC24MD4KfA7vgqs
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
9uM8v+Z4AWIWxtYcb/Gq5Fv0+x+5fclvkvxr7hhcuAB5V+EDvEf66xv27b1V
8p+5fds30u83t+wff6e2xZb9DeGGX6dsfvgdW/Y7uhMOgZZz+9IWcnDh/0ke
Lvjt5ybttLDtOdbwaeQ9pW9u76Mjc/Vjswab/DHMv5kOwecPPgxe9W3ier6J
zOGPnx74K7pvQ/3wvxKnAwcsecbwdyXX2Bs142asj69rOQZkZM25OLDHY4u/
G5t+2fXD5UmMAHye5G0jFoD+b73cPqX4kZLrDB9R8p2RJw0/WHKlka8M3z9y
ll3TcizSPjXnWMNHkTxrm+T298OXj1xeX4f7cBvfctP40Oq542uItYH7lngZ
+G/J/0bMDjng2nN0J855R5434neeDXWyXilGft+JFeKdZ3z5LJRvz/sd5u2n
1b3GoT74dInlgVN3jdyxPMTm3FNxfm7WROS+I2aB/Henla3n/pPX4Mfw7PbK
HavyTHjWX4f2wFP+TRiXe+T2R/2ZsStzfNYYsKjMMVkXFY35gGGCw5KH4t3c
WMjHNfu0gz99VrPfIxgVizniGg4pGRcCdwWHBVMC88c+Qd6Hd3LjImDU4Njk
d3m2ZnwbbOmPmv3095f8d81xByNKztkxm28YnFnP682m83T1a9mX8jZ9C7/V
7F8/TGUOlv7tpvPLHcJ3lHudh0/3NlX7deN/jj85+cbQk38L2xA4KnEMxAaA
mYOBk9fkhZqxdGwL5L94Ozd2C6aKnQX7CpzNxJDC20x/Rsw+fRo8x8T1w3UM
xoWPPT73izUdY3Wz9Ne3HK90aM0xBfgyrc29bTo28xLGmabjrW4oOo/Se6q3
l8ps37I/Z/uYn5s3gByL8CgTgwaXMtzY8A8wzpPXCe4UOIQeqtk+AmaGDQjb
EzlF8Icl3zO+tWD55GEF2wcfw58KPyr4pOFDgFN6qaZjsm6T3D13HBAxQcP4
ZnOvJ8j7ip8bYzv+4+RlxPebPK7ktWEu/arO06tqHx/m1RMSz6WZUzO3Zo5N
37J61Zg98/Cnc/8Gnom9AdydfEXkXFw92HMuTWzTmYEdqmo/OGws5M45I7L9
h7yG2A7IqwaHCL4KcIfALYLvAe//elXHUhBXAVcgeOxZmfMv3BWbOxB972Cj
ICcidgq4BeEcnB/DgQz2iF2C3I3gnHCxwFODH9PemXMrwPFHviXyeeP7DHcR
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

            "]], Polygon3DBox[CompressedData["
1:eJwtnXO8JEcXhgd37h3P3NjJbuxs7GSTjW3btu1kN7Zt27b5xdbGtr/n2Xf+
6N/U6UJX93RXnTrnPW8N2XSnVXcsFQqFm6qFQh+/n3QLhVUHC4WdGoXCUDIe
4PfzdqFwMJnLkL9YvVA4jLLfFQuFDT1H3jbU2a+/UJiI8j+1CoV9OoVCqVIo
jKT8FeRdyTHWQKEwhDrzk784+Q9Td2nk+ZAXQX4AeSnkyyh7OUeX8pMhz0h+
H/lnkj8PcoHrHYk8Pe2fhfgWZSehv4/Sr0k59yn1buJYlr5cV+ZeqL8l5d+j
/urU/4Zy51aTvy7ly+RtQv1t6rnGaOrezLEc+ddTf2rqf801jyJvNuqvRnof
rnks9zsdZV6n7AUcFdI7UH5Z8rcn/wDyJ+bcV+Tdw7El6SfIf4HrrcH1LqMP
W3Buhlqh8DjXnoy+7ED7s9tf6u9N/UWQV0LeD/k45JWRf1GmjSrlj+X+V+d6
+5N/PPnT095e/F/P0+btXOtmzu2N/DLyvch3Iv/Bdbfiemf0nudStLco7T3Y
e/5/Ix/aybM8hfbLtH8M8uzI5yJfRP1+2twPeUba2470RbS/B+3vgDwD9QuU
P4325vb/I+9prjeE8jshL0r+1vR3X8quhHwv9T/iGntRfkmqfkV6Y57PpvU8
8zUovx3tfUZ6Lcr/jLwvcoX2RlH+cPqzDGW3Jf9Lzq1C/T1p/yjan5rnsR/5
k5M/C/kfkz8ZeSvR/kGcu5NzK1B+Z84dQvnJKd/H+b2p8xLXapC/Pf27jHvY
j/vbjTKrc/1tuP4n5K1JmVXtO/WPJm8a6v+LvCLtH00bZeTlkXci/2DyJ/Md
ob0raG9/2tudc/tTbgjXHEZ7n9C/Y5p8E9Rfl3OHcu5Byn9BG4eRXpb7fZF3
6VSOz702bcxGuYOqkZfxGdG3zbjenrS9FeXvo/4n1N/X/xf5JeqexvGF7zL1
VyZvD8ofSfmp6N961N8ceS/krSn/AmVP4viI8stTvkT5oykzK309h/wVkXeh
/KGUn4L623C9U7i/TSi7CeeKfjuUn4nyZ1P+NcpOzv2tXk+fxqXseaQ/7f2/
W1P/BM6tR/31qP8a1z6fo4+2t+fcVuQfRv7SpFci/z/+jyNofxraP5P2X6Xs
ORz/0taWlJmSsnfSfpP8rTxH/UM4txR5K1J/YZ8zz+9b8tajD19T916Orbje
k5R5g/5ORH9vr+eb+4lrnci5R6j7ONfbl7pjkzcJdd8lf1ufH+Uvqued3ZX/
8yrKj0Obk3ON4b7PyPtTf1HkLejPAfRnONdamnNN6u1Dm6+Q16X+r5TfnzYb
tH0c1/uL/AvIX9nnwbkB8jblejtw/hzKf0rbqyHvTLtTUuZj5FWQd0SeBHlb
fk/jeptyvU253ky0X+2k7rxc8wjaXoO29kf+nvbvp/xo/sMDHK+5fpW847iX
lynb5txy5O3INQ6irUlp/z/yL6SNVUjvRP0jSa/lO0rZH5BXovyulD+M8kMo
cwz5K5G/a1/+46XpzxL055He/PAC8p3UGYI8B9df27mI+idTf2bKr4N8CPIp
yLMg/0h/r6f+QVzrWsqvT/4R5J9B/uyOx+RfSv4O5F9K/h88i0fow4+kf+eZ
zEVf3kUen2svxzVfID0e54aSHuDcw/yfS/A8C43c36Pk/8nz+Ju6J9H+1+Tf
zDU7lP+HYuuSPpTrn8r1ZyX/ee7nDs5NRv7s5P9GO3fQn+Np6ybkNXzWtH8z
/TqBNn8n/y7yTyL/ZvJ3of25yF+8nvn3FvJfoc76pBcgfwXkX6n7C3Xfp85T
9K9Vz7v0H/l3kf+u/xny4sgb+zxp70Pu4WzqPEf/bufcxOQPI/9Z5NuQJ3D+
Q97e+6H8R5S/0G8U+SDkO7nm6cijudfVkXflOrNxv3/wezf9P5W+3KKeQfl1
yG/U84zuoX+1et4ln9fbyF2OJZAvL0XXmJ78efuic6zF/Z9M/TcsV8zYNCP5
8/VljFqH/FPIf5P8sZBnJu+UgdzLwpR5jfNTcW5O0i3yX+X+7qdPcyDPR5ln
kG9FHhd5VuSPKD+O7zDytfTnEfJOpf12Ne3N51xK+/NSdjXk58k/k/yxqpG/
5f4v5/534/6v9HmSfwb5g37D5H/h/En+VuRfTP5m9P808t/rvYMbOn7yTM/i
/ZmT62+g/oN8JvIcpcwFs9OHZfsyBzxA/RHU/7ue8eF82vmD9Da99h3750Ze
oS9zwHnk/4a8JfkXkb8y/Zmznnf/a87NS/p06sxTSH+3oP3Taf996k1A/S8p
fwn935ayl1BmWedt7813hfKHkF6Qc2v3nu/UzjfUf442l+B9GU57o5AfdAwm
/3Leo39IP17KHPkD8i3qm+T9iHwO9UdSfnfOjcu5qxr5Txbuva810ifQnxG9
+/2F+g9T9nvSP1O/Sv7x5A/v3e/V1H+Mc8N73+O8lP+Q/i5B/gHc36XIf1P/
sVJ0gANIz0L+4r3yn1F3XvrzA+fvpsw7yPMgf4l8K/JbyHMjf4F8C/LU/P7b
u79LaOM82v8O+S7HS9p/m/92Usq/W08fZ/P7pcz/yH+O8tMi/8fxBPLlyEfy
HH+u5d6eob83NPKO+V/5n93YyDvpu+g7+ks3+sWPtHEPbcxH3U+51tJc6yDq
f0D5k3k+y/f06yN8/wajV6tPn0P5b6l7J3V3RJ5WfYv858lfEvlC8n8l/4FS
dMJrae8pyizF9eekvduQX0XeFHkR5DuR30beDnkx5DuQ30TeGnm436y6y2D0
HvWdX8m/jf6Non83kv8u9zON31Mj597ifVoGeXz1EOQdkedEXqSe+X1HdSnk
j2nvItobx/kIeR/6vYA6s/qyYxRl56f9CUnvRv6zlF+E/Pu5t59Jf0J6FPd4
O+Vfp8wWlF9U/YP+TEb5pes595W6N3U+tq/U+YXyt9D/o+nbDZwbm7rLU/4o
2nyW53+W+jbybo475F9D+Sc4N6I3/w3xe+V4kGufpH6h7sc13qHtR6l/MPL8
XHuN3v/9NXmH0vbYhfT5C+TrKfNRIXVc9/1K/pekD6LNg03X0tfHaO8mrv8i
11+z9/36Hk9Yzbft+/wD+ddyP/tzP9eQfyXyQ5RfoDdf/Mh4ujf5/yEf4/+J
vDby88jLe7+09R79XYz6UzOmreV8wjM8Sd2E9tdEPhD5ROQZHe8ofxvl+yk/
6BhIW+uTvxPpjWl/OuR1u1mLbOg9cz/Xc4yg7hWuUXr60NU+F+ds2jub9t5X
/1CHoP56lNmR9EbUX4j+rs65Z9R16O+e3N/D1L2EuldQ5kzqv0P9RejPVMht
1xP+f5SZkzJrU38X6n9P/XWpvyzyyshPqc8jH0/futQfC3kJ6s9D/pzk36VM
/tT0ZWXaO66e7/8Mrvci6Zldy1D+dORHkCdGnsDnR/2dqP8NZdeh/u709176
cq7fJvl7ID+IfDHy5cinUf8h6k9A/fGRl6H+stR/3LU99Scg78VqdJ8pOTeU
vHXo0/aU3YDnc1hvvr+DNk+jzS+5nzs5NuZ5P4T8J/lXkX8p5zaj/Cq0vzlt
vE1bq9Hm0qQ37mZttbnvh+sXyh9ej03gV+0ByBdTf32XllznVPJe6cv6cUXa
25g6/+vJA/6v5N/fW89erB7APR/H/Q3jGpf4XSGfiDw78grU34D6L7sWpPzK
yJsiv4G8KvIplL+S9n5Gblhee0E3a7ct6M+eyFvQv5so8xdlJuX6N5D+k/RG
1F+f9vbqJE95PeQ9kP9A3gB5XtIb0N7OtLcJ7U1C/Wuo/1svf7eePeZ6zh/t
mrGn39+IfAzyvLQ3H23c6/qZ8ifT38up/wNynTZXc31AnT1Ib0n7S1J+Ac7d
1yu/JvIOyF8ir418As95/Hr+6+WpMxv5E5B/BfKC5K/AeHqC4712ANeQyCcN
Rq9Sn/qeZ3s15ffh+V5dyNpqatqbuy9rrBXJ70duuVahTJu6T3I8wHUfo/wr
XO9evqGZe/PXDaSPI79EnbpzCPlT0v6Nzhe0t4Rrx2rWVhtxrshz2Ydz1/bF
fqKeqY6pbqm++STpSj1r+785tyr9GVFP3Z/oz+7cz1LIoyk3BfVf5nr30IcZ
tGdQ/nXOT0f+PMgd8vei/Fn07zPOD3U84z5WIH8X/2+e33vUPZv85Ti3M+dW
5vcryk5bzJqnjHw38l+F3N+ZzqOc29j/g/r/47+bgPpTcG42zr1Ef+6mzWlJ
z0Wdj12fcKyLfB3f3Crcz6KU3QD5R+7nf5S/r526zgfDyfuE8pMWU2Yx8qfm
ed7Ue55/+V7Rh4koq0HwO9q7kvw9aesqTg0j/xXamAN5r2J05xPpX6saHXpo
PTqfc4XyrLQ/DvUvdX1SzH04R9kX+3Qi15qYc9P4/XG/k5B+ifxqMedcKx1P
+wPVrJnGqUcHU/dS1vYxIeem6um/BW1RyFchL4Q8jOtPwvWv7snP+v+rW/us
eV77cH//o859fEt3cf2XvbZrDvLPJ3+Qtp5GLhQzRr/D/zE1/ak08kzuVJ/j
HkrkHUH5Obje5Fzv+r6s7x8j/++BPMuTyf/T7xh5wkLWjK+4/uGYifwLtFly
v8fS/l6cm9j1Gr8lvzV1PfIXp/0Zaf9W12+0PwJ5GPIdyCOK0SN+r2Utqz4x
N/mzkn97L38l+t3mngaRR6vzIZ/JMYx6b3H/Z/E+38Q9DkXemfL/aq+jP89Q
5zT68yf9u3Aweoj6h7rIUI5T+qKTbEy5n5Bnpe6RnDuW9HqcO9zxiPwvqX8+
9Tfg3BGc+953kePAvujA6o5TcBzbFx3yO8pfQPlz6c+KhXyXp9di2/H7nIG+
b4B8Jelr1akcr+j/66Tv49xxlN+onr40SrEr/lyNLVf74sbU3QL5dsoPoc3P
eFaPcb0tOXcH59ak/EjSaxbSx1u01VJnY22lyFdxvQrXe4ayd3BuG/IWpk9P
9+T5SW/OuRtdm3GuT12F9hdtpM7m/M7DcT/p4Tz/87jPMym/tfYt7R1cb5Tr
T9KHcL1NyNvK9QLlh5az7pi8mjzXH+vXo9vPXMwzv1r7Dtd8znfV8b2b8Xa+
Rvqzs7Y00q/1nte8pDdzDiumT7uQXpZzb5B+gHObkp7WMR55fvp7N/19XRuK
9mX1ZdJzu17j2h/QnwmQ50L+Gvn9UvTabzn3VTn67cc870fpz+aul2hzbPUm
0h9S/i3KP0j/z+Qd+ILyQwuZZ51jnUudU9Wl76f+OtXo1CuS90YttvYzHEPo
6/rIV5C+ivyNSG9G2Zt7//eiPI/rqX9tPXPyBfyOV4stcjTy/dzfu9qwKfuA
61PtkfXkafO8nv6NSxuv0t691PmI7+cM+jtaXVt7djNzmGO7Y3yFtmZ0rYj8
HPc3Hf1br9c/n+kitLc+9/RSTx/ZUFsd5W8gbwrabCOfqE7Wy9fOOG6vv9ob
VyL9Zi22yzM5dwX9vZgyX/TF5nYJ6fFrmes9dx/5byM/5drGYYr09K5VyXvW
8Yj+jMX9vcL176HO6o57tHEN+f85B9Qz5jq2em4h0iv5vZBXLMcWOJoyy1Ri
E1QX/1x7RSU6+aqUX58yJyCPQ/mreV638X8soB7nf6adQZsl+dtT/krybyV/
fvIP1n6hroy8MuU28f+l7A+0vz7pmbnfC8i/m/xVyN+8Et/OT9rOKvHx/EL6
Fm1ZhdS/nfbvpPxwx2nav0ffCPJEtHs6+V9S/saB2LJXQj7VsZX8FaqRB7Qv
+n2SfwDyg+Q/RP5d1LmDc8v57KvJa3O/V/J8Szzfp7y27wB5k9DGGfqD6N8I
yq/Gua1tm/LfuF6pxdc0HeW/Rj6rFtu4OsWv9O/Wgdg2vN9JaWsN8i8ops1n
9L3Rn42pdzHyOtrqSV9KemLXK35byOchT4Q8s74g+vcrcof+TIs8CfIv9h/5
Vp7XHY5n1DuqGN/bd661K/GxaeuYhuOyvtg8xqP+JYOxY2i/0G79VzW2Z23Q
H6i70Odp+mODWY30tpw7i7w/kDdDnsM1DelF+2MLmU4dvS82kbV764X965mD
tVOd5Hhdjr1qv3p0RHXD68iv8G2Ook/zaivT/krb+9aTV9Dmhrwp5a8r5prb
1eND03dmn66rR2dXV3f80FY0Jcf5fbEZTUj91fVxFPMOz8O1JqePv7t+JX8I
8sTIPyO3kKfQDkH9IvJo7dmuLXvP1nf6t57/6njKdP0e9FfWMxfpk3yF/+O+
wYwDfv/6Nf/s9Vf/5lhc7+LB2KG0PzkXXkDZ3co9/ybpDTl3Mtcal3Nj66+q
ZuzzG9U2NxXHRb3/c1z1Q+0RhdS5yPGxFluWc+ZEpOcl/6fefFBt5Bv12zzE
OYX3/zT+g08pP0T9fyA6tLrzRuXYUfQJ6QvSnvI/vz3Xl/35T1erx+ekr0kf
4lj1+FT0pajjHU36CMr/iPyT+t1AdGx163XKsVupg6p7ar8aRflbq7E3/sy5
R+nfJfTvD/Km4dxjyJcj/+P3Vogd0zWTayXtmZ/x/C8j/0/SPxViN3KN79pe
+9EZ/H9v8Pz3U0fQ3qD9hOst3B8dZDbk65AX6c8cr59Mn42+Gv1lbwxkLbxt
f/6zr+vxyeqLdcxdgfZfHsx34vexFPJCjczbztd+py9w3F3OOzUe5zf2m+qP
vezPetbIro23Q/69njW0a2fHIMfBTbQR92c8HEr6Gr/f/owhk9bjY9O3pg7t
OPoixz3ljKeT1ePD03enzqserc9aX7X69BM832t5fhXypuf5bUXdbdUnuefp
aONl7mc87u/fWsp8yvO+oB3bsP/ZK+SPT36R69T8Jlz7c/xG+79wPOS7SN2f
yrEJP871rqJ+kbLTIZ/ViA6n7qZOvKdrR+RyX9ZEZ5N/sD4U0nPpSyV9rP5J
MQAcO1J2x2ryZuEaT9L+9e30ZQbqHK/9kvwfCunTUcgjG3nXfEe/cJ7w6M8z
O5m8kxpj3E2Ffzh3P+2dTHsfqv9y7nPK3u7Rn/90NM/jYvJ/LecanyNfifyv
tkfkM/Q3arMs5Jl+SP6p5H/ku8u580mvPRi7u8/0dvr6B+X+pP3DS1mXFHi2
A31Zn5yov7Yx5tSYMne4lh1IX10PfUb6No4bkG9VJ+H/GUH5/dV/OfcteQ9y
POlal/w3SV/CsQvyPshN+jErbT7L9V6hvcvIO4OLvdoXzEmD/JnJf7KXr92o
WovtR/vRjf7f6hyUPZD8I7ju4Y1gXTw3J/25jvs9rR4b0un12Ji0JSlrex9G
Gy/0xQZ/pr60WrAY9sG59hn1+3Lm3KVJv1qL7etEysxB+9fQ/kn12JhWdS2K
PAttPo38Cc//XJ75t87t1D+yHhuW/ReT4drmI9ssZ43zMP//eZT/AXkqyj+E
fDbyN/q6kdek7Hscz6t7UX5i0vNzrV9p60P6Pxby7MhvIb+JvFHPPndUPZic
Ovkzkf8Y6ZfJP9rvqBZfrPnq0h/W8l+ps84svof6R9TT35eQx0X+rpY+/cjz
eVwdk2e97UB0radcX5Sjc51cj06rLuvzuZxrN/l/DqsEM+O30HYMr+Sb+A75
IdvozzN5qx6bprbM+SlzEtdfwDmc49H+rL0+43i7nDXYrdpmfGf7M8e+XY9N
V1vuQpX4Na/luLQ//k39BNdxXNYff4F+0ms4zuuPv/RB6u+mbog8nvNZPb7P
05DHrsT3+7r25oH4gF+oxyarLXY68ruNYHTE5rh++UTd1DVWf3wy+jW0UWib
0L/xzUBsZQ/15z/+QPsb//97pD/1/SG9ENd7ohb8kr721wazDlD/d+5cxT70
ZQ79Qbtbb+2/jfddD/br8P6s2S6rB0twRH/WdOq+j9H2VeXowNpuXxkMTkYb
7lsDsfXu6nxVDjbsf4P5bv1ez6oHi3Bgf95BsSOvDmZd5XpKvf7ZWsYK9fvn
tXvX4zv4gfdh8kbecd/tM9WZkFeoZa3nO1MYzPe2lusUxEf4PtYdjE98avU7
vr9h3dhGd0ce5f9C2RK/PMrCMmJbyK+Sv6s6PvJsyDXnW+SnaG+9wdgwZ0Qe
Qf4s5A+Qvwvy8qTXIn9J7Urq12KnurEd71GI/0V/jZi7/UvBH2ivmcCxVH9S
K+Pv95wbr+e/1L83vvoX+cXBjFdrO28W4l/SXyMk4Rjyb+Nat3NM6xqAZ7IZ
158bucP199MHpb6OPP1A1gT/9PwLJ2oTsz+973lN2t+5N185f9a09ZO/Ce3N
RZm2/y/ntkCeR7we8v7IJW0xrs3KsX+N6s1vThuHUn9rys8nHtDxmHO3kL6V
Yyr1JMpvpS7ejW/ngEK+4w/UIcr5nu9rBT9Q1w5A/hKUXRN5Qco9Xsm8Mpry
r5czvzzZCD5me8qvTvknGsH7bY28GnK7mznJss/7+uhr53jWbxW50Y3Opq72
HPI4pM/WnoL8YiHrCdcLW/tucH93q98OxgY8Qv8X97MY5eei/E6lrJddP29F
3pOl2IPFv6yKfFspa/PbOE4tZ42u7/uYRnRX9RvXH66H9BU8bHnaPofjefJf
KsT+o71t7UL8u/pvtOeru56LfLHzB+Vf6I+NR/um/id1idNL0Us/4fqvlXPP
T2uPGIzNcCbK7KNvD/mRWvxpRbEtHE9Y1vmoEfzeJpRfAblL+qnBjNnPqiPw
PE6m/GP+N+pAnYzZ/rdPqOMgn4L8OPJThdgTtd+tQ/pe+ncj/bmA/Jf6Y49a
V+xXN7aICch/rRH/0WHU2bSQtc/FtegSroF+E19J/j3kH0/+l63gtS5EPshr
0N72gxlnHF+c79U3ttP2r72G8r+LMWDsmrMYe6DrL7+FT0qxr2hvcex4T/9o
K/6hG7VBFrKe0z4hNqlcjr1Je5Jjx7uUX417uZij6bxXzNx7reu/cuZgdZtr
OI4sR0e4m7p3aVP3XkrxJZzeiC6qvekPrn8Q9zQO93Ii8v2UvU8bvWMH5d/k
WhPTv4c5NxFlpqH89/qgub/ZHR+Qt3I+If9UnyfywbQ3vnMt8l/Ih3RS92Tt
R+KB9QdR/jzk6cn/m3Mn66/QH0N628HYhC4l/1X1Lo4TfBfEfzE+XeL4os2c
8m+S90Y9ff+d/N9p70CuN1hJnYUof5Hj+UB87DuSt6A6SH/usW8w9r11ncOQ
dyZ/IdcQ5B/q/TTyf0/G7+3q9OTP2I0veEfknzi/neON6zLkf+nLP/VgsWrl
zD/qK/f4rpdjy7iklrlPm4b2F+05D5M/PufmFwtJ+xXHA84thTwU+S/tX+JF
kadE/tv1d89+oP3rIcqOR/2NyJ+2G9vEhORPhTwdcrE/72iJssVGsFb1cmyZ
t3KcUo6NcAbKT0/5EuW3p8xsyDMgl5F3KMT+qz3asWSqcuwf2lsc66YsZ32k
v+BN5BnUL6i/cDe+48M4tzvyIt34og93fG3G3r2I+n4huvNNHMeVo0Ofx/lz
Od63L+XYQ7UvO5ZMiuykvIP2Cm0+iNvT/gK0P05/3vki+TuSPz359zn/8ruc
cwbpYerU6vocZXU8zt2gr3QwdgjtD78iL057c9PezjzP13m/NhwM5kw8nbqY
vo+hlehkjjXPDsYO6pijfjJTLb6SKbWX+y67ZqzE5nUp7f2sDVDbo/7ceuba
fyuxWa3fyFjU1r5L+1cN5HtuVYJpPJP6T1H/QuRLi/l+p+Z6W5PuVvKuPjcY
HIPv7Ox8XzPqP68Fr+v4MFUt2FfbvLoe3ajZHx/zJX7vnfgC1I+vr0e3aPXH
h/2U8wnyRP3BcL9cT5/tqz7AOxybkcfuD8b2Ctr7l/aeIH1bMTgmMWaujcQz
iaMVwyB2QTytuH0xIGI/xJw7DompEEvhmKIvYm7/20rmq7lci1Sjq//J/zWn
a6VqdP8/StHVHS/mqURnV5d4cTC4EXUKdbEXBuPXVyd7vx6MnFgxMWMna68n
fyjtbqn/gN+Fq9Hlv6b9c7i/VzvxJbj+Ead3Yi22KvF6S5BeoxrbSbUc24rj
xY6V2FgcP5b0/S/m3GPNvJ+uG10vulb2Xd2lkjXz2VzvJa53OfLlxfgKpiL/
yt71n6T+PfR3Gc6f7Jq1k+9Fv4d9vJD2zq0Fq7VGIbYCx7JDK7EZbNIbL3au
xKbj+LEU5U8o5twbnXxf+tn0r51bj27Y3x/MtrZa54YpKrHZirU8kvorloPH
m1ZbazVro29K0b2fHwxOQR38NP3Tncy16vT6xbbt2V/0j51O/kPkn036Ys6d
i/xmJ31xPSwW+iOuv1QlmOizyH9OG7P/P/mX8nxuGQyuTzzfln471HnE77mc
dZnzod+S6zOxgzdTfvlq3ofLae8vfYKkby1mbHtpMLgbx7gW8rLa2EjvxfWn
rAfjILZBjOkAeUu7JlX/J7/cjU1OW9zuLgJIL8kxn+uLUtbNYsrFkrt+rpO3
DMeC2sfIn7WemAdjHcTIXkj/vqB/dyJfS/86g9GHtcntqr2+Hp+vvl4xC4tR
dgjt/Yk8NvkLIU/RjW19LOT3eV4rIy/eH4zYuPVgisUSi4HW7mZMhbEU2t/E
X4ifWNax1fWD2Evqz+N6qBQ8tXjSxcm/Enkkz/sUx87+2LT09+v/15Z6Xin4
BPELyyBfj/yi+JzB+PjFD47XjY1T2+a+pdj5jKEwdkIbm7Ek5+qvqcYePBFl
V+zGt7qf9o/BrM+0se6DfCj3e85g/Cr6UxaoBwMv9l3Mr7gNMbFiYcVvLFQP
pl0su5iLXaqZb95EfoT65+s/p73ZeE57Ir9E+bOriZUwZmKdejAaYjOM71D/
mb0WLMWcldge1IdMa4OYhbwR1dgKfioF93xcLbZr8c/60cWwiF3Rn66+NAf5
exczBhrrpC42V88fY+zGja5Pq+nPY/XoRhP2JwZpi3p8C79V4tPX1uH627lN
m8etjeBjxKgszD3t5NxH+bkpN6v2HuQ9qsGiamM9vRv9f3gjPujDHB9If0Nb
LtcXEetD/tG1xKOIpT7WMbQcjIjY45HIq5eDB9IXMzv1767EJ7OY+lktvm3b
d/7XZ+3awP/kAt6fT7nn20hfw7kdyNue/r1UiX32IvK/If+eXntd13r0ZwfK
vMy57Sm/nfY/0jNT/n3fv8FgOJ6j/AH1rHld6+pv8n2ajDZ/K8bGIo5fm5u2
NvH8l7bjH7Cua36xw2KIjY+YjOtc0Y699vliMCIntmPfebyYNf5K3XyfYjNV
Az82voFrzlAMJvdS7v8yjne1B3PuIQqtwbEl8soD8ed6f0todyoFmyxG2fip
CfS7i4+lvempewf5V1P3OOQ9qDsux+nt+LefLAZTanzfHuTvTt6g33Y79uQn
yB/LNWo38V7qqquT/4HxGs18a7dz7qJ27NViVbRxqA+KSRCLMM9A7AMPUX5f
0lPq+yD/Eo53uJ+7KPMGdfchfyrSN9PeIcYziDFH/gX5IPGjHLsj/4y8sLbO
duyPT3KdUeLJOfYj/y//I/FG7cwV/yB/3Q3+zJiwSejfY8jHcJzP9dehP8eJ
1+HYn/J/U34t7RHes/Y0dWLjJdoZC37tPc/dmsGuDHO+Nq8Z7NiN5D8n9hl5
Iv3pyM8gb4k8ob5h5KeRN2/Gl3mV613kvZGn1PeKvKVYZMsgfyYeib6/1A7+
flz9OsgvtIMPHht5W9dr7eg6X5QSf7kz7e3GvXXUHbRtIW88EJvB/ch3u153
7eLc2U08k7GfiyMfxfv1KOWnIb1qKbadm7vBlmvjOaIV2f9SPMCzvfYWQD5w
ILFSvq+zFBMzNX4rz8t37/tiYknXbGbsM6b0XuTrONajP4sNxPbl9dWltIH9
x70Zj2gsnjaW+bVNiD8nf3L+/yHIzU78tfptp0D+uR38kTikZ2jvTo4ZaOsA
jnu60ZnVle2ztrTjOK4vxqZ2Vzc6jbqMdZ7oxl7h3LOJtuVuYkr1tY6HfH03
mDHHj4mQx3HubgdPJq5si27iQcUurUv/n+smHtTY04MGYu97j/vdbyDP/FF1
BeSjKLs28sSd4N/EXmlDeYT82cjfm/Sa5O9rfb6ntQYSY/oU8jXd9G1Pjgnp
z26d+G/149qf5ym/2kBiVMWKHctxSDGYsVGkL/P91k6uDbwT/F+1FAzT073/
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
n7H2WXV9OTXE36sTqQvJgSX/lvZ950Y5tOST+18j+XKwGT+lDq7uLWeZ/HCv
NKIryaljvIA6lLKcHis2Myc7F8tJtFIzY7hjt5xN8l06ZzhXGMNpPJQ6rrqt
nNLGP6nDqrvKgWJ8lTqvuq4c5hdT9wDXP8gLVxJbYoyJ9mO5US5oZk3pWlLM
3yKu1TheKybGftFm5lTnUjlVjIVx/NU+dG89sSDaFLQliMW+kbK7t7LWXKMS
fo4dW1lLyxFpLJUxVY+UwjUg/8Dx5K9TSszmS8jHud4pBXMstl79VN/tDPXY
R+dqhUviwHrwOtrvjW2SQ3w76nd747cchDsgj9WKbilH407I4/TGZzlwtR8/
Rv2HSok5MfbLGLBHS+GaMDbJGKX7SuECkl/oYeT7S4l5+cn5txHuITFA4lee
aYRbQg4r8Sj6E4zdkhNNe++jjXAfGRPU0f/bCDeCNtOGtqdGuCDEGBkbZoyY
2LcV6+EbE+MktknOL7kjJ0T+sRjuA/le10VeH/lM9aFW/JOmPyrlW9Y/eUY5
37R8x+Iv1ivm3KbtcPKPZPw4p5x3RX/jWeW8M5u3w6k+qpA1rt+2+CjL+o3L
Xz1eb3wQQ+i3vlE7sa9+8/LTymkn/4Vtyoc2AfIPxXB8yhdb773/cs7Kb1vt
fR9y1m6C3N+bP+UIFWtuTIf+ITHn4rdd07qWFePtWKb/VK5Bx7QPeL7lZrh8
tDm/QPpYyqxVCgf0c8ijkNcshaPyGeSRyGuUwlEnHvPOVmIb5WwQf6mNR9uO
MfNXt2MD0vYjJstYUvUzsQa/1RIL6npGrMRAPfxd2pS0JcnZpb19wVZieUbW
E0vnekIsRace/OMdrcRGGrNvbKNrUNeectfdS38P7uk/cgTfjLxnK7artSvh
q9m3N5/KaSMfy969718OFmOtXN9rb/2sHv7GlxqZj+TQk09HjIK2PTl5jD1V
R1c3lwPgHcqXmuEe0oYv/65rAHV/Y9bFl+kvM/ZRjjVtceqU6pLa5N6k7sm+
H6VwWL+OfJLvcymc12K7XQ+LRZmoHi7XE31/S4l9lmvtGOTVS+GKELutjVvb
thhu4yfEHIo1NGbCeIijkVcrhXNZ/OxNrcTaGiOtv+KMVrAdUzSCZ1WnVZeV
s0nsvDZdbbli6B+kvcN775+c4fe71m3F9iHn8fXIu7ZiK1sV+W31gU5syeo0
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
jMT/ARjTVQY=
            "]], Polygon3DBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$52307#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0.2], 
       Line3DBox[{1769, 233, 3298, 456, 234, 3312, 471, 260, 3329, 485, 3330, 
        276, 499, 3354, 292, 513, 3368, 308, 527, 3382, 324, 3396, 541, 340, 
        3410, 555, 356, 3424, 569, 372, 3441, 583, 3442, 388, 597, 3466, 404, 
        611, 3480, 420, 625, 3494, 436, 1751}], Line3DBox[CompressedData["
1:eJwV0L8rxHEYwPHH4M6PAaGwnZFiINNdJlcoVwY/NnQSA4NNXRSR5UpdXZ2F
slkYWJX96sz+Avk1cUav7/D0fj/vZ7jP9zIbe4u7LRFRNMfpiNPOiB+8b4v4
xc/2iPOeiH37F29qT/wP+/Vv7cDe2xGRwrop62ns00o4hl04rr9id+LaCc7i
AE65veGgmdPOsIhXeoY3zbDZ1MpY0A/5CG/1hlE8stf1C17jE8m73Cbx0t5w
q/AHnsWMWw6H9Eetyhs4k7zP7U7P8xethu+4gNN6zr3AP7RrTPnfljHvNu+2
wtPaTfI7+Kyv8VW39eRbtFtc0rN8m2+57WDVXjL/Ivkx+g==
        "]], 
       Line3DBox[{1924, 1776, 2226, 1006, 4490, 2164, 1007, 2240, 4491, 1009, 
        1502, 1055, 2254, 4495, 1057, 2174, 1094, 4400, 2268, 1096, 1515, 
        1133, 4407, 2282, 1135, 2184, 4430, 1172, 2296, 1174, 1528, 4127, 
        1211, 2310, 1213, 4140, 1541, 1250, 2324, 1252, 4153, 1554, 1289, 
        2338, 4527, 1291, 1567, 1328, 2352, 4529, 1330, 2203, 1367, 4416, 
        2366, 1369, 1580, 1406, 4423, 2380, 1408, 2213, 4437, 1445, 2394, 
        1447, 1593, 4166, 1480, 2408, 1840, 2942}], Line3DBox[CompressedData["
1:eJwVzs8rw3EYwPHHaZsfB4cpbpriSHFEziyLkp+p0TSKk/OiJvsP0JRdcHeg
7CJ/gKI4+QtENkVuXg7v3s/neX8/fT+9+Z2Z7ZaIWEM5EXHYFlHBVTKikYqY
74z45F3nJn/hzvzDi9o3Z32fbo3owoPWwytaN5ecB3noH7tX5xHzMHLuTfKJ
/RS/aTmeRsVc4Jq2wb/OW7yJWff2+ELb54Q3HHAZl3ZzetV8irRW43X7M17Q
rvkGGa3OBe2Wl7VHfvp/q/bCRe2Zq/7/zh+YsBvXm+YGVt1Lom6f4qzWwe04
dy/D91ofL2kD3I88RjGGov0xH6GEP36sNfU=
        "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/G3CXcW7pKfYSCLUwYuFsTAeGJhkM7osFgst1iOUqSkLAZX
8gfYRDIYTEYWf4GNwR2P7/Dq+fo8X8u7z8DGdqHUEBFFqTRGnKYjanjXFFHH
bGvEb3PEnncN/7hnPaTdVuf29b5URArfJC0dtn6urE9iBse4T8zKFHeAy3jJ
9+hf0isrXAV38Mo2mNwiQ7LLHeMh3thyeosbRvGIe+VO9Gt9Artseezkq9yZ
/oDTOGybwW7bI3euv+MCjtsWk3tsH8mN+jcWcJabsy/pP8mN2Obf7vlVvWBb
wwxXxRF8shX1ddsm5rhbnMcX25ZespXwgivLP545MtM=
        "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/H3ofy8QTkGorNgcjL4EYuLFIP8iIUisfmKwWK5xXLoipSU
xXIGi82MjDJYGfwFRhYeN7x6vt7P1/L5frMbyfxOKiI2pVgbcd4YkaqLeJAq
+auPOG6OONCjIaIaX6RG2vgUd6hnsQnfpcSnsZsr4BhmcJD/wlYZ545wGTtx
2PaNXbLCFXEPb/ieyjukV/a5Es7xJ3pOT3vjAJ66X/kzvayPYLttFG/db7YL
/VGfwD5bHjv4J+5S/8AZHLLd87P6J3eNP7iIeX7SvqT/Vt6ILf7bKk7bFmxr
eoYrYz8+81v6um0bc9xd5fv5KT3RE9suXrkL8g8SlS8I
        "]], Line3DBox[CompressedData["
1:eJwVzrkvw3EcxvGPs45EYnEkFnEMNnRgcSTiWCSkiSgSKYkNg2vuXKESJmKx
OBebXXUwGcyuv8DqiJfhnffzfZ5+fmlrZm16tSQilpFLRBzWRhzhriqirCai
FLv1ETve5XIFinKC5/SVPOn3bdyOZ1te3yl3IOs9wINI6j+8h+UhTLmb5TT6
bZ+2+f/vIidv8Jl+k6M6Ypu3kHL3qN+T91FnO+A8LvUz9ov/jBbbNV/hxpa2
3csFdNmKvKJ/4AXbC7+iz3arf5ffcOr/fPE3RvSj9l/5B4vuGtCICVvK1iw3
4dxdNxf0PZyxJbkXS3jSj/E41m0nfIws/gA8VTOc
        "]], Line3DBox[CompressedData["
1:eJwVzjsvg3EUgPFTi17QWNHB5DbXZUUjLomkSROCulUiBmJTRnMnl1EsFnGd
LTap2n0B5QP4APw6PHnO/zzvSd7+rYPifiIiKqi1RyTTESm8JCMyvNwdkeaq
dwd3om7O8qrWxYuZiAEexKc2zGVtiE+9J3kKebumd8E8jaK7Nb6yL/OvtsHr
qJmP+EarciIVccLHKLk74zvtnLPaJV/g3m5JfzA/Iqc98479E69odX7HiPbB
u1qj9c/aFzcxof3wnvbN1/7nj8M3BbsZvc2cwCZ68GrfyyUtx324dZfnN22U
t7VxHkMFs2hoc3yoLfB8a3b3D83WL5E=
        "]], Line3DBox[CompressedData["
1:eJwVz0srRGEYwPHHpdw2M19gZD2+APbI0sKayVLUWBo1C1uKBVMWStGUmnIr
SSk2yKVETSmlxBgpCx/A7138e875Pae39/QV5sZnWyKioIuOiF99dkVMa7An
YkBX2Yhz/qNXPqFePsNz5glv6pmPqp216Tidpdt0lo58/9Ud0VCNv+uSD/F+
857faY+/qcxPeU6H/EDVdAeV7PZ5RhW+oR3+xF/MKm/VIi9pl2/zurb4X6d/
5pN8ytxM99e63YfdCBtWhT1qmdf5Wrorz2uVP2jJLs9v7LM8o5X035rnC/Zn
dt9mU2U+xq/Novea3ZfZUNHzP3tCPtY=
        "]], 
       Line3DBox[{1987, 1892, 2405, 1473, 4240, 1731, 975, 2391, 1434, 4545, 
        1977, 962, 2377, 4539, 1395, 1713, 949, 2363, 4533, 1356, 1967, 936, 
        4412, 2349, 1317, 1695, 923, 4410, 2335, 1278, 1678, 4220, 910, 2321, 
        1239, 1661, 4204, 897, 2307, 1200, 4185, 1644, 884, 2293, 1161, 4511, 
        1948, 871, 2279, 4505, 1122, 1626, 858, 2265, 4499, 1083, 1938, 845, 
        4396, 2251, 1044, 1607, 832, 4394, 2237, 992, 1921, 4427, 819, 2223, 
        1765, 2947}], Line3DBox[CompressedData["
1:eJwVzj0oxHEcx/Gvcnkq5RabTpIMDNYzGqQMDJdNuehKHXIlcorcjQwUBk8j
04UMyHQ2DxtlYZRsZPYyvPv8f+/3fevaJ2ZG8zURkUW1LuKwKeIAUw0RufqI
tO8lvHu/YQzjfFdLRIq/cvPCPWMIGa1TS2gLeOQe0I9Lflj/bIyouLvjylzV
9mJAe9IK7m68V7Vrm0Jau9DmtHPvonZmk+jT9rS8NsKfcieoRbfWwa3o0/ox
d4RfPvWPltX2/Z9dfgcffCvatEEt526T38Arv8032x5ty12ZX+RK9p5PIKlN
uityBW3Z3vI/fv/le80W7Kw2byvaN1dys44/e9U20g==
        "]], Line3DBox[CompressedData["
1:eJwV0L8rhAEcx/GvyTmTBavCH3D+AP4BN5iV/Bj8iMtwi+EG5IqBgeEWRCmx
qIuQkmJQcsWJElFKkR/FYvK64d235/XpeYanqS/TNVYVEQM6rY741mptxHBN
RIebqYtod4/5h554t1rZqK3FPeRvuuVp1bIRW9Ld5a+6rHxPe/wrGfGpHf6i
PDuzpVTm19rmz5q0HfFmHfB9bfJH5WxFXq8VvqwNXub37hZPaJr3syl3nd9p
jf8lIoZYr22w8j6/UcH2bkuzHlunW+BXWrA92JZ4G09pkZc0wfL2kr2RN2ie
Xyhry9lObL/uj2b4ucZtWc9F25x/Nqu8/gGnuUB0
        "]], Line3DBox[CompressedData["
1:eJwV0DEoxHEYx+HXxFFkMrAYDJRJMRmYldxukQ1nsxoMdwNiYDiDOCViUReD
u5IiKbkSTokopUhhIIvnhk9v/+dbv+HfOjKZTFVFxKhOqiM+tVYXMZaI6Hf7
dNYYccQ/9MSH1cFTvN095G8q80EVeAOv1z5/1SXv04HtuzbiS3v8Rae8l3e5
ZX6rXf6sGV7kbSrygrb5DX9087xJOb6uTXZtu3d3eEIZntYW3+B3yvG/mogJ
PsLH3dXKu8ra3m0rPMmHlOVXWrQ92JZtPbxbS7ykjK2Tl+wtvFkL/EJTfNp+
bPt1f5TmA/y8svvO2+b9sznN6h9KM0Ht
        "]], Line3DBox[CompressedData["
1:eJwVzzEoxGEYgPHX5JzFbVKGS0mRiTIZGEzqOhaL4ZKSy5WSKwtlcBaiGNwg
zsiiyMAZFEZn0VkUs83gMvjd8PR+/+f53vr+6Vwhu9QSEXN4bI04bY84Qb4t
YjERMe78lopYM7+4T8wip/Xx/fytvXeujgzu+Bm9Qyuixr1gDDdaRvtJRlza
e+aeMMoPmRNaXVuxd+97k6+avc07WlVb1qb5a+4KnRjWKlpBy2oX3DmSGNBK
2iuf18+4Cv74HqT5Jf3Ye8r8Eb75Mt9lTmkL9vb5PXxwh1rKHNEO7G3zJQzy
NT6Bbm3e3ga/yq+bD3zD/YbzljnJF5u9+S/aL7drZwf/KlQ6aQ==
        "]], Line3DBox[CompressedData["
1:eJwVzz8oxGEYwPHHxLnpbFJEIsVImQwM1sNkUW5Qck6UHEqR8m8hYqGUY2RQ
/gxCKTGyYTCw2ixH+Ri+Pe/7/f6een+1g7me0ZKIyOC+NKKQjDhANhExUhbR
5TyLT/cPDCDDN6UimvkrO2/cK9Lo1xq0lJbHM/eETlzyaf27POLU3iO3xD2Y
rejWXrRJe7fui9qN2YgO7Vqb0C7c57RzsxJtWkEb03r5E+4YSbRo9dyKntWP
uEP8/nvUaTlt33v2+F188VWo0fq0YXtb/Cbe+R2+wmzXtu2t8TPc6v+/8glU
a0P2Frgpbd684398X3ReNqfNcS1vnmlFbsPOOv4AMmM5Hg==
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNzckuA3AcxPGfs7ZaqvalHscS4sSVu+0tCAkhRIgtthCR1r7dnbxC7Uvb
h/A5TGbmO/8lPzY5PFETEeN0WBsxmI4YolIiIpGK6M1E5ORCMmJRX6JXPcn7
bE1y0basr9CbPoWn5Gb5wrYqr9G7Xsdb+CW+Ls86W/bfB5bWW/mVbUOes23y
TyzD2/i1bQTf0rfpC6vnL96Yxm/su/oefdsaeD/eLt/a9vUD+tFL7gzYOuQ7
2xF+TL/6DJ6VO+V724l8Sln8D2uUu/iD7UyexyveK2M5vZs/2qrYgu0cq2BN
PM+fbKN4QS9SFdtxtoc/83/BuDqL
        "]], Line3DBox[CompressedData["
1:eJwN0EVSAwEUBuEXHEIM9yJU4c5BWHACCAVLOBK+gkvgBLsI7i7foqv/eT2b
mXxheWYpERHzuExGLGQjFjGViujKRHRiKxdxobXbHZjU2rgVm9q51my3YELb
cGuyG3Gm1XMDxrV1rc7O4VTLcBY97mN62k6hqCW5FnltVKuxq3GiFdwq7SqM
aBVcjmNtTiu1yzCslXACa+5H+l/ax3oe0n7tafcfPtS++BuD2qr7p/2BA+2N
3zGgvfIL9t2f+Bnd3u/XHu0H7Gl3vOJ+z33aLd9gV5t1v7Kv0avt+O/bKOIf
ssoz/Q==
        "]], Line3DBox[CompressedData["
1:eJwV0LdKhGEQheGxNl+CmNe0pkYbc1jzioWFIHbmHBrvRxDxCqysDYWKOXsP
CiI+fzGcec+83y67JXOr2ZWciNg3l7kRC0URJ2bRdOZHDBZEzNuviiNK8yJu
dWWFEVW6ctmFM5wlXOZ+h1P6alwju/GHfcL75eQN516XdkvhRtmDh3zGCq5w
f8Ct+hp85t237NUNc1btlZxH3Mapxe2yD4+4r+Eq9yf8Yz/wvk52cPp1o5x1
fK2v5j3retzqk++QA3iMs4FvOCnOS/I/uDXoMnIQf9qz7pvJ7+S8Ju/c0nhc
ZvCXfZKzJWs5b7opt0Z8rv+VQ7px37dtr+O842lOE77g/Mlh3QRnx17P+cDh
dmiadTP8EV2Ws4sbOJ84x/3ItOhmOaO6PfupSXOO5T+guD23
        "]], Line3DBox[CompressedData["
1:eJwVz9kqBFAcx/HjWsK1ZYxhUJayLzNjK5R9yW6GGcUVT+B1iPAErlxKyb6/
BkXi4+Lf97edixPN7s7s5IUQ9tx7fghbRSGcu23XVxBCpjCEGjqNx8UhvNms
0JuyVey1WcY4f6n/xVebBVmOXsSUzQ89pa/GedmLzSxm+TlM2hzpZ+gq2TQ+
24zjBj/xn+sTdmN0TDaKTzYjuM7f6r+xx2ZYVkkP4aPNF32oz+CgrNtmAKN8
Pz7Y5PQpOi3rxS6bJFbwCTzQ39t10muyLuy06cAI3453+hZc5VuxQ/9JT3pb
js2yW5tGXOGbsN2mAcv4erzR1+IyX/f/V2/bbGroUlkcr20qcYmPYas+iiV8
BV7pP+h9bxcxImuxOaXP3Im7cH+LPTqV
        "]], Line3DBox[CompressedData["
1:eJwV0DVSBQEURNGHZHhIyBJwtxVgH5cq3N0K+R+X1VAsgpQCIjIy3HfAIXjV
c2/3TDBFI4vtC2kRkXQPWRHb+RHXbse15ER05EZseb5xuwURj9xwXkQ5HpGt
OGGzi4uzI57wKF+Bx2QbTnqv0ybJldg8c+O6Sjwh23GXPoVL9S94kq/Ct95N
dx1ct80eV2bziqdsqvG0TOAe/T4u17/hMe/N6Gq4WdnJ9doc/H/XpfTv3Jyu
Fs/LLtxnc4jv9RW+9cEt6Oq4RdmNnzwn9Eey0uaTW9LV42XZg/f0/b51zFXZ
fHEruga8Kgv1vdyAzQlXbfON13SN+E6f4fq4QZtTrsbmB2fyF66JW7fv54Zs
znCtze//P9Zv6Jq5TTnAnXu+cnU2l/IP1jVBZQ==
        "]], Line3DBox[CompressedData["
1:eJwVzkdKA1AURuHrxBZFXIIrMbYNuAMdSxQRCSIiIs7tvQv2bhITKwpuw95d
hF8GP4d7zhu8uvbO1lRJRLTZXyLivipipDriDltqIxL2y2/URNxyw9oNNvOV
9qOta9fckHaFTfwa962t4iU3qF1go7bCfWnLWHAX+AE9j0vcp7aIee2c69dy
uMB9aBVFb1muT8vgvPaulfM5O+PS2ik2uMvsTZ/z7oTr1Y4xyc9yr9oMHnE9
2iHWa9PcizaFB1y3to+T7md+ArPe7XFd2i6Oc0/aGGa0HS6lbeMo96iVFv9o
W1yHtokP9g89KUIG
        "]], Line3DBox[CompressedData["
1:eJwV0EcyhGEURuHb4gCFJRhhO6psgCltNXK3tAqqpE4aLeecc5zLj8Gp89Y9
/+T/mjp62pKJiOhEdW1EqiEijYm6iPf6iDcUGyOqtBf7FePaMz9hQavUHuxH
jGkFt3v7DhXaDd9iVMtr1/YVyrULvkSr+4h+bp+hTDvhU7Roae3YPkJCS7od
2IdIafu8h9C6tR17F8PaNm8h5/5bE7Fhb2JIW+d29zX+0VZ4FYNa1r1kL+Nb
W+QlDGjF/3/Hl3ueC2j2fb+Ws7P41OY5457hPm2OZ/GhdblP2zPo1aa8+yRK
+AMp+0yE
        "]], Line3DBox[CompressedData["
1:eJwV0DdOQ2EQReGf7IBxJHasA9GAyaGggJ4FQM8myFmCgpypQaIlVlQsg5zT
5+LozJ257z3LjcOjAyNFIYQxVFeGsJIK4RyrOE6E0MD9qMd1OoScTq15GXU4
0qnhPty6Zwvo5OQlVONQJ2M/hF45i4xOmhcLMw50rtxT5h4kkdap4gXk4yHs
6yTM3ahEyj3O87jzbBp7OjG5C9HCe3RS9peYkyPY1angTpSjSmfUvdQ8izLs
6JRwB5p9O6FTZJ5BMbbdA7fjL+n3uP/wtPzLW+5J7xxEm923XVznk6fkL97U
+eC8/M4x9zeelJt8c8P9VW6VXzjq/sQT8jOvuz9yi/zAkcL/5XsXGLe7t1vT
OTWf4QQ3+Ae31DuK
        "]], Line3DBox[CompressedData["
1:eJwVz7dKRQEURNFjr6KFOeecPsCcakOlVoKtFsZ/sBMEEQQDCIKIYO8zp079
DnO2cllszsyey33vloxPDU4mRcQEhpMjhtIiNjGIX70fB6kRY+kRNykRLXIz
fvg+7Mujtmtbk9yIbz6Lu/eOPf3K1uDW48uWabuz7eqXtjq3Fgv8p70XO/qF
rcatxrztg+/Btn5um+Oq5Eq8893Yks9ss7YKuRxvfBfW5RH+1F4ml+KV78Qi
v6af2ErcYrzwGfyt/7qqH9uK3EI82zqwIh/xBW4+Zjz/xLdjWU/Y8v6/j891
H/k2LMmHtmk+R87GA9+KDb83gAT+AFQRODo=
        "]], Line3DBox[CompressedData["
1:eJwNzzcvhXEYhvFHREQ4OBGJ1awMeu/l6ByMDBIrVnwH5TMon0Dvu95X7D6B
CL/hynNf9/1/h7d0bjG9kBER81jKi9gpjNjFNooTEdO6y/yI2WTEO0/J/SiS
J22b+m9v33ifvhdJOW3bsF3wV97jdqNALtG/+Oacv/AutxOr+gSf8O0Zf5Y7
3Er9l/e5fNx2qnuSP3UVtnaew8dsJ/KjvKJvk1uRzUdtx/KM/oG3yM3Ikkds
6/ojfs+b3EZkysO2Ndshv+MNbj0y5CHbgXwr17m1WPb2Tz+IfX5jq3HL9dXu
r34Ae/K17cM/lNmq+I8+hS3dFK7wD9FmNYE=
        "]], Line3DBox[CompressedData["
1:eJwNzkdKQwEUhtGriIjGEEWcuwL7RgR7j8auQcGN2HdgYi8bMPZe92GdingG
lz/vOw9e6tLZtrmiiMi4xUTEZioi5zr8/nWdbqkq4l3brIg4SUZ0aX+u2y2z
gpZjp7ZHi8qIXrvCzrQ8O7d9WjHrtxeet/RLW++9Aa2EDdorbZtd2wY2pJWy
YXuj7bAP/6eRpbUyNmJXPX/qu/zWe6NaOcvYNfbF9tgdG9MSbNyus3ttnz3Y
CS3JJu0Ge9QO2JNt8jylp/i0fdYO2YttZjNaNZu1r9oR+/bdFjan1bCsfWPH
7Ie1snmtli3YvNbuCu4fVq477g==
        "]], Line3DBox[CompressedData["
1:eJwVzjVSRFEQQNEmxQoifAZbA7ICcgIIqZoFQACFu+sC0AUQ474ImMHdY8g5
BK/u63v7/fpVqY7m9qyISDlLuRGbBRGdWJQX0YVN2RFbORHn+RHd5mK+B5cL
Iy64bS2NvVyJlvj3vpHhdrRL7NNKtX68Mu/y11hnd4Ar0wbxhtvTbrFeG+LK
tWG84/a1Ff7efYSr0EbxwdzGH+iP7mNcQhvHVf7H/xxqT9oEl9QmcU175o60
F5ziKrUkn/bmlTvW3jBjXuer9Gl779yJ9oEN/AxXrc3iJ3eq/XrTqM1xNdo8
fmln2gb/7b7A1WqL2GK/1fkDK74+hw==
        "]], Line3DBox[CompressedData["
1:eJwVz0c2BGEYheHPXJxiYhuWYU7noNEta7mTAc4RW9iAsVXYA5Yh5+OpwT11
7/tW/VU1lq1NVHsiIic3vRGHgxEHUumLuLY7AxHloYg/u94fsSbT+hXX5krc
r72Kr0hZH8UendHif+xlfElK+gj3wDW5b3sRX5A9vGhfOrfBfenzeE06XMG+
4Ha5T72NVbk5ydtdbof70FvcLD4jOfuc2+aK+LtdSf5BsvoZd4tv8W92OflO
yejD+L1v3eRe7SJekLR+6rkN/EXPJ++RpvtT9gm3zj3rWXwcz7hO2cdcnXvS
G3gaT8mkfcTte9+d/ANU8DxP
        "]], Line3DBox[CompressedData["
1:eJwVz0kuhEEYgOGv0ebxABbOYTiEI0gsEDoiIq21uefJ1jzGmuYCNi7hADgF
Ty3eVNX7Vv35/pml3OJGJiKW8TEa8TYZ8Y4uSmMRz9zZRMTqVMTIeEQHbZxo
T+k+n8Uw10ITR9qj1uU73g5xDdRxoE3zX77f1ga5GqoJvqg/eNvSBrgKFvhf
9wvavdbU+vkfbl4r2+e1O62hZdM7vmQ9xY52q9W1Fb4vzY9jbGs32itf03vT
/DjElnatvWhVrSfNj31saldahc84F7GHsrs57VIra8EVMMfvWte1C62k/dl/
+4dZLa+tOZ+nWbgmPvEP94c4sg==
        "]], Line3DBox[CompressedData["
1:eJwVzzdOQ1EQQNFBosMWsAQKWAqhZQmIDgmWQbSJWyDnYBNMKkDknMGwA3Lu
OBSj++bep/f1y+qaahsLIqLePCQiMiURWbPh3JyM2MTCoohH018csWVv4bcx
VxoxwD1pg7jDtWrlfN4bQ9yzNoy7Wpu2hyP2F34UK93d59q1AxzjXrVxrNIO
uQ7tCCe4N22Zn3Q+5lLaCU7ZG/h3fdr5lEtrZ7jCJ8yHNqOdc53aBa7ys9yn
NoeXXJdWwd/7hwz3pWXxwb7Gd+tX7s1z39oCVvPXXI92g4vcj5bka8wt16vd
4ZL2q63zOec816fd/7/pGymTNn/rgEzX
        "]]}}},
    VertexNormals->CompressedData["
1:eJztnXdUVMf3wBdFwQqKDUvsYkNjR0WeCjZERMEWLGgCxgKW2CsWQCwoMbFQ
7LGiUbFieagEO6KAgoiigiIIDxSCDfnltzPsZubkkn3Lbnz7dfzHcz7nnrv3
3TfMm7lz752GE6YNdS0lk8niq8hkpf/6v9aWaU2mVMvkb3XPbffx5ENehv8x
rlm+3Cw/0cJf4Nq+etMl8EME41riiXO/v1au+gU+9U6t3/NvCBzj2uFb7Owt
0gWBT+s1Skg0PMq4lvjSSw6HX/2UwXXpW+3HdjOSeca1w23tBledmi9wrvs3
rAmYuq/I/56Ma5avMzi1eVJGFp+Te8DIfXG0Ypwzrlm+rZ73WONlAr+s8GJi
7ZmRPOPa4X+Yx6dPvCtwjo0uxzyyPse4lvjSzfanJ93J5AIPF5zdY/NAMZ8w
rlkeH3DBd3OhwP/p5FIxffpKhf8Z1yyPXVznkWx4Kp89v6GLc8JLxrXE56WU
8y74a99ic9641QyTC4pxzrhm+fzJea8cO6fwx90fpxZGpSnWIYxrlhtYPJ7V
qJfA/zamef+W827yjGuHN40wsds2KpNz77N2fhfPBAW/Gf4u+upHget4MKa3
o8cOxfiH5DWlh8kz+ZKMq9iDTgP7lxb4M33dNgxce4dTV55x9fx2YU5Hm4U9
Bf5YumW3CiuV84xYecbV89vdcgVn08IE7oSRU487m8L/VT8kz7h6fssL6ihz
ffSK+6HUcOvE+GeKvxex8oyr57eWehYRzgUCr7csMCVIFsCpK8+4en7rety2
Z8iEBK51bPlT+i6Z/L/ph+QZV89vQSEHC5+8FLgcj9jM1J2hivclVp5x9fzW
xdW+1tWHmfy1msKEquUV8UbR8oyr57cqoV0TI2cIfIitTdkp/FX+3/RD8oyr
57fCaTJz81sCN3z9LaM/+fP/qh+SZ1w9v3ETwz45jsniylsN07vaPlbx9yJW
nnH1/Oa6Z0baqw8Cb+nV4qJp+V1qyzOunt+gOKfY34X0sLxHzXKx/pRafqCu
c6nlAeo6l1q+n65zqeX16TqXWv6ernOp5enpOpdaPp6uc6nl3ek6l1p+na5z
qeXR6TqXWr6crnOp5cXpOheb58M4+gfl4TBePJdaPpWucKnlQekKl1r+kq5w
qeUd6QqXWr6QrnCp5fnoCpdafo6ucKnl1egKl1o+jK5wqeWx6AqXWv6JrnCp
5Y3oCncb9cP4399k8Uff5Tst7as8V2K8eF7653ltyp3O4s8ujf3okHuXZ1w1
HjPKIqPbfoH7UG1QatzvlxlXkVt/fpjncjiZ+9R4ScCKwRmKeY/x4vnPoxJt
PucL/Iget6fu3blX8ffLePF8R7vZFytGvORGP3zaNMw9lWdcNX5wOe/cJ0fg
egV2mOpy9IhiHDJePP/Ed+plvSOLDzZ2n+yy7p5iHDJePK9xcFCDmCUCf/Vo
290t9yjzWBgvnh/6bLv1txiBq3TSM3xSQBjjKvKhNXt3nmuRxQU319MbXyFO
8ffLePHcLELfzKdA4H24ziv9zbYq/Ml48Tzw2eXqzdNe8dduVS51+NozxlXk
QUa2z4edEbhuua2/fZASrhiH9aek7W3i/4yvbmI+u4pxuuI7EvibYcyjVIFf
H+jmUOhxQsGh/S8kD3FoP8j0M/1MP9MP6YfmK7G/C+k3ubq3RYWo11zlI07z
FiYnqs2huA3Tw/QwParrgeStwmN/u/ZB4AbfPWFyzGaXYj0jlkNxQqaH6WF6
VNcDyY/ML3zdWl/gb9XKbWO5RJnPKZZDcWmmh+lhelTXA8knrLt5tOJMgR+6
6/idXWeVeTtiOXQOwvQwPUyP6nog+cdZx6NuXhO4C6597005dEFtDp27MT1M
D9Ojuh5I/jvB5+mOiNec5+lL7WwMHqnNoXNepofpYXpU1wPJn2uRWudWocCb
3knNGR+9SG0O5RUwPUwP06O6Hkh+sHHl5eE7o/nOgfM+rXmRpTaH8liYHqaH
6VFdDySfnTsxuWKiwE0L8929eMAZxfdXLIfyppgepofpUV0PJJ+Zu3hHqZ0Z
/ADPZuf/bJKs+P6K5VCeHtPD9DA9quuB5O/f21Tr5GiBX9f9vkGe+3W1OZQX
yvQwPUyP6nogeePpTu4tjwqc37CCp+tjLjHOuFY5lM8vtX7+usKl1mdeV7jU
+p/rCpdan3Nd4VLrZ64rXGp9y3WFS62ftq5wqfV51hUutr4JkofWOVDdk9TW
Y1LjmqojE1v/Aq27oHx7qa0Ppca1Xb8ArfegfE6prUulxjWVHwutJ6H8Pamt
e6XGNZUPCa1XoXwtqa2rpcY1lf8GrYeh/ByprdulxsXmNYnNx4DW4dD5r9T2
C1LjYs/NxZ73Qet/6HxBavsUqXFNnddAcXWx8tB9zYyjf9C+FbpvCLqXGdID
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
DYrXQfJi42lQnEddO3eV0E7Inv8Dihx7eg==
     "]], {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{372.02300374406235`, 380.6311035375931},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-2.633338180760923, 2.797977520901076}, {-11.932400788196826`, 
   11.989131170252836`}, {1.0000000714285715`, 1.9999999285714285`}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{3.326934727619211, 0.40314608884285724`, 0.4679514389463833},
  ViewVertical->{0.12464088735744422`, 0.04154064926945581, 
   0.9913319442331217}]], "Output",
 CellChangeTimes->{{3.8136368693242774`*^9, 3.8136369243048773`*^9}, 
   3.8136369750913534`*^9, {3.8136374295810194`*^9, 3.813637458460576*^9}, 
   3.813640030383605*^9, {3.8136401147188845`*^9, 3.8136401454299583`*^9}},
 CellLabel->"Out[944]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvQd8XOd1J4oQZVAGwKAMOoneex/0Qe8dRAcIEmABK0iCvYG9iCRIip2S
KJKSKFKF6s1yKMuSXGQbju3EjuOEb2N7815iBdnsbvYl+57PnnO+7965A84A
VGT9fhCBKfee///0r93m5ZNrVm5YPjk+ujyidsvyiTXjo1sjajZtwZcc/8zB
4c/exp+PIxyc8HdwcHjsf+84ODzp7978f0evDRs2vLVy5UrL+7fF+wbxfsCa
NWtg1apVlvdvifd9xfuH8bvpq1evtrx/U7zvJ96na3tbXf858b6/eF+9tvr+
s0/2vpDfxW/dunX0GZKTXtiKv9M9F4mvG5YtW2b99etaeE5umzdvHkbxb+LX
8vFHfu0hXmEW/5wmyflrN7RSudBl6TN0Z/ocyM9q7yAIcKaPzsiPZYyNjT0g
QIsYluO0Qowq3RUtue4RKJn2u/TiCP5L356Ze9ur4qs+Ahh9nL72CP+l3wUw
F7oiyJe1ILU3F9R4Zcy5UYUUgNht1rxOl5qae6nLWiU5m+Vd6SuLx8fHewm3
I7/nSq9PSSqVzzx2uUvicl7Wl3so6SMFOjjxe270epu8lKIhomxC0mjR6EVx
TU+hcUUEvqa0gpta2xOvudNnSKWK1h/Iv+lN7T34Fk+Lr+qtbzFlQe+4SWsB
4hYeisk/kLdQLmnrNgLKBfF9D3HNae19BC2OZNuqm4r76JX7TGgUOd+9+Fbn
xa3cLQzRV+ljDi78mm6urfRKiGzAwvBdn+hW58St3MSttMp0cBWv1eHfN6VN
SUZdlEvPRSR1+jh50+I2Ov6/k9azyc5kmFEsUut1JImj5apgddWz4qoulqtq
HVlGH8VQZ6W2XOxd7Yy4mrPtqwmXd9aa5ax0Awe7lzytvaSjEi7YZqRLWKUG
AdRZa5PELivP7j2eshJbCSiKFuVtrDKM0JKTcinFtlzt3eGUFc0zmq/RHaTx
B+PHb0pTETYr3nDWJi9FOodFs/yxNq3z20V4Uvu+s2IlDzQyKEFLmwgVu3RY
RBJLA1fCg+XiJ7QXd1EEbJNIlBuI67soFCpvKcYhru5klknOKmUcFzcQps+e
o2Qk7Q2EnnTKDbRGS1+hlKLEg8cJOqa9hU4hSOFVexv5GTd7GZ1+J3PTKkm9
P3/TngxHtTI4annURvo5cjxWGsj4ovUALQV2GTgi7i5NWEuyzbt7Wl9nLlqF
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
9sHuYO/mSLNNZngkQ+rmsQ90jPXuHNUUHR1jvTUnTB58Y2sC6M9sjOPp0WVN
VUDHveMsdU+Y9nD8KoeD05KoakkQdRSprXigj1XOUrLg6CgvjI0pgm56NF7R
VTkbv//wia4CV3Nx+9O9Bjr3+gvrwwR9T2cYXWLHDeiY4VGsEw7eSZYD6Cty
ogV9RbVyZ1fU5Kv6Rby245Iwngii+Q+vi6WufDXlwRXtWBYgR4OB11q0kDZU
Rql8OyZ6sSc6NnQRG8HNRbFPRp/wcY5HFTAyyhl5vuRB/aSy9U/OYXKPojeZ
+jG2dWyJwNZPD4fJcxiE1juYGltocHGRJnswzyEznEndUVcipapQtaW70Ckt
RcvP9cVYsxSo25bx7Je5xKLeWG6E8csW8u+yq1y8wKLuyJvt9mQSgszTP76o
Vb0qo3rVNNRPgDpWqNHXbzD1U8MOoUYOWmxM3N2LvAhOuayDnF7HcTitgUdi
bqiYrEmNfSnMxxjZPUVO9dxFqKMt6jr+u4Pn5uIs46I4U3fkquQQKAvRzl5A
Y/Eii7o2c67lxGjUcGK8UavyZEaxspuj/oCpf3KUqdnfQGiCYG0ve6xP7nPR
Q+Mu2l7JAz4rgM7g4VMnMoQ7pbKWTi2nfZMd1FusqEt5cEOx6qz58v/tmS4p
b5Sv7hxRdfYCqjEUAXUze651xfHWiRmTGpMCqHnVm+6kmqpGZ9Sm80F9p6L+
gqk/5nH9/p2K+pFBh5TfgMO6n4Pr+9aG0XfORtNulOdi9+XO1eFC3ZMXdR01
+hoPSTpLYkUBUK8vi7A2oTuyXNSc6qBc4+ReETuwxcaZteLEGKpLC6byYncO
4qocdTkP23tGenDTdfFGrYoPGqUIvVIPXhl2yrj+4hL3tUb9DM9mUnRksT8N
89J9jIO1f3gwjkZr7FLHY93ycLlIDuqpFo7HRvApO0rUjGRSm7m6V2Q4qEWj
zls2X2VAy0qXC3dNmTZkEbOozVN7mB01ai+HajFhG7UmjcqTni+5qR2qry+p
voaFv44jib026cPm5Jl0W6edLnFw8cLBaDq/IYx6eFyP5gXSbqYeyLVTc5I3
anZuSudY1Ic7XbI8IQ5DDat6dj1N6pT4BdaqDWosffodF5O6IztGqPl9zFV7
CjVOrBmlRY1Co54vKer5g1fGFPXnTP1HrFwneeU6HkXnV9qk6k4N9zU2mFGL
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
SFFJxKTH1KjR6yVaPSSI1yRQp6mDvEkw8empaFpfM89PBWQx5rI4eXbvAnrn
kRj6++FQWpc5U84iHG1w0Iaa+fRQl10ti2NqNnhjr8o1vqH6egkMP2aGJkOF
FvnwyPCQoVyfKUSGKpEB5ohMC6YM6LGbkWGJJoM6Vz8fMuDxmy7DlfcOu6gh
I0bleFa1Zq6WJMVee+Gsi/79W7Poe6OhNJCuZDjGMmysnEvn2V00ZfgNW8KP
d4RJgqU+9pF8yOBnTn1SDYlHutS+cHv+qtfdUpjDpWIJrAVSBItLtXxppCUD
v4ZXrlQu9NdqNnuosFhTodO9SOoqhP+N44W3eOBX5SyZzF+2aDJ3WTyStF8p
S4i4+uK5KPrg8RhRYTBdXZ8ZLQ6nofIFdK7NQS+zw/wTdhMQP726zkZ31LJD
mxhynQqGM8M962/NClDB8v0TIv0NBarjQ69TQBlDAJUzMSralhgqqFyLbA5+
Qa9VLfyKGIO3FXKRJkOXe1q4TobjLWHXahbNuFKUGIO80R9lZaaPs9FO/Oz5
WPoJB8jfH2MZMpQM4+UcKpbdQg92ecrw2/1hdKA+TM7BDvZ2qvM5hdmmDMrm
Q70pYM3+VZJDyA50NTrtokiV8RLMH4Elcj6bQwZzKH//tfLFAb5s4VZNhBW+
RXjtsX7HYW7F4YJk8cWuZaUsbSuNt0/8/QPR9DqL8MpaJQLuToyUzRIRLokI
NnqdRXh3u4Pe3RdBz25QUYMugmwcJcdZA38xfF4PEQxrD6AWdtdh4eZAYULD
DoJFAcyHcBNNO8FSyn+3VXhfGRZq9Cu9j4QFf3sg9rXtZcGgn8hJTURrkdkc
EbnQv3ggnJ5dHeJJX34LPc5O1SsG/a9Az2Zwb3sI9Rr0yDpQXpDh9mwR+Cwy
V3olgRn+MYapAB5BIIu59pKhQKClAHxFw5dD3ZAAL+QLNPJu7/2e/to258TR
+qAynlGvZGVICtrD/JZy6fIXL86iV4+E0+WVwRb5hvIYGi2fo8gHbfQmR4u/
ZPJfjivyVQVucjOlLXtx1hhnYJSHsqI9i8wuosDhK9HIMTiMSd8iz1KVUoK8
EM/XiHt8EB9qCD28OiMAfXs1OyN10kzaj6njFy/Poe8eDqf7moJoLYizAmlL
hYu2V8XQ492h9A0mfmOznd7Z6aTf7XHQN7dxIJWK4d4lxJVGVlvGUPO6ajmo
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
U0zyqra4GCcL/L7y/wElhyBX\
\>", "ImageResolution" -> \
168.],ExpressionUUID->"6a76aad3-3c96-440f-9744-d63b58e7f113"]
}, Open  ]],

Cell["\:5728\:8be5\:7b80\:5e76\:6001\:7684\:8def\:5f84\:4f4d\:4e8e3D\:6446\
\:7ebf\:ff0c\:6a2a\:6a21\:7684\:7279\:5f81\:662f\:6cbf\:7740z\:8f74\:65cb\
\:8f6c\:7684\:6446\:7ebf\:3002", "Text",
 CellChangeTimes->{{3.8136062956996336`*^9, 3.813606308183673*^9}, {
   3.813606417742948*^9, 3.8136064471680393`*^9}, {3.81360672296576*^9, 
   3.8136067451258316`*^9}, 
   3.8136067766704617`*^9},ExpressionUUID->"f2b76767-f766-4366-8c34-\
6bafcaf947fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:674e\:8428\:5982", "Subsubsection",
 CellChangeTimes->{
  3.813606783983489*^9},ExpressionUUID->"020e7ae9-cc2d-4718-bda6-\
c632778f3594"],

Cell["\:76f8\:4f4d\:56e0\:5b50\:6cbf\:7740z\:65b9\:5411\:53d8\:5316", "Text",
 CellChangeTimes->{{3.8136068145315895`*^9, 
  3.8136068258026133`*^9}},ExpressionUUID->"92e5b774-78c7-449f-9f8b-\
43adf9f49f17"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7ea0\:7f20\:673a\:5236", "Subsubsection",
 CellChangeTimes->{{3.813606895818861*^9, 
  3.8136069007958775`*^9}},ExpressionUUID->"d7c21379-ccf0-4caa-b776-\
5e9ae7a614fe"],

Cell[TextData[{
 "\:54c8\:5bc6\:987f\:91cf",
 Cell[BoxData[
  FormBox[
   OverscriptBox[
    StyleBox["H", "TI"], "^"], TraditionalForm]],ExpressionUUID->
  "c4724ffc-298d-4387-8d2e-fd2d900a732b"],
 "\:53ef\:4ee3\:8868\:8bb8\:591a\:7ea0\:7f20\:673a\:5236\:ff0c\:53ef\:8868\
\:793a\:675f\:7f1a\:5728\:8c10\:632f\:5b50trap\:4e2d\:7684\:5355\:6fc0\:5149\
\:51b7\:5374\:7c92\:5b50"
}], "Text",
 CellChangeTimes->{{3.813606932197975*^9, 3.8136070022061915`*^9}, {
  3.813631961109577*^9, 
  3.813631993023675*^9}},ExpressionUUID->"f99a54e0-7281-4130-877a-\
8ed388f97a5a"],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   OverscriptBox[
    StyleBox["H", "TI"], "^"], "\[LongEqual]", 
   RowBox[{
    SubscriptBox[
     OverscriptBox[
      StyleBox["H", "TI"], "^"], "0"], "+", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{
       StyleBox["i", "TI"], "=", "1"}], "3",
      LimitsPositioning->False], 
     RowBox[{
      SubscriptBox["\[CapitalOmega]", 
       StyleBox["i", "TI"]], 
      SubscriptBox[
       OverscriptBox[
        StyleBox["L", "TI"], "^"], 
       StyleBox["i", "TI"]]}]}]}]}], 
  TraditionalForm]],ExpressionUUID->"0ccff078-e39a-4a87-93f8-29ea280de08b"]], \
"Text",
 CellChangeTimes->{
  3.8136069198059344`*^9},ExpressionUUID->"8c9401f3-3b85-40b6-90bf-\
1b4633178cf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:50cf\:6563 & \:6fc0\:5149", "Subsubsection",
 CellChangeTimes->{{3.81360704846611*^9, 
  3.813607053807124*^9}},ExpressionUUID->"b2ef1328-63a0-40ca-9975-\
91cae4ee1e47"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     OverscriptBox[
      StyleBox["L", "TI"], "^"], "1"], ",", 
    RowBox[{
     SubscriptBox[
      OverscriptBox[
       StyleBox["L", "TI"], "^"], "2"], " ", "and", " ", 
     SubscriptBox[
      OverscriptBox[
       StyleBox["L", "TI"], "^"], "3"]}]}], TraditionalForm]],ExpressionUUID->
  "2424a0bf-a85e-4ebf-b548-36fc7bb8838d"],
 "\:53ef\:4e0e\:50cf\:6563\:548c\:7578\:53d8\:8054\:7cfb\:ff0c\:4e5f\:7528\
\:4e8e\:7814\:7a76\:9ad8\:9636\:6fc0\:5149\:7684\:5f62\:6210\:3002"
}], "Text",
 CellChangeTimes->{
  3.813607029373062*^9, {3.8136320123707347`*^9, 
   3.8136320545938673`*^9}},ExpressionUUID->"665525e2-eaac-4db3-8cce-\
1149d3e3c75a"]
}, Open  ]],

Cell["\<\
\:662f\:5426\:91cf\:5b50\:6001\:53ef\:96c6\:4e2d\:5728\:7ecf\:5178\:52a8\:529b\
\:5b66\:7684\:5468\:671f\:8f68\:9053\:4e0a\
\>", "Subsubsection",
 CellChangeTimes->{{3.8136071394273925`*^9, 
  3.813607173695498*^9}},ExpressionUUID->"d1061fdb-079d-4e1a-a59f-\
ba89bb9dad9e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"65d3d185-e8ca-4edc-acb0-0e1ceabaf621"],

Cell[CellGroupData[{

Cell["\:4e0e\:91cf\:5b50\:6ce2\:51fd\:6570\:8054\:7cfb\:76843D\:51e0\:4f55\
\:9762", "Section",
 CellChangeTimes->{{3.8136072063835983`*^9, 
  3.8136072224566755`*^9}},ExpressionUUID->"0077829c-2091-44ce-b6a6-\
0cce8eb32a7a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", 
   FractionBox["\[Pi]", "3"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"WignerD", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"n", "+", "m"}], "2"], ",", 
     RowBox[{"k", "-", 
      FractionBox[
       RowBox[{"n", "+", "m"}], "2"]}], ",", 
     FractionBox[
      RowBox[{"n", "-", "m"}], "2"]}], "}"}], ",", "\[Theta]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8136072354316883`*^9, 3.8136072398947015`*^9}, {
  3.81360731677694*^9, 3.8136073640338936`*^9}, {3.813607424622278*^9, 
  3.813607473425418*^9}},
 CellLabel->
  "In[821]:=",ExpressionUUID->"0396040c-19dd-49fa-b47b-140ee3741eec"],

Cell[BoxData[
 FractionBox[
  RowBox[{"33", " ", 
   SqrtBox[
    FractionBox["21", "2"]]}], "256"]], "Output",
 CellChangeTimes->{{3.813607340368044*^9, 3.8136073504518614`*^9}, 
   3.8136074737924147`*^9},
 CellLabel->
  "Out[825]=",ExpressionUUID->"abd89216-2150-4794-ba30-d6e1bb05ff7b"]
}, Open  ]],

Cell["\:542b\:9b4f\:683c\:7eb3d\:77e9\:9635\:5143\:7d20\:ff0c\:5219\:672c\
\:5f81\:6001\:53ef\:8868\:793a\:4e3a", "Text",
 CellChangeTimes->{{3.8136072628437734`*^9, 
  3.8136072806488266`*^9}},ExpressionUUID->"3263ec58-54a3-465b-87fd-\
a2f9e5e8d2c1"],

Cell[BoxData[
 FormBox[
  SubscriptBox[
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox[
        RowBox[{
         RowBox[{
          RowBox[{"|", 
           StyleBox["n", "TI"]}], ",", 
          StyleBox["m", "TI"], ",", 
          StyleBox["l", "TI"]}], "\[RightAngleBracket]"}], 
        OverscriptBox[
         StyleBox["H", "TI"], "^"]], "\[LongEqual]", 
       RowBox[{
        SuperscriptBox[
         StyleBox["e", "TI"], 
         RowBox[{
          RowBox[{
           StyleBox["i", "TI"], "(", 
           RowBox[{
            StyleBox["n", "TI"], "+", 
            StyleBox["m", "TI"]}], ")"}], 
          RowBox[{"\[Alpha]", "/", "2"}]}]], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{
           StyleBox["k", "TI"], "=", "0"}], 
          RowBox[{
           StyleBox["n", "TI"], "+", 
           StyleBox["m", "TI"]}],
          LimitsPositioning->False], 
         RowBox[{
          SuperscriptBox[
           StyleBox["e", "TI"], 
           RowBox[{
            RowBox[{"-", 
             StyleBox["i", "TI"]}], 
            StyleBox["k", "TI"], "\[Alpha]"}]], 
          RowBox[{
           SubsuperscriptBox[
            StyleBox["d", "TI"], 
            RowBox[{
             RowBox[{
              StyleBox["k", "TI"], "-", 
              FractionBox[
               RowBox[{
                StyleBox["n", "TI"], "+", 
                StyleBox["m", "TI"]}], "2"]}], ",", 
             FractionBox[
              RowBox[{
               StyleBox["n", "TI"], "-", 
               StyleBox["m", "TI"]}], "2"]}], 
            FractionBox[
             RowBox[{
              StyleBox["n", "TI"], "+", 
              StyleBox["m", "TI"]}], "2"]], "(", "\[Beta]", ")"}]}]}]}]}], 
      "|", 
      StyleBox["k", "TI"]}], ",", 
     RowBox[{
      StyleBox["n", "TI"], "+", 
      StyleBox["m", "TI"], "-", 
      StyleBox["k", "TI"]}], ",", 
     StyleBox["l", "TI"]}], "\[RightAngleBracket]"}], 
   SubscriptBox[
    OverscriptBox[
     StyleBox["H", "TI"], "^"], "0"]], TraditionalForm]], "Text",
 CellChangeTimes->{
  3.81360729154986*^9},ExpressionUUID->"1c7f7167-da59-4a2b-b181-eb1e134d89e3"],

Cell[CellGroupData[{

Cell["\:7a7a\:95f4\:5206\:79bb", "Subsubsection",
 CellChangeTimes->{{3.8136075103605127`*^9, 
  3.8136075151535263`*^9}},ExpressionUUID->"d7d1491d-cb2e-4c75-a795-\
c7f4a72c4bc2"],

Cell[BoxData[
 FormBox[Cell[BoxData[
   FormBox[GridBox[{
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          SubscriptBox[
           RowBox[{"\[LeftAngleBracket]", 
            RowBox[{
             OverscriptBox[
              StyleBox["x", "TI"], "~"], ",", 
             OverscriptBox[
              StyleBox["Y", "TI"], "~"], ",", 
             OverscriptBox[
              StyleBox["z", "TI"], "~"], "|", 
             StyleBox["n", "TI"], ",", 
             StyleBox["m", "TI"], ",", 
             StyleBox["l", "TI"]}], "\[RightAngleBracket]"}], 
           OverscriptBox[
            StyleBox["H", "TI"], "^"]], "DisplayFormula"], TraditionalForm]],
        ExpressionUUID->"4c8e377e-94f8-4ca5-80e3-9cef9a16cff1"]],
        ExpressionUUID->"df637b17-f6c6-448b-8e57-ebe9606e5024"]},
      {Cell[TextData[Cell[BoxData[
        FormBox[
         StyleBox[
          RowBox[{"\[LongEqual]", 
           RowBox[{"[", 
            RowBox[{
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{
               StyleBox["i", "TI"], 
               RowBox[{"(", 
                RowBox[{
                 StyleBox["n", "TI"], "+", 
                 StyleBox["m", "TI"]}], ")"}], "\[Alpha]", "/", "2"}]], 
             UnderoverscriptBox["\[Sum]", 
              RowBox[{
               StyleBox["k", "TI"], "=", "0"}], 
              RowBox[{
               StyleBox["n", "TI"], "+", 
               StyleBox["m", "TI"]}],
              LimitsPositioning->True], 
             SuperscriptBox[
              StyleBox["e", "TI"], 
              RowBox[{"-", 
               StyleBox["i", "TI"], 
               StyleBox["k", "TI"], "\[Alpha]"}]], 
             SubsuperscriptBox[
              StyleBox["d", "TI"], 
              RowBox[{
               StyleBox["k", "TI"], "-", 
               FractionBox[
                RowBox[{
                 StyleBox["n", "TI"], "+", 
                 StyleBox["m", "TI"]}], "2"], ",", 
               FractionBox[
                RowBox[{
                 StyleBox["n", "TI"], "-", 
                 StyleBox["m", "TI"]}], "2"]}], 
              FractionBox[
               RowBox[{
                StyleBox["n", "TI"], "+", 
                StyleBox["m", "TI"]}], "2"]], 
             RowBox[{"(", "\[Beta]", ")"}], 
             SubscriptBox["\[Psi]", 
              StyleBox["k", "TI"]], 
             RowBox[{"(", 
              OverscriptBox[
               StyleBox["x", "TI"], "~"], ")"}], 
             SubscriptBox["\[Psi]", 
              RowBox[{
               StyleBox["n", "TI"], "+", 
               StyleBox["m", "TI"], "-", 
               StyleBox["k", "TI"]}]], 
             RowBox[{"(", 
              OverscriptBox[
               StyleBox["Y", "TI"], "~"], ")"}]}], "]"}], 
           SubscriptBox["\[Psi]", 
            StyleBox["l", "TI"]], 
           RowBox[{"(", 
            OverscriptBox[
             StyleBox["z", "TI"], "~"], ")"}]}], "DisplayFormula"], 
         TraditionalForm]],ExpressionUUID->
        "247544ea-5d19-492c-93e9-24521679b080"]],ExpressionUUID->
        "d7559bce-ccf5-47a8-9884-9a7cacc68d8a"]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}], 
    TraditionalForm]],ExpressionUUID->"f6ebd093-579e-4e68-9ab8-0407360484a8"],
   TraditionalForm]], "Text",
 CellChangeTimes->{
  3.8136075265955725`*^9},ExpressionUUID->"90f4f2de-eaa9-4c31-b21e-\
4fa7e037987c"],

Cell[TextData[{
 "\:5176\:4e2d\:ff0c",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Psi]", 
      StyleBox["n", "TI"]], "(", "\[Xi]", ")"}], "\[LongEqual]", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["2", 
         StyleBox["n", "TI"]], 
        RowBox[{
         RowBox[{
          StyleBox["n", "TI"], "!"}], "\[CenterDot]", 
         SqrtBox["\[Pi]"]}]}], ")"}], 
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}]], 
     SuperscriptBox[
      StyleBox["e", "TI"], 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[Xi]", "2"]}], "/", "2"}]], 
     RowBox[{
      SubscriptBox[
       StyleBox["H", "TI"], 
       StyleBox["n", "TI"]], "(", "\[Xi]", ")"}]}]}], TraditionalForm]],
  ExpressionUUID->"c7cf69e6-d445-4fcc-af85-a5d1ead7c203"]
}], "Text",
 CellChangeTimes->{{3.813607543256614*^9, 
  3.8136075536706457`*^9}},ExpressionUUID->"5cf6d8ed-d7e1-42bc-91a9-\
2f0fbb6b361c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5bfc\:51fa\:91cf\:5b50\:76f8\:5e72\:6001", "Subsection",
 CellChangeTimes->{{3.813607569407696*^9, 
  3.813607573605708*^9}},ExpressionUUID->"c68e7d3e-7b3d-49e9-a60c-\
c37c9c267bdd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a", "=", "1"}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", "4"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "*", "t"}], "-", 
      RowBox[{"b", "*", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{"a", "-", 
      RowBox[{"b", "*", 
       RowBox[{"Cos", "[", "t", "]"}]}]}], ",", "z"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"10", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "100"}], ",", "100"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813608051605892*^9, 3.8136082773179326`*^9}},
 CellLabel->
  "In[882]:=",ExpressionUUID->"7b03be9d-6287-415d-85ba-04accbe3ef84"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.813608123774126*^9, 3.8136082777869225`*^9}},
 CellLabel->
  "Out[882]=",ExpressionUUID->"6fcf5694-e0a7-466c-86c6-c8d1756be0f9"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.813608123774126*^9, 3.8136082777969246`*^9}},
 CellLabel->
  "Out[883]=",ExpressionUUID->"c038a7e0-931e-467b-b1e4-cb1b7ddd9b89"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyNnXe0V8XVQFFQEdEAYiMEQbGjYkGfiHCfGAH7U581ltiixJJmrBg1pphY
0c8WY0zsnVhQsUCMJVGiRrHEFjXGlsQeJdYvi9/Z43p73lnx/fPW2uusufPb
d+bO3Lln7h221yHb7jt/jx49Hu/fo0fP//6/+JiF7zxgzDN3Tr7ss//+LTTr
rjkD7/7ss51mvfqbP1661ib/nDn4jL8tfPG7izTwnTa+fJXj7h3aHH/KeX/7
3UafjoOvcfrp23/t48WblY9d5ge3zelVyrnm94cMbXt/cHPL1q/evfvkAaWc
x1baffKEjdZohvbe/d9bLX97KefBk67e5WtXD2+eOfPDm5tXPphZjtvWucqR
k9dsesz7G1jK+fDtTz/afOCo5jzFf2/4it97fPORzZO9upb/nQkbDPvniLZm
huozYM7IgXt/c3Szquq/7lLHnbnBQus3V+r33nHXV5/ecsWm6Wk/f930vCMn
j2vs057ffKr/5dMP6qw8w+0Zbs9we4bbM9yey3HlGW7PcHuG2zPcnuH2DLfn
Uk95htvz4BcWO+mgpzsqz3B7htsz3J7h9gy353JceYbbM9ye4fYMt2e4PcPt
udRTnuH2fMaDSz0/ceoWlWe4PcPtGW7PcHuG23M5rjzD7Rluz3B7htsz3J7h
9lzqKc9we35jXjv/auUZbs9we4bbM9ye4fZcjivPcHuG2zPcnuH2DLdnuD2X
esoz3J6nzvM/pvIMt2e4PcPtGW7PcHsux5VnuD3D7Rluz3B7htsz3J5LPeUZ
bs+nzuMjKs9we4bbM9ye4fYMt+dyXHmG2zPcnuH2DLdnuD3D7bnUU57h9tz6
Hb03sme4PcPtGW7PcHuG23M5rjzD7Rluz3B7htsz3J7h9lzqKc9we/5Fy39j
z3B7htsz3J7h9gy353JceYbbM9ye4fYMt2e4PcPtudRTnuH2fE7relJ5htsz
3J7h9gy3Z7g9l+PKM9ye4fYMt2e4PcPtGW7PpZ7yDLfnt1vjY+UZbs9we4bb
M9ye4fZcjivPcHuG2zPcnuH2DLdnuD2Xesoz3J7Pas33Ks9we4bbM9ye4fYM
t+dyXHmG2zPcnuH2DLdnuD3D7bnUU57h9jykdf9SeYbbM9ye4fYMt2e4PZfj
yjPcnuH2DLdnuD3D7Rluz6We8gzv/rrRmVw3OpPrRmdy3ehMrhudyXWjM7lu
dCbXjc7kutGZXDc6k+tGZ3Ld6EyuG53JdaMzuW50Vp5jfanyDE/W6yrP8GS9
rvIMT9brKs/wZL2u8gxP1usqz/Bkva7yXOrZ/Xpds+AvHrvxb0/1nDV2xmZP
f+vEV2Y+uePi6z293o6z9nlpSK8NF+zfPLnpruduee7iDdznJYtnPfCJXT7r
1TZqaDPpk7/veE+v+Uq8OfGr9dv4tffmLNZsttntN/bq8dY44s3LOmdz4S8H
rLlKM3Dxr6/79eP7lXqaEz++3+3TH/r+qs1rb94/9vy1P6+/OfHzDXnj/Dnv
r9Bcc23zvT1fXKCUb078Lqs899SXDlm3maN4c+LHjvxgywFrrt38Q/UxJ37o
0j966q1H1m4W0u81J37n90ec9PSpGzZryac58e/+7LEVn9t6/WZznS9z4rf4
wZb7/2PlDZvn1E7Mif/rvz/Y+h/vNM1pam/m2Toz8W63C+7eb9DUi7er2iHc
7Q3udgV3+4G7ncDdHuA+73CfX7jPI9znC+7zArd/uD3D7XOdfRb9dOKAbSqf
cPuE2yfcPuH2CbdPuH3C7RNun3D7hNsn3D7h9gm3z1nz2vPEyifcPuH2CbdP
uH3C7RNun3D7hNsn3D7h9gm3T7h9wu2ztT7fXvmE2yfcPuH2CbdPuH3C7RNu
n3D7hNsn3D7h9gm3T7h9/mvevGtU5RNun3D7hNsn3D7h9gm3T7h9wu0Tbp9w
+4TbJ9w+4fZ54rz7ssGVT7h9wu0Tbp9w+4TbJ9w+4fYJt0+4fcLtE26fcPuE
2+evW7yxT7h9wu0Tbp9w+4TbJ9w+4fYJt0+4fcLtE26fcPuE2+e7rXZb+YTb
J9w+4fYJt0+4fcLtE26fcPuE2yfcPuH2CbdPuH221gfaK59w+4TbJ9w+4fYJ
t0+4fcLtE26fcPuE2yfcPuH2CbfPu1vjfuUTbp9w+4TbJ9w+4fYJt0+4fcLt
E26fcPuE2yfcPuH2uW5rXlr5hNsn3D7h9gm3T7h9wu0Tbp9w+4TbJ9w+4fYJ
t0+4ffZu3TdVPuH2CbdPuH3C7RNun3D7hNsn3D7h9gm3T7h9wu0Tbp9Pte7r
K59wx7N+5fUo4u0/K59yfF6ycsp6nc4X8ck6VXUeiU/WqarzS3yyTlWdd+KT
daqqPRCfrFNV7YT4ZJ2qaj/EJ+tUVbsiPlmnqtob8ck6VdUOiU/Wqar1UuKT
daqsfVb5Hqxfeb0a7vVquNer4V6vhnu9uhxX69Vwr1fDvV5d1le1Xg33ejXc
69Vwr1fD7Y11KnuD2xvc3uD2Bre3clx5g9sb3N7KuqK8we0Nbm9we4PbG+tR
9ga3N7i9we0Nbm/luPIGtze4vZX1Q3mD2xvc3uD2Brc31p3sDW5vcHuD2xvc
3spx5Q1ub3B7K+uE8ga3N7i9we0N3n2+cXuSb9ye5Bu3J/nG7Um+cXuSb9ye
5Bu3J/nG7Um+cXuSb9ye5Bu3J/nG7Um+cXvljXUke4PbG9ze4PYGt7dyXHmD
2xvc3sq6n7zB7Q1ub3B7g9sb60X2Brc3uL3B7Q1ub+W48ga3N7i9lfU9eYPb
G9ze4PYGtzfWhewNbm9we4PbG9zeynHlDW5vcHsr63jyBrc3uL3B7Q1ub6z/
2Bvc3uD2Brc3uL2V48ob3N7g9lbW6+QNbm9we4PbG7z7vKP2JO+oPck7ak/y
jtqTvKP2JO+oPck7ak/yjtqTvKP2JO+oPck7ak/yjtqTvKP2yhvrOfYGtze4
vcHtDW5v5bjyBrc3uL2V9Td5g9sb3N7g9ga3N9Zt7A1ub3B7g9sb3N7KceUN
bm9weyvrbPIGtze4vcHtDW5vrM/YG9ze4PYGtze4vZXjyhvc3uD2VtbT5A1u
b3B7g9sb3N5YH7A3uL3B7Q1ub3B7K8eVN7i9we2trEfJG9ze4PYGt7dsHY/9
jF6Xg3v9De51trIfU+tpcK+bwb0+Bvc6GNzrXXCva8G9fgX3OhXc61FwrzvB
u8+L6EjyIjqSvIiOJC+iI8mL6EjyIjqSvIiOJC+iI8mL6EjyIjqSvIiOJC+i
I8mL6EjyIjoqn+xPtE+4fcLts+yvlE+4fcLtE26fcPuE2yfcPuH2CbdPuH3C
7ZN9iPYJt0+4fZZ9lPIJt0+4fcLtE26fcPuE2yfcPuH2CbdPuH2y39A+4fYJ
t8+yX1I+4fYJt0+4fcLtE26fcPuE2yfcPuH2CbdP9hXaJ9w+4fZZ9kXKJ9w+
4fYJt0+4fcLtE26fcPuE2yfcPuH2yf5B+4TbJ9w+4fYJt0+4fcLtE26fcPuE
2yfcPuH2CbdPuH2yT9A+4fYJt8+yz1E+4fYJt0+4fcLtE26fcPuE2yfcPuH2
CbdP9gPaJ9w+4fZZ9jPKJ9w+4fYJt0+4fcLtE26fcPuE2yfcPuH2yb4/+4Tb
J9w+y75F+YTbJ9w+4fYJt0+4fcLtE26fcPuE2yfcPtnfZ59w+4TbZ9mfKJ9w
+4TbJ9w+4fYJt0+4fcLtE26fcPuEd5+n15Hk6XUkeXodSZ5eR5Kn15Hk6XUk
eXodSZ5eR5Kn15Hk6XUkeXodSZ5eR5Kn15Hk6XUk/b0z6e+dSX/vTPp7Z9Lf
O5P+3pn0986kv3cm/b0z6e+dSX/vTPp7Z9LfO5P+3tnM2qPP3jd1zj9r+i/P
3O/QVT8Yt8+5A96cuO0Os975YOu5Jy/w5ebk+8565RcXLtbAB75yYp/fHjGo
Wbtz0nNTZi80C77xnmv+4a7BA5tvfeOOjw5YcOESP+i35w46/LkRzZBJN3xw
0enzF77IDYuc/uoqKzUzpm594mbrLljK6X34+PcuXnjVZu7dc29e46T+JX6z
944+55LdRjUPvXDkKytd9UKp5yKvjL7g8AdHNnMueeP7Y9s/mQnf7sUh03Y9
eFQze6kbrhr78uKlnDve7PvJCcdv2Fx+1LafPdD3nRI/9/pPdt7v7PWaf06/
aNPxJ88pfM7eh406742Nmv53nrfIioM+L+cbL/d5b86Upllj4Y/f2GXpnqX+
9nn6r7706Gczt618wu0Tbp9w+4TbJ9w+4fZZypFPuH3C7RNun3D7hNvb0Zsv
c/BBu25VeYPbG9ze4PYGtze4vcHtrZQjb3B7g9sb3N7g9ga3tyfmrXNOqLzB
7Q1ub3B7g9sb3N7g9lbKkTe4vcHtDW5vcHuD29va855HNJU3uL3B7Q1ub3B7
g9sb3N5KOfIGtze4vcHtDW5vcHsbNG9cXqvyBrc3uL3B7Q1ub3B7g9tbKUfe
4PYGtze4vcHtDW5vU+bND/tW3uD2Brc3uL3B7Q1ub3B7K+XIG9ze4PYGtze4
vcHt7f1585YVGnuD2xvc3uD2Brc3uL3B7a2UI29we4PbG9ze4PYGt7d75z2n
bqu8we0Nbm9we4PbG9ze4PZWypE3uL3B7Q1ub3B7g9tb63nr+Mob3N7g9ga3
N7i9we0Nbm+lHHmD2xvc3uD2Brc3uL1d07HktsP/uFnlDW5vcHuD2xvc3uD2
Bre3Uo68we0Nbm9we4PbG9zerlhusa8+/f42lTe4vcHtDW5vcHuD2xvc3ko5
8ga3N7i9we0Nbm/w6n5hcP+vDz9x+8obvLpfCF7dLwSv7heCV/cLwav7heDV
/QLl+H4heHW/ELy6Xwhe3S8Er+4XgvebsPA/Pxrwn5kr6L71PxOf3eizOz4Y
t5Tuc//U57oLVrp0WHOO7osX/erGe10x7kvNBbqPXvjqA98ZM3f55kHdd1/x
m3WX7Nm2enO37tNX/Om0YVcsM7wZrvv67Y9e57rL9l276XlP13WAp3Z/6Pkf
PbZOM13rBg/u0Xvw2I9GNu9P7LrOsM2ekw6btPfoZnetS5x75/UvLzq7rVrH
2H90+1VLXtHWXKd1jxEbPz35nKea5mitk7gdHtnyXPmEu31m8dwX2z/xbs9w
x1OOzxfxbv9wx1OOzy/x7i9wx1OO2wPx7l9wx1OO2w/x7o9wx1OO2xvx7r9w
x1OO22f5XervcMdTjtsz8b4+wB1POW7/xPt6Anc85bi/EO/rD9zxlOP+Rbyv
V3DHU477I/Hm2frS5a1xpOp3cPfTLJ51GPc74t1P4Y6nHPc74t1P4Y6nHPc7
4t1P4Y6nHPc74t1P4Y6nHPc74t1P4Y6nHPc74t1P4Y6nHPe78rvUT+GOpxz3
O+LdT+GOpxz3O+LdT+GOpxz3O+LdT+GOpxz3O+LdT+GOpxz3R+LNs/XMK1vz
5Krfwd1Ps3jW/dzviHc/hTuectzviHc/hTuectzviHc/hTuectzviHc/hTue
ctzviHc/hTuectzviHc/hTuectzvyu9SP4U7nnLc74h3P4U7nnLc74h3P4U7
nnLc74h3P4U7nnLc74h3P4U7nnLcH4k3z9bPF2itA1T9Du5+msWzzux+R7z7
KdzxlON+R7z7KdzxlON+R7z7KdzxlON+R7z7KdzxlON+R7z7KdzxlON+R7z7
KdzxlON+V36X+inc8ZTjfke8+ync8ZTjfke8+ync8ZTjfke8+ync8ZTjfke8
+ync8ZTj/ki8efa8prVvuq3qd3D30yye5xrud8S7n8IdTznud8S7n8IdTznu
d8S7n8IdTznud8S7n8IdTznud8S7n8IdTznud8S7n8IdTznud+V3qZ/CHU85
7nfEu5/CHU857nfEu5/CHU857nfEu5/CHU857nfEu5/CHU857o/Em2fPB19v
Pcep+h3c/TSL5zma+x3x7qdwx1OO+x3x7qdwx1OO+x3x7qdwx1OO+x3x7qdw
x1OO+x3x7qdwx1OO+x3x7qdwx1OO+135XeqncMdTjvsd8e6ncMdTjvsd8e6n
cMdTjvsd8e6ncMdTjvsd8e6ncMdTjvsj8ebZ8+hrWrxxv4NXz7+SeJ7but8R
Xz0vC+54ynG/I756vhbc8ZTjfkd89TwuuOMpx/2O+Or5XXDHU477HfHV877g
jqcc9zviq+eDwR1POe535Xf5eWJwx1OO+x3x1fPH4I6nHPc74qvnlcEdTznu
d8RXzzeDO55y3O+Ir56HBnc85bg/Em+e5T8MbY2zVb+Du59m8eQJuN8R734K
dzzluN8R734KdzzluN8R734KdzzluN8R734KdzzluN8R734KdzzluN8R734K
dzzluN+V36V+Cnc85bjfEe9+Cnc85bjfEe9+Cnc85bjfEe9+Cnc85bjfEe9+
Cnc85bg/Em+e5duMat23Vv0O7n6axZOX4n5HvPsp3PGU435HvPsp3PGU435H
vPsp3PGU435HvPsp3PGU435HvPsp3PGU435HvPsp3PGU435Xfpf6KdzxlON+
R7z7KdzxlON+R7z7KdzxlON+R7z7KdzxlON+R7z7KdzxlOP+SLx5lt/Vep/G
hKrfwd1Ps3jyoNzviHc/hVfz5CjH/Y5491N4NU+OctzviHc/hVfz5CjH/Y54
91N4NU+OctzviHc/hVfz5CjH/Y5491N4NU+Octzvyu9SP4VX8+Qox/2OePdT
eDVPjnLc74h3P4VX8+Qox/2OePdTeDVPjnLc74h3P4VX8+Qox/2R+Go+nOQT
/qD1XLXqd3D30yyevDv3O+LdT+GOpxz3O+LdT+GOpxz3O+LdT+GOpxz3O+Ld
T+GOpxz3O+LdT+GOpxz3O+LdT+GOpxz3u/K71E/hjqcc9zvi3U/hjqcc9zvi
3U/hjqcc9zvi3U/hjqcc9zvi3U/hjqcc90fizbP81TNaeUpVv4O7n2bx5Hm6
3xHvfgqv8pGiHPc74t1P4VU+UpTjfke8+ym8ykeKctzviHc/hVf5SFGO+x3x
7qfwKh8pynG/I979FF7lI0U57nfld6mfwqt8pCjH/Y5491N4lY8U5bjfEe9+
Cq/ykaIc9zvi3U/hVT5SlON+R7z7KbzKR4py3B+Jr/KRknzp/Vp5v1X/hbs/
wt1/4e53cPdTuPsX3P0R7n4Ed7+Du7/A3b/g7hdw9yO42z/c/QXudl7qo34B
d3uGu/3D3W7hbudwt0+42zPc7RDudgt3O4R7vznc74EkL93vgYT7PZBwvwcS
7vdAlnx7vQeyHFfvgYT7PZBwvwcS7vdAwv0eSLjfA1n2++s9kHB7I0/Y3uD2
Brc3uL2VvG55K8eVN7i9we0Nbm9we4PbW9nXL29weyNv097g9ga3N7i9lTxb
eSvHlTe4vcHtDW5vcHuD21vZ1y9vcHsjj87e4PYGtze4vZW8R3krx5U3uL3B
7Q1ub3B7g9tb2dcvb3B7I6/J3uD2Brc3uL2VPDR5K8eVN7i9we0Nbm9we4Pb
W9nXL29weyPPxN7g9ga3N7i9lbwgeSvHlTe4vcHtDW5vcHuD21vZ1y9vcHvj
ub+9we0Nbm9weyt5GvJWjitvcHuD2xvc3uD2Bre3sq9f3uD2xnNYe4PbG9ze
4PZWnpvLWzmuvMHtDW5vcHuD2xvc3sq+fnmD2xvPxewNbm9we4PbW3mOKW/l
uPIGtze4vcHtDW5vcHsr+/rlDd79e+PHJ++NH5+8N3588t748cl748cn740f
n7w3fnzy3vjxyXvjxyfvjR+fvDd+fPLe+PHJe+PHV95YN7Y3uL3B7Q1ub2Wd
X97KceUNbm9we4PbG9ze4PZW9vXLG9zeWMezN7i9we0Nbm9l3VXeynHlDW5v
cHuD2xvc3uD2Vvb1yxu8ul+IdZXqfiF4db8QvLpfCF7dL7AO5vsFjuv7heDV
/ULw6n4heHW/ELy6Xwhe3S+wr9/3C8m605ZLDpxy0Jd3qvIP4V53yjjfhfR6
FPFej8o45XidinivU2Wccrx+RbzXrzJOOV7XIt7rWhmnHK93Ee/1roxTjtfB
iPc6WMYpx+tjxHt9LOPld2ndjHivm2WccryeRrzX0zJOOV5nI97rbBmnHK+/
Ee/1t4xTjtfliPe6XMYpx+t1xPt6yL51Xw/hvh7CfT2E+3pY3g+g62E5rq6H
cF8P4b4ewn09hPt6CPf1sLyXQNdDuL2xj9je4PYGtze4vZX92vJWjitvcHuD
2xvc3uD2Bre3sk9c3uD2xr5Oe4PbG9ze4PZW9s/KWzmuvMHtDW5vcHuD2xvc
3sq+XXmD2xv77OwNbm9we4PbW9nPKG/luPIGtze4vcHtDW5vcHsr+yjlDd79
d2zbku/YtiXfsW1LvmPblnzHti35jm1b8h3btuQ7tm3Jd2zbku/YtiXfsW1L
vmPblnzHtq3yxj4Ue4PbG9ze4PZW9vvIWzmuvMHtDW5vcHuD2xvc3so+I3mD
V/ezsS+gup8NXt3PBq/uZ4NX97Psv/D9LMf1/Wzw6n42eHU/G7y6nw1e3c8G
r+5n2ffh+9ng9kaetr3B7Q1ub3B7K/nw8laOK29we4PbG9ze4PYGt7eShy9v
cHsjb9be4PYGtze4vZX8ZHkrx5U3uL3B7Q1ub3B7g9tbyYuWN3j33yuckHyv
cELyvcIJyfcKJyTfK5yQfK9wQvK9wgnJ9wonJN8rnJB8r3BC8r3CCcn3Cick
3yucUHkjr8ze4PYGtze4vZX8PXkrx5U3uL3B7Q1ub3B7g9tbyRuUN7i9kedj
b3B7g9sb3N5KPpW8lePKG9ze4PYGtze4vcHtreRxyRvc3rJ8p61a97PVOhXc
nrM8KOLtP8uDIt7nJcuDIt7nK8uDIt7nMcuDKr9X5zfLgyLe5z3LgyLe7SHL
gyLe7STLgyLe7SfLgyLe7SrLgyLe7S3LgyLe6yfF8183Pe/IyeOayZd99t+/
hWYt2PoebrXeUvJqFL9O67vDVXzJJ1F8a34+sYoveRSKb33Hs72KL/kDiv/X
vHnsqCq+PDdX/Inz5m+Dq/jyvFjxfEfe8eU5qeL5frrjy/NBxfPdcMeX52KK
53vZji/PgxTPd6IdX56DKJ7vI1fnN9bVLz5m4TsPGPPMncSzLufrEut4/q4Q
8b4uEe/vDRHv6xLx/g4R8b4uEe/vExHv6xLx/m4R8b4uEe/vGRHv6xLx/s5R
qY+uS8T7+0fE+7pEvL+LRLyvS8T7e0nE+7pEvL+jRLyvS8T7+0rEu70R7+8u
Ee92yHXM4ynXMZfPuqjL4frmcri+uRzWCV0O1z2Xw3XP5bBu5nK4Hrocrocu
h3Ukl8N10uVwnXQ5rKu4HK6fLofrp8thncHlcF11OVxXq+tb3He7HK63Lofr
rcvhPtTlcB12OVyHXQ73ZS6H67PL4frscrhPcTlct10O122Xw7zd5XA9r9pz
XM9dDvNYx0d/rL4fx7zCz0nhvv7D/TwU7us/3M894b7+w/18s8zrdP2H+zkm
3Nd/uJ9Xwn39h/u5JNzXf7ifP8J9/S/zbT1nhPv6D/fzRLiv/3A/N4T7+g/3
80G4r//ZvBTu54Nwjwtw32cxjrjdZs8Ts/uv7D4ru5/K7puy+6PsPii738nu
a7L7l+w+Jbsfye47svtWPNsnnu0Tbp9w+4TbZ3nOLp/luPIJt0+4fcLtE26f
cPss8y75LPVU+8/yVbgO+zrPeUnm4dU6ADyZV1f39fBknlzdp8OTeW913w1P
5rHVfTQ8mZdW98XwZJ5ZtWfmh+bM98yZv5kzHzNnfmXOfKmaP8T8x5z5jDnz
E3PmG+bMH8yzfbJ4S/KaqvEanuQdVeMvPMkLqsZTeJK3U42P8CSvphrv4Ene
SzVOwS87cY1xO03/aOaPFxs77N9jezVvtr4bO+ut6KenRjnw8x79YLPtrvtK
M+TcHd888LQFZsGvDD9X637w5uF7/ONL//Wz9uS/DP39R88X3vPSS9Z557/9
7swDWpxy3O/g4wfddGpn/3WbO29Y6fRRfxhQ6vODfhc//ubUptkm6k/5/l2t
+5SO6nfB/bvgrifc9YS7nnDX54zW96Or+sBdH7jrA6/2EQd3feCuzxut74NX
9YG7PnDXB+76wF0fuOsztfX996o+cNcH7vrAXR+46wN3fU6dx0dU9YG7PnDX
B+76wF0fuOvTmi/03sj1gbs+cNcH7vrAXR+46/OLVj0b1wfu+sBdH7jrA3d9
4K7POa3zWNUH7vrAXR+46wN3feCuT+t73F+t6gN3feCuD9z1gbs+cNeH79e7
PnDXB+76wF0fuOsDd334/rvrA3d94K4P3PWBuz7w7s9XZ3K+OpPz1Zmcr87k
fHUm56uzqg/jtcvPxvFVR0994LO/dlbXH7jjd2xOvW76lttW8TsEd3zvk5de
6envb1nFwx2/97znQZtW8XsFd3xrPXNsFX9UcMe31htHVvFrBXf8t+e1w49n
On7f4I6/b57nlSv/fwju+GvnzbdHV/HXBa9+77z5/CZVPNzxw/otde70azav
4pcL7vi/HXfK/sMPqPvLS8EdP/2o00846KPtq3i443966JkXTj+5bp9w9yPu
H82Zv7l/Dbj5jJ2HX7FjxYlfZ0yzzqTrV2xmRT8i3vyCuVMHTL17h2qcHRjx
5pR/6Pizd7jk0/WbxeO4/SPe/MIo37+L+zXXv7njtI2eXnL7qp4Zn/3pqe9P
XHu7qp4bR7zrMzbhf4pyXE/uH13Pg35/8rCpJ2xT1efghL+98KCbPhu3dVXP
QyLe9Tkw4e9FOa4n97Ou56gzllhk6kuTqvpkfIt57XBiVc+2iHd91k741lGO
68n9tet52rz71o2r+mT8snnnpanqeWbEuz4nJ/zKKMf1nBn3+67n4/Pux9ev
6pPxXvN+7zpVPZ+NeNfn4YT3iXJcz1dj/cH1XHLeOD6sqs9SCX9pXjlLVPUc
HvFVfRL+SZTjet4Q6yGu52et+Mb1+Tjhy7eOW80TXox412eJp7vn4ae6Dg+L
9RnXM/xX9cn4M63zWNWzZ8S7Pv0SHu2qqifrRa5ntOeqPhlvrRdtXNXz0oh3
fa5JePTTqp6sX7mecX2o6pPxuP5U9YzrVVWfbRMe172qnqynuZ5xva3qk/G4
/lf1fCviXZ8PEh7jS1VP1vdczwdb41dVn4zH+FjVM8bTqj4PJTzG5aqe5Du5
njEfqOqT8ZiHVJx5vusf85mqnr9JeMyLKp7dRzw5rz3vWF3f4P69cNcf7nVC
uNcJ4Z5Pwn0/BbcfuH8v3OulcK8rwu2HvA77gdsP3H7g9gO3H7j9wO0Hbj9w
+4HbD9x+4PZDvor9wO0Hbj9w+4HbD9x+4PYDtx+4/cDtB24/cPshD8d+4PYD
tx+4/cDtB24/8O6/F1bPk+H2A+/+e1sTKz/w7tft25N1+/Zk3b698gO3H7j9
wLtf/29P1v/bk/X/9soP3H7g9gO3H/Km7AduP3D7gdsP3H7g9gO3H7j9wO0H
bj9w+4HbD/lg9gO3H7j9wO0Hbj9w+4HbD9x+4PYDtx+4/cDthzw3+4HbD9x+
4PYDtx+4/cDtB24/cPuB2w/cfuD2Q/6e/cDtB24/cPuB2w/cfuD2A7cfuP3A
7QduP/Du1+3bk3X79mTdvr3yA7cfuP3Au1//b0/W/9uT9f/2yg/cfuD2A7cf
8i3tB24/cPuB2w/cfuD2A7cfuP3A7QduP3D7gdsPeaT2A7cfuP3A7QduP3D7
gdsP3H7g9gO3H7j9wKvnLJEfaz9w+4HbD9x+4PYDr57vBLcfuP3A7Qfe/fdr
tqv8wO2ntd6yY7IOs2PlB24/cPuB2w/cfuDdfydlx8oP3H7g3X9nZMfKT/a7
svwcuH8X3PWBuz5ZHg68+3l4RzIP70jm4R3J/LkjmT93JPPnjqo+5MO4PnDX
B+76wKv32Ad3feCuD/kwrg/c9YG7PnDXB+76wF0f8mFcH7jrA3d94K4P3PWB
uz7kw7g+cNcH7vrAXR+46wN3fciHcX3grg/c9YG7PnDXB+76kA/j+sBdH7jr
A3d94K4P3PUhH8b1gbs+cNcH7vrAXR949Vwy8mFcH7jrA3d94K4P3PWBuz7k
w7g+cNcH7vrAXR+46wPvfh7ekczDO5J5eEcyf+5I5s8dyfy5Izlfncn56kzO
V2dyvjqT89WZnK86D+eC5Pk+3x3IuOchlGO+SpK3k+UtnJ/w1ZI8nweS5/7s
Q8y460kegvkOSR5Rlrdwf8J3SvKO3k7yAdj/mPEqXyvKMV8oyWvK8hneSPgi
SR7U5kmeAPsuM+56krdgvleSZ5XlOUxM+H5JXtZlSf4A+z0z7npSjvmRSd5X
lv9wccKPS/LEeiZ5BV+OfabmywR3PclzMB+Z5KFleRGf7NY9Xz/JW3shyTf4
YexvNT8suOv5SpRjvnOSF5flS9yf8AeSPLoVkjyE92Jfrfnc4K7nclGO+f1J
nl6WRzEy4bcneX3PJvkJ98R+XvP7grue5EuYT0vyBrP8ir8l/Iokz/CMJG+B
fcQZr/YjRDnmU5I8xizv4qyEH5HkPW6Q5DOwfznjrif5FVW7SvIqs3yMMQkf
kuRhHpLkObBvOuOuJ3kX5i8leZ5Znsa3Ev5ikhe6cZL/wH7tjLuelGN+c5J3
muVvbJLwm6IczyfJf/Z8cu+Yp5nvG9zzTMoxZ57m+efKEe955moJZ15n/ze2
flfFyRf9onmn4ae6n70x4czr7OeoKN/8iISfFvPJaj0huH1SH3N+rzn1NGf+
6XZF+eaU73Z1Q8T7/E5PeGfUx+eXcszJ4zXfKSmH+bPbQ/TfipOv+0XzfinH
7SHj5P/7/MZ1rOKXJfzImLebHxPc55f6mPN7q/XtqGd1/xjzebcHyk+uq1U7
eT7i3R5eSnivqI/PL+WYk0dtvkhSDvcp1fO71jhVcfKlv2je9bJRTrWekHDu
U3x+r47yzS9P+GNxf2T+l+DVekXUx5zfa049zbmfqp4/RvnmlO928uWId3tY
LuF7RH18finHnDx28/2ScrgfdHuI+VjFT4888y+a935klOP2kHH2+/j8LhTl
m/dM+Mi4D+3++WBTnV/qY05+vjn1NOe+1e2B8s0p3+3k+xHv9jAl4YdGfXx+
KcecfQTmxyXlcN/t9tDqp6Mr/kTk+bud/C7Zd3BllOP2cEXC2efl8/v7KN/8
joQvFff75l8J7vNLfczZH2FOPc1ZH3B7oHxzync7uSji3R6uS/iqUR+fX8ox
Zx+H+fpJOaxvuD3c1rq/rvgysc/C7eSfyb6PO6Mct4fbE87+Pp/ft6J885cS
vnesq5ifHdznl/qYsz/FnHqasw7j9kD55pTvdjIt4t0e/pjwz/7Uqo/PL+WY
s4/GnHWhah4bv8vt4c+t+HHm/4n9L24nlyX7bm6Nctwe7kk4+zq7fy7ct+L3
JfzjWL9K2lv1/IL6mLM/yJx6mrPe5fZA+eaUXz1HeKgVX81DHuyePxb1qe5z
oxxz9jGZ356Uw3qd20Nb6/pT8YVjn5HbybLJvqf1ohy3h/UTzn7eZLyo+PIJ
/2OsEybjV3V+qY85+7PMqac564puD5RvTvluJxtFvNvDyITfFPXx+aUcc/aR
mV+RlMO6qNvD8a35TMWviH1eX3Tf2bFRjtvDcQlnH3f3+xeaiq+f8D6xHtv9
PpHx1fmlPubsjzOnnlXeS6zTuj1Qvjnlu538JOLdHo5K+LFRH59fyjFnH5/5
EUk5rD+7PcT9UcXZr/dF9/3tG+W4PeyXcNafu98nNaHizyT8ulj3Nr8quM8v
9THn95pTT3PWyd0eKN+c8t1ODoh4t4e9Er5C1Mfnl3LM2UdZ5SEk5bDO7/YQ
6y113njsc/yi+y77RDnVftuEs87v8zslyjc/LuFXxvOFar0leDW+RH3M2R9a
zVejnsm6XD2+RPnmlO92sljEuz0slPC/R318finHnH2s1bwlKYfnKW4PO7fW
byse72H4wvteYx24ag8Z530dyXp7xc9M+JR4jpOs/1fnl/qYsz/XnHqa89zH
7YHyzSnf7WSXiHd72DHht0R9fH4px5x9xOY3JeXw3MrtYUTreVDF2S/8Rfcd
x3Olqj1QfvKcq+LfCO7zQjnm1NPnhXhz4n2+Vo/4ar0iuH2unnD2R9vnPsnz
vn2S531w1x/u48K7Xy+tn3+dnjz/gvu4cB8X3v37lOrnKUcnz1Pg1fuIgvu4
8O7X/er1+SeS9Xm4jwv3ceHdvw+qXu9dO1nvhfu4cB8X7uMOStYPByXrh3Af
F+7jwn3cKcl61JRkPQru48J9XLiP+36yvvF+sr4B93HhPi7cx703uV++N7lf
hvu4cB8X3v1+nPr+q3dy/wXvfh/N+GSfy/jquNck8/lrkvk83MeF+7jw7u+L
6/nhFcn8EF6tYwev7t+Dd/8+tHq+cXQy34B3//60evyF+7g/ab2vrGrni8f7
vrL3mHn8jfeeVevPGec9Y/698d7sim8R3B4o35z3oSXvZ6v4gOR9aD+O+Go/
csL5XfZPOea8h83+j0zySeDdP7+r8zrgPi68ep6V5CfAfVy4jwv3ceE+7pXJ
8254tZ4TvFqHCe7jwn3cBZLnp3AfF+7jwn1cePfvwaifx8G7f39FW/L+irbk
/RJt1XFfT57vwH1cuI8L93Hh1fU8eV4Ar67nwavrefDqeh7cxx2arD/DfVy4
jwv3ceFVPkmyngmv8jGCV3kUwX1cePf7Q+v1MXj3+zonJPs6JyT7LidUx/1B
st4C93HhPi7cx4V3n99b37/Du1/Xre+j4dW+xeDdr5fW91m8z8rjJt+DyLjH
U8pJxtnq9+6X3LfCu1+frDnH9Ti4ZMJjXKu8Uf4XnT/APU+AJ+8BrsZr4j0u
Z+9fzfzDk/lMxYn3edk64VGf6nxRvnl2Xjiuf+/Pohxz4pP5ScU578n7mavr
fOZhq+T3wn1+s3rCfdwtk3njlsm8MWtXcB/3f7y/t2o/2fvr4Mn3Iyo/8OS7
D9V3Z8jTNiff2Jz3zSbftaw4eVP+rlDs+6i+KwT3d4Xg/q4Q3N8Vgvu7QuW4
+q4Q3N8Vgvu7QnB/Vwju7wrB/V0huL8rVOopn3D7nB15Jj5f8fvusGfi7Rlu
z3B7htsz3J7h9gy3Z7g9w+0Zbs9wey71lOfM5y2Rd2Ee+XIVPzWenybf1a04
z1N8fk9Lvt8N93mE+zzCfR7hPo/luDqPcJ9HuM8j3OcR7vMI93mE+zyWeson
3D5jv0nlE26fcPuE2yfcPstx5RNun3D7hNsn3D7h9gm3z1JP+YS//KV3Ht/7
sSHN+21L9frlkQuVfUNL7LHAwusNXao5cbtXX2tO+nx82Xvq6Y//ecjSzW57
H7brVs98qcSfd8xqy9z/7OpNvw0/veSSs94dB3997KMr/Pn2FZrJfz/sqgHL
zF/KWXGTrfq8ctGIZvTbhz/1+h6Ll3KOf3HWr4ZOHtns/0TPn53w+r/K/qPj
f39s353mrNfcde1Tfxl67+fx1zz+7fcu6L9h8/I9e3/7rFs+K/G7LTVm9i6X
rdfMWPWyV3/9yKulPgcutcG5v193XPOrH211/c/69i/lPHz2zzZZfNn/elvq
4G/Mmblgqef3Lmq1t0+mtnxyHd4+2tvD4R++YbS3DeJ8wc+L9nZ9nF847W3u
oq32AH842lu//2u1H/gktTf4R9He9j+zazzt7a0eXcs/KNrbXarPEtHeBqv+
a0d7O1C/97Zob/RH+K5qb/Bno7313aDV3rgOD4v2dmq0N/h20d4mRHuDnxPt
bZtob/A3o71NifYGHxztbb1ob/AfRnt7MtobfEq0t7ujvcGvi/Z2e7Q3+Nei
vY2O9gbfP9rb5dHe4H+O9vbhkq32Bnc/pR2uHN+DGxTfg2Net8qk1vfgBsX3
4OB8D67fza3vwcF7x/fgTojvwcEvi3npU9qntlJ8922f+O4bfOf47tuH8Z1B
+BPx3bffxXff4A/Hd98GxncM4dvFd9/Gx3ff4AfG+yvu5f05wVeP77uNie+7
wXf/5p+m/GPofLNGLHLVEfte8iF5FLMOO+G+re/724LNCoN/eOwp/1mc93vP
2vPaiwZ/sMawZptXvvGNub3/XeLHXLjJcpc/vmjzrWmPzjziyNs+53HfN+OG
Lu8Jn7X5Tof3H/bpas09x8438LH5epV59YLr/+ihzluHN9ee9dhfDrzlw3Hw
NV5Yecl1frpOc9Kby42bvu2ipZxDvn3HyT/rtU7T+csj7hj87ufz8zHnH/7I
d+9dqxm9wGq7HX5CnxI/6ncn7rnQ0A2bqdtfst2TT/cofNJVQ9e85LENmhfG
Xrjfaz0+r+cl2z017OgPm+Zbb+wx/dtDHiv16RHfY30wvsfK/H+x4Nfe2pVv
Ed8Rfja+GwufEnyO+DPxHeGR8V1a+J+D7yU+LL4j/OGk1ndv4aOCn7dZVz45
viM8JL6rCz8yeB/xifEd4Rfju73wjYK/Jf7RV1rfET4tvgsMXzC+L3y/+E7x
HeG3xHcLPl28Pb4j/K6Ou2Hwl8QHx3eEPxnQ9XcND95fv3en+I7wt+Vtl+Bv
y/O/4zvCe+i8vB18ffEJ8R3hp3TeO4K/IP58fC94iNob3xHudVtXPj769SnR
r7kP3f6wjx55a7tes7Z4u9We4ctFf18++jv87HUfeXW77ZZs7o1+Ad83rgMv
v9y6DsDHxnVg6C2t6wD8tmdWX/6BVfo3L0W/g09qu/WavhNXa1aOfgrvjOvD
pXF9gM85ec31//rAys220d/hPeK6MTKuG/B9rt1pxVPuXqn5RVw34CvF9eQ2
8WfOn9r+0KKjmhNUzqFxnenQcUf1PffCA765VnOV6rleXH8W0O9aK64/D8vD
jhf3XeGS6zZspsnbiK/3/MWnj6zXzJXnJq5Xj+i8PD/ha+PmO2VMs5zOI9ex
/d/qet7/9p2fzN78vqa5XO1k0xg3F41xk/u7vWLcHBLjJnx2jJu9bmmNm/DP
NmmNm1vFuAm/KMbN3pd22W/VrBzj5osxbsI9bsI9bsI9bsI9bsI9bsI9bhYP
0b+Ghjfuc4/TuAnfPfrL5Bg34Yybx17bOu+Fa9yEe9yEe9yEe9yEe9wsx9W4
Cfe4Ca/emxfc4ync4ync4ynrAx5P4R5P4R5P4R5P4R5P4R5P4R5P4R5P4R5P
4R5P4R5P4R5P4R5Py7qKxlO4x1O4x1O4x1O4x1O4x9NSH42ncI+ncI+ncI+n
cI+ncI+ncI+ncI+ncI+nrFN5PIV7PIV7PIV7PIV7PIV7PIV7PIV7PIV7PIV7
PIV7PIV7PIV7PC3f/dF4Cvd4Cvd4Cvd4Cvd4Cvd4Cvd4Cvd4Cvd4Cvd4Cve6
KOtIXpfjvszrcnCvy8G9Lgf3uhzc63LluFongXtdDu51ObjX5eBel4N7XQ7u
dTm4vZXnMvJW7h/lDW5vcHuD21s5rrzB7Q1ub3B7g9sb3N7g9ga3N+Yz9ga3
N7i9we0Nbm/luPIGtze4vcHtDW5vcHuD2xvc3spzDXkr8y55g9sb3N7g9laO
K29we4PbG9ze4PYGtze4vZV5aczfxsY4y7rcPjFPezLGZfgTMR+bFOM7fLWY
d20W8wf4d2J+NTDmG/DxMY96LeYt8PlivnRNzH/gu8S8aI742Jj//EPlDI15
zkI67s4xn1lL9Xw35i2b63dtEfOT5+SBechp8mafXA/ts6wryifcPst1Wz7h
9gm3T7h9wu0Tbp9lvVQ+4fYJt0+4fcLts6xDirOuYs/EmxNv/8SbE+/zQrw5
8T5fZRwRL+tCOo/EmxPv80u8eVkf03kn3px4twfizYl3OyHenHi3H+LNiXe7
It68rOuqvRFv7vW609TezMt6qdphWddSe4O7XcHdfuBuJ3C3B7jPO9znt6wH
6jzCfb7gPi9w+4fbM9w+4fZJPol9wu0Tbp8lH0Y+4fYJt0+4fcLtE26fcPuE
2yfcPuH2CbdP8kbsE26fcPsseS/yCbdPuH3C7RNun3D7hNsn3D7h9gm3T7h9
8vzXPuH2CbdPuH3C7RNun3D7hNsn3D7h9gm3T7h9wu0Tbp88L7ZPuH3C7RNu
n3D7hNsn3D7h9gm3T7h9wu0Tbp9w+4TbJ/dH9lnW5+UTbp/lPk4+4fYJt0+4
fcLtE26f5bmDfMLtE26fcPuE22d238Q6pD0Tb068/RNvTrzPC/HmxPt8lftK
8bKOqvNIvDnxPr/Em5f1ZJ134s2Jd3sg3px4txPizYl3+yHenHi3K+LNy3MQ
tTfizb2+fZram3l5vqB2WNaB1d7gbldwtx+42wnc7QHu8w73+S3r5zqPcJ8v
uM8L3P7h9gy3T7h9kp9pn3D7hNtnyS+VT7h9wu0Tbp9w+4TbJ9w+4fYJt0+4
fcLtk3V1+4TbJ9w+S36pfMLtE26fcPuE2yfcPuH2CbdPuH3C7RO+QzzPOi2e
a7DuNDX2a6zU9T0bs66P51D3xPMX+KbxHGq9eF5T1vfiedN28dwH/vV4rnRq
PD+CPx3Pj+6O50fw9eM50Yx4TgTnuc/zN7ae+8DXiOc+I+L5eyk/nu/wnA7+
UjzHOTye48Dv26PP3jd1zj/rFOXR3Rr8WfGPY//LMcrHG/TKiX1+e8SgZmTn
pOemzP58HWyx4OuKj9lzzT/cNXhgs5fy/SYGnyK+9G/PHXT4cyOaNZQ3+JXg
/cQXu2GR019dZaVmpvIPewe/UbzX4ePfu3jhVZt3lcfYN/jH4pu9d/Q5l+w2
qtnqxa75kJsH30Z5kn3j+5g9Lu2aV7lw8EuVb7nVi0Om7XrwqOb+pW64auzL
n6/77RT8QfE73+z7yQnHb9h8R/mctwd/Tnzu9Z/svN/Z6zXPKC8UPvemrvzh
vQ8bdd4bGzVLKr/0L8H7iu8S/W6TN7vmGc6NvN/ZkWde1icj7/eHkfcLvzL6
46XKbzwq8oGnRD5wyZOMfrqb8iTPjzzhh0e38oThz0f/3UH5li9F/vDWkT8M
3yH69TeVt7lm5BWPi7xi+F+iv/c8u2v+5+jo7/crX/S4yEOe+3grDxn+k8hD
vjPykOFcH3r8tmue6lWRnzzg3lZ+cqlnXDf2VL4refKjV2vlLcMfj+vJcOXN
fivymc+KfGa481u4b3WeCdz5JHDnjZT7X+WHwJ0HAne+R7nfV54G3PkYcOdd
wMmXODryJbiv/FmMLyN5v1Zw5zmU+9Zot1+Odlvyw6N9kldQ8smjHV4W7RDu
/AS48xDKfb32J8KdbwB3vgHceQXwh2Mc2V35ZtOCL3pBV77Q3Nb4crDy1laM
cWT1GEfg8wdvE18zxpEJyovbPvg54gNjHNlC+XXDgr8zsStfPMaR+5WnN3/w
K8U/PKw1jryufL8lYnzpdU9X7vEF7vEF7vEF7vEF7vGlPL/W+AL3+AL3+AL3
+GLO+FLyGzW+wD2+lPWQ6HfvKe/uwxhf7o3xBd4zxpfjYnyBXxr98SzlAXp8
KfmEGl/gF8T4Mi3GF7jHF7jHF7jHl/KcOsaX9hhf4B5f4B5fSj6nxhf4STG+
3B7jC9zjC9zjC9zjS8kXZR9WjC9wjy9wjy/wXq9++sHPD3195gLan7Vl5LNN
1vy2x9H9Fpv49P3jrtY+ryby2YZrntxz47VnjP3xsOZe7RfbO/LZFtN8+64f
n/zogXv3bx7XvrONIs9t5E1d5+3TXrt8g01GDGtmav/atpHPdo3m//NF3to2
ul/46pJrXPzjpddqGu2bWy3y1i7Sfcc/zvnmWf1PWrfZVfvvvhN5a75/6XfE
zMH/d9TIZsborvv4Noi8tWV1H3Tvo9NuuGevDZqdtR9wnchnm6b7qXOfX/yy
A3+zQbWv8PDIv11W92X733jOOsNuWr9ZaoOu+xM3iTy3pyLPDU4+24Fvdr3v
++PEVr73QM1XH4x876HTu857+8c+qRmaP/e6+sB3xsxdvnlY8/AVI9/7pee7
zv+3iXzvvvd0vY94NvK9r9L9yOzI935yYtf7mi0j3/sI3R+df+f1Ly86u60Z
pfusfSIP/Fzdr60WeeC36/5uzyNa/eVCzevmi36xn+aHs6P999U889fRzm/T
fLWJdruJ5sn/ivY5UfPtxaIdHql5+13R3g7R/P/8aFcn6D5i32g/H+m+42uR
BzUm8nx4Tu19nWX/TvB1xb3fs+xjCr6UuPeBwmcGnynu/aFw7w+Fe38o/BsJ
nxt5VrPP7FqO942az+rdlXs/Kfz7wW8U9z5TeL/gbeLef1r2hQV/Tdz7UuEP
xvtDJut7QBdOabX/G6L9w71fFd6LfhHjBXxIzDdOiXYIvz36y/QYL+C7xnxj
22jP8BujH82KfgT3vlf4v2Je8b3oR/Dp8V6R2+M9J3Dvh4VvFv10jHiveF/K
EJXzWvTfg3Rc76uF949+/eHorvX3flv4/dHfN5Ef78OFnxXXAfv3/lz4N+P6
sI7Or/ftwm+I+5dP4vpJ/sCfgh8sflGMO/1j3IFvHfuPviLeM+6Dvtv1u7pl
nLo85s9w9iv99OauvHfcH60X40LJrwi+pvgSMd49HuMdvFfw/cW3ivupn8d4
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
8j4BlZNdV2kPLofz4nLg/w956jr7
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], EdgeForm[
       None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxEnQfU1MQXxcOX3WQ3yW527V3BjmJv2FFEURErdpRm772LFLsiYK+Iig27
2BWxi7037GIXxd793x93OP9zvpy8nW8ymZ2dTN68d999nQcevO1BHVEUXdyK
oljnn2tRNDmPoqc6RdES9Sgal0XRn5JvUflS+ryc5HMrUZTporUlj5acS15H
8vmSC8nrSu6qurfq2k76vLHkJ/S/hSRfpHND5/VUZyOVT1OdBfX5LrW/sj6v
pfKVdL5X5anKt6xG0WY6n6TyQ1S+ivq2pT5/qs4+r7If1Oc/dG0/1X9On3+X
vL3kqZLvlryKrukueb5S925H0VG6/+0qX562VN5X7fdWeydLfkT/W0DyFpKn
Sl5Ecl/JEyTPIXkjyTdKnpPvJPkBtbOe2ukleV2dX9R959L/rkuj6AAdPVV+
jeq3VdZD8hTV761620uepPJ5Vb4Z91V5T5VvJXkNnZ9UO039716Vr6XPG6r8
BdVfVGVbS95MZdNVp7M+36D7HKRjW5W/rDqLqWwbyQ9Knl/y5pLXVP0r9LnU
5wfV5vr6vKnK71PZfCrrLXlbjcPmkodKvkvt3anjRMkLaMzu1rGMxv1HXXuJ
rn1Y5S/p/8fQnuR3JA9P1G/Jn+l3eUHnH/W7nKC6vXXdzqp3qeTXVO84yXtI
bqt8bcnH6r476nwuY6Lf6Fbda1GVvaC6R6v8fpU/K/lIyZMknyR5pO41Xe2f
qHb6qJ1d9L+jGhqXpu4p+TKVdy2i6HjJF0heUvIRkp/TtUcxrmpnhr7LWP3v
NuatzourzuH634sq312fD1D5djr/qXHupvJtJf+u8Vpe8uHq3w46n60696jN
STrOktxf5VupfITkj9TO8bpmlORDdV5D/exDP1Wnn87nqPxRfd+79H17qewd
1T9Y9U5R+dE6b6D621Nf8oH6/3aSp6nOkfp8uuo8J3lHyUMkz6s2btFRYaxV
VtN5VR5qtT9W5X35nXW+XceC+t/eam8b/f80XTu/yu5gzFU+QOV9VT5S5YMl
by35VMnD+H4a869YJ3TfDt2jk8ojnXfV+Lwm+Syed12zn675UnXO1ufxPIMq
O0Bl10h+q+rfZLLkN6qeC8ylM1V3L91/X31+R+WP86zoeE3ysWGOTdO8+ky3
/ETHSarfV/V30/+Okdwj9+8xXfc9VZ8vU/3xunYvlV0h+SrJQyRfLvkGyftI
vkrydZL3lnyl5Okaq4c1Dqep7AO1c1zdv9HHkodKPl/yCJ130r0G6pr3Y6+R
n6o/H0p+RvKXkp+ueh4xr56UfJjkWyRfqGuPyT3/pun3WELnfiovVGc1yXsz
z6uep3dITiSv0uHft17177mX5DHqz286vta9vtV5jNq9WeXn6Xyw2j9Y9T5Q
f55W2eeq84PqXFz3c3SRzi9V/Vw9V/UzdRfrGM+ljgmSv1H90ap3g+R7VedA
1bmWOpJ5UVzHM646I1XnUskf6rssqfIdJT+m8s1VvoPkcyT/UvP4nJd4PabP
YxOv099KvjDxGj6DctX9W8fPkkfp/GvN/f9T52dzryl/Sb5c17woOWUO6t7v
cS+VPRvG/zrJr/AekHyz5H91/lvHjxqTN1Xewf8kv61zRccvkt/SOWbM1ea+
ms/vMn907cs6/6prb5D8quQ/Jf+l+u9Iruq4TP2p8bzRH/XlfX4rHZnkDzgz
91SnqTolz5rKP9W5paOL5M91nlPHopKn6zyHjoUkf6ZzW8eVuraha5uMrcZg
Aa1R56ovc6psGdX7UuUNnT/UOddxiX7DwToK5pXqHKbv8pHklVXnG96BOlaT
/C190XG56u6lYwHmhu7VSddEkv+TLjBKz8IZur5D5zE6LpK8gq79mvWGvqru
UJV9wVjp2rn0eR7GUfNkZc2HwZKP1Zq8udbkk/X5PNWZou/whW6Rq73xOl7N
/Cy8pv8fpPI31JdBqZ//hWp+XzzGuhHKn5C8qcq/0HWv6pp7JK9at+6xms6T
M+sio9RmPegnvZhHKn+lw3P1dZ0PZj6obDP97zDJ01X+psoPldxbZd/o89v6
PFPnd3U+UuWbMzd1zTv6/JnOm+jz/qxHqvOGyg5Bd2I+smZLfk51JqtP+0g+
W+W1DushV1b8bt9A8nGSOzqsh6ygusP1uarPd6rtbvq8mspPVFmsslUl36/y
7nXrIUdXrFutLHltld0UdJR9dP5bZcvrWF3lj2fWyY5QeaTzSipfhudb5f8y
h4M+tr7kayW3gq5yddAX0D3OqFgXQze7Vr/DNTrWlHyb+rO02uomeVmdJ6rN
/ySvKHmS5ETXPBL69iKyyh7U5z3VlQd0flCfn1L5Yrzr1NZ5Km9p/vzEbyi5
q+Tvec9K/k1tTJN8tORKKD9L8pySf+7wtYtI/pp3FtNY8gzJZ/L8am2f2Pb7
e1WV/xjaX0nyTHQPyX10/395XtCxJOfMVcnzqc6XvNNV51n1+VfV+UqfY9Yk
3hEqTyW/WHc7z/MM6fMPqtOt6jN1Fqz6upHoq+iqdffzVo3lN7yLJT+ssmf0
vxc6/Ls8q/NAlT+msof0vwG8cvU9rtbxcuZ59YTq7B75t3ue90Xk+f+k5P6S
a6o7TsdLqt/W+Xod72eeh1NVZ5DqHKPxmdC2jv6vju9UfobKt+W5zv35FvXz
W51PV/n1vCt0bMI6oP9vU3P9UWrnRrXzitrYTmVz5/4NmEvPsSbwe+n/N+j4
UH04JfXajV7xrup06fC74yaV36hjO+ZY1XrB1ZInhnf3OOakxmNw7vf36cyp
3O/7O4MOgu7xtPqwjf7XX/Ikle8f9JCvVX5O3e+1UehXud9tP6oPXRlPla8v
eYbOC+voIfl7nRfRsQ7jw/qk4x+tk2fru5yk73It37fuNfZK9f0KHQtK/l71
l1Wbu0n+SWvhOaq/OuOsa89F39C13+rzMqqzq+qcy3MR3rvjdB4c9JaHU7/b
eS9PlnxIh9/7UyQfGnSMc9WHR3PrxicEnRydaXPJN+n/1+sYKvn0xOvw0Vqf
v1Q/TtT1X+ja0+rWl4br3A99EL29an2Hd/0Vkgd1WL86S/LuHdaLTq9aFxsr
eaTkXSWPoT+S+6ODs3bpvvfpuETyMPQp/W9P/e9T3fcUfb5Q5TdIXlDyopJv
ltxZ8lK8K3XeTWP0u+TbK95jsed6WHU2qHv/sqHOb2bez/SQ/G7m/c8zYd/J
3uouyXN3eO/zWNjrbSn5yYr3oH34fXXt85n3ePeofJ4O79Ee1b02qXv/tanO
n2bea72vOosHXW5LlX+XWR96QvW3qFsv+kp1llbZLpKfk7xwh/eVvep+VtjX
9ZE8U9cuxTOssr86ea89sOL9d1fWZI3fOB3LSu6j8p8YG+aorr1A1/7IvJQ8
WvJMyVurzs86L65jO8m/6LyEjr/1m5+luXec6i2u+lfq/IfK+6nOrzoviQ6g
/u+cWe/5V/KXsfWq6bH1L/S0LzWfz1A7TWwAaueQzLrIFapfr1v/eavifSp7
3qrK9s6se12qOnHdeldF50GZ9bDP1f5Lnax3Xag6/9Ssy+1Ce5qTq6ut51W2
mz7vp3q76jyH5tIaKj9W/RmvOT0346X7ju2wTvK9vu+1DcvdVH5+h3WYp6VP
XdbwfJtD5Wd1WNd6UuWXNPy8767+3Nhhub/kmzpc/1u1eX7D9Q/UfcdIbqBj
qZ1zOqzjfac6Fzas+5UqP6PDutn+qn9ewzpbofLTOyzPLfnsDtdP9B3P7HCb
N6md0Q1fe4iuvbjh9p9VP6+QvJjkFyRf3fB8mCx5bMPrzy26dmLDOt4A9f+W
DtdJdK9TO6yvDtX/t2768y6qM6HD156vPkzVmP+CDs/c07rxm+Q9VOfmDt93
DbVzUYfbX1XyhR3WLfdUnYmSOzPn1Z+rGpb31X1GNTw3Hlf5RQ2vsVMkX9Dw
ujpUdW5quJ0TJE9o+Pc6SfINDa+xx0geJ3kuyUvrvmM6/LsfpfIrG9aruzE2
Te/j1pa8TNNr0fPq22Kx5ZVV9p/eWwvq82s6lom9Bq5Af5u2S6yic6xxXEj/
e13HsrH3jG/o3DX2XnI55lHTNoGl+U6Sz+Q30v8Xjr0edlf50k2vmVNVtkjs
NfMpnReIbSt4Uuf5Y9/3MZ3niW1bOFrjP3fsNpdlbjZdvprOecttvaljudjv
x1VVnrZ8769U/1x9/lhj9F7Qt1mvjlDZ5Q3vOxZR+agOy4ep/NKG9yAv6fol
Yq/bS6jO6A6PeWfJ53WEcVb9mRrDeVVvecnvtdzvY9XnxXW+WHVWVPnvpb/b
6pJL1VlU8qs6lo79jjtZ9/xK5SPV7gqq87Pqz6f/rafyrvp8keq8qM9dYssb
qHy5ptt/QWWdY79H1lT5Uk2P7ajUeznm7XOaywtrnl2jzyfE1n/Qw59U/Y3Y
/+vzSbH1KHTgp1TeS+WPMG6Shzc9do9LXlvlD0qeJnlE0/uKF5nXbeu0L0ne
R3Welnx8bF0OHfvk2PodOvxzqrOD6jzOmiZ5l9L63DuSf2h5z/KC5D1K63Pv
Sp7Z8t7nCcnrq/wh3nGSt5L8qOShsXVt7JPPqnxblU/R57cknyf5JclvSj6r
dL2XJR8g+RneZZJHNr2feUXyoaX7/aHk01T+luRXJR9Veuw+kHxq03un1ySf
UFrP+1jyj62wV+JeTevur0s+pfT4Hhf7ntiBp6v8dtV/n3VQa87LHdb9Plf5
2br2A31+u+LvjX74hcp/Uv0P9fkN5m/bY/qp5DOb3oO9UfH48d45MPX3xh47
VXXe0rWP0abkYU3f72zVuVTz4ifNkzPQUyTPxMbI2KrOcNUZxng2vV6PTW0X
+Et1zpR8Uag/XHW2a3qtvxA9VuX/sGayHjRsNzgtte3je5Ufr7It9b9T0KXQ
q0Obo1PbMv6QfC76ZOJ1+KzUNhD6eZKu7atrR+jaEyT3kTxM8sjUdpbvVOd0
yeeHe/0Z+//0YXf62LAN5J/Y3y+R/E1sfRA7wNc8iw3LM2Pv47GfzJB8Uodt
gMNT23e+UbXt6Yvq/yf5FT1n1zWsb7zEM9ewHnJBarsMY3ImdXQsIrlas+2W
a+OK1wDsKlHF3y/l/cWa13A/T9F5G30+Tf8bxLrbcJ29WbMbfq/9Fntc+Y47
U7fh/u/Kb9iw7rG6zks2vT6vTB95N6MbxH4nIG8q/eIPxlhyg+uato0vzHum
aXvpQ6pbxrb9Lsja2bT8q8awIvkQyQ/r/63Y9R/Uucm4S14UnaVpW+sTOi+g
43jJ9+lc6DhC8gM6N3Ucyfof9r+H8R3VfqLyQyUvFfa8yHerrNZ0nRXDPpd2
Vgn7X9q5R//PdBzOOIR991HoD+rXHHGwD6O/NN3PO3Tu0HEw41DzfhD517A3
34N5ovoXNr3X/UHyBU3vnxeveh/JOPyk8jtb3vf+KPmipvftnXnPN33fe3nf
Nj3mc6MrNW0bf0D9ajCPJc+LztW0XPJsNe0nmqT/12L/Rm3mRdP+nftUlsf2
cdyvcxG7zTmZL02XP6Rzq+lxeEzn+XQcJ7mn+v97h3+Xm9l/6dizk+0S3cJ3
/zn4B9hvYovAv3FgJ+/xD8NP08k2peU6vMd8SWM4oO4x2VPnOfV+Woc1X2vk
/VrT9lQbT6rO1nXvH7E1sT/YqZPtCd077KfARrGW5P1Z8/GFoU9LfkbyDpIH
St5e57+x4bH3qNvGxb50etib7Kw6W6n8p8x70UV0//t0rKU+LajzJB1dJd+h
73FE6t/lVJ1Hh3XmD/1ec2msjlH5OurPLx2WH1bZHDqOlrxWsNUgH6cx34Ix
1+dHdZ5Hx7EqX191fu2wvInkTcOY762+ddfnjXnX6HvtU3f72IjWD88C9pYN
OjyfN5Lcq8O/3R8Vv1v4vV7WtQPrfkawBfUIzwK2oA3DM7KB5E1CH/ZS3c76
3hvp88XoJOr3AJUXNb+XkH8IdkJ+0zlr3pPfTjuqv1LL+uJTKttex90q/151
FtO6dyffUXWW09iuqDrH6/8rx7bDvyy5v45HeAZr9oc9JPlV5p2ORyWvrWs7
t6yfdZe8aMv61oOp9/w3qk6T9VXHlvq8juosoTpLqs67se+JDeQdnVeIbRt5
SPV6h2vfU9lKsW3+a+naBVvWvRao2f9H33qpfLOW620qeYuWv8O8Nfvt7lOd
53XeRccD/C6qs7bqLI9uq34tpWM3/e+t2GXYeebRtU+r7B5+I94humY08zm2
Do48Vf/fKbTfQ/9fs2Xdd0PJq7asl/eU3KPl7/a66g4M9uSfsFsWHsP1VWep
tvX+NSTP2fLeYGPJ60vuJnm+mn2H9P8ZnfuFvs2t8ifDb7ole9XMOskT+GNT
/75z1GyvuZX1Qe390vDz+F/Ftkae05t1r38bfn7nDfZG5FvYmzT8jP9dcdtc
e7fa6dT0erJwsHmyzixW9ZpK+Xe6bozqTNfnGZLHSv5c8ncV62WsJ9+gE6r8
U3S2YMdmbfla5aNU/gn6W7CNsz58Hezi2Km+qFgfxKbxreqPVv3P9Pk2naOm
+zNX1TZU9umLs59r2ne5JHtT9A/JUzS+c8WW2zXbuSZKbun3WVTHVvq8ruou
re+8lOo9qmPO2O2sp/KuLe8fFtO5h9p9QrdvV/1d91WdvOp+4V+7RvX/bFi+
QvJvDfsprpP8F/q65Osl/93wtY/p3luHZ7mj6v0T9WtVjxn+uKvY1zTsp2tW
Pd60c7XK/2i4zkc6n9702P2lObIF/sXIvhLaPFHyelpHL4y9Jk9OvNfCP7SD
rj26afkEXftm7r3X9io/smm/0fqqf1Fs2+WOKj+uad/Qf1q7zsS2zrgl3ifj
r8HHdK7qLqH7npJ4LcDeuDHfNdhPT0r8TCL3VPldwX46NPF6gU93E56D4N8t
9FstX3jt6KXj/mDDHJZ4HcG+erLkt2O3s5P6eTx6gvpzjL7XG7n3oI8lttFQ
fm9i+wi+tJ1V/8Sm/U+7SD65aZ9WmtjWgC1sG5UfzLyVnCS2U2ATG6v231P7
m6mtKYltQ4zPg4ntNdR/ILH95WPJ26mdw5v2wz2k8gWD3+5Pjedp+PH5Pvi9
c9t1tuIZbdr2tS37pqbrby35oKbbvD+xjQl/3P66LtNYPQS2hbW8atvuDpKf
D37Z/qqTqs61+MkT2yawbw9UeU3l1+NLT2yPwAZ+NP7K2PbZ9dXO1cHnvbn6
eX/uffw6Kr842HOv0/PyZWn77LoqvyzYdteTfGWwO1+F/TKzjp0Ge9GCkX2O
7IEWZg6nfv8x9+ZSv1YsvC4fgx82djvHJt7n05+PwvrJdzwMX3DsPlyr/nxe
2qZ8eGIbzR6S3w/PIH70vjo/FXzqH4Q1Fl/7Ufp+c+i+U/W/D8N7Fj/6Fqz3
VdvK30v9DkQ+QvXbqv+M/jct9RqDDb0PPsaq5Y0k3xJ8D9urfhX7FP75xLYG
bNcT1OevS/dzFH5j1dtEY3FkYjsF9vMTEtuJ8Ftcr/rflr62Lz6d3DabHtjn
g28D3zHjvRB7Q9X/t+m5nar+qNw2vM/ReWLbZicm3rOBwdhY860ftgjeHYn3
acibYFto2v/9IjbUwvvSnirfif0+OmriPR5yL5Xv1rQ99jaV/xz72kzyoNg2
4iH4VHPvKe9KvE/Db745a2rTfvlJie2M0yRvwVrYtDxA176ce3+2qcr7N20T
vjvx3o9rN1P5nk372k8Cm1b6vidLrkr+Dd1P9YfHttF/I/mG4ANdKrGdBflr
yddVjMFaOrF9BNv+95LvDvb9BdSfy9SfU7AJ4dOWfDM2bdUZHPtey0keERuz
9bPkx4PPoJvkU2P7Gl7HN6hrH2AfoPKRsf0RP0i+t+Jr31adr1XnYez++OEk
n47+pTqnxfZJ/CT50eCfuDPx/pxx+CnYB2bZ4TUH1ostH60x+b1pH1Ws/+8W
Wz5K5b827cd6XOUrVbx+9tHY7tf0utqh8l1j19mSd2DTOIZ7VF6vWP4eX7/6
2V31jlSbPzftA3sisc2XdfhEdJLSPoa6ygfGlquJ7eb4I45RnT917Q+SK4lt
68gd+DJz2553xUbUNEZhJL6C3DbmGcHGAl7kI/Y7seWnwToVtnF8FXxbYF+m
gauJjcv5JjVuAozI+ypfPbb8dWpcE3XeA2MT+9ofU9sIwX98pvJ1Y8tvq3xE
wLl9rTE5UfdeRf/7MjUmDTzQJ+z7YvtIfgh2G+Tvg30JHMsJGof/mvbNzAx2
dXweH+raNWPjYz6VvE7s8g/wb8TG0DzJPQvvu2bouCP4tJaUTrFfZrvJEjVj
Y7Cb7K4698TGOC6ie/UIe5vDNc5TmpYXTr3v6snaqPLHm947nad+Pl762iNV
/mTT+7FFU++HqTNKdaaUxmj2Z57HxhFeoPLnSuPh9ky83wa3OUblT6t8C/bM
iffkyKNV/mTpa1fSd/xHRz/eVYltJbQzIPH+Hxzdavr/v+Ddqv7N+N3BC62t
Mbgttw1gA8l35rbNXIE9sjT2bj+e39jy5Sp/qzR+bK/Eto9tO4yHfbk0Tu7g
xHsP/JqXYH8tXWeIyh+JXWcp3eev3LaiTXXu0G90IjpQYvs+GMjDNIaTmx7n
C9XO86XxdhdJfrE03u4q7KCSd5J8QGJ/APJBiW1SYB33l/xEbNzklar/Xmn5
Ns3J6/SdN4o8t89MZi3L0c5tv3fGoMO1bft9Sf84uG178iK65qC2bc4LSR4u
+Xz1c1l89JLPYY8keb+2ba0fSH5aZU81jct7VudnmsbEDWrbJskzcHjbdtol
VP+wtm3CnSUf3fae6zCN04k692aNUt+Pa3svfJzKj297X/kmOL627dus74e2
rUufgd7Ttr39FbU5uG3fwUxwTzXbbFmvtlT5LypfRXW2lvyIym/nvSM51nE5
OCCwkzomSO6lc6p77aJ7bdxmM+F3e0+dO7WtS67T9jtuM7UzsG0f+rfYFGrG
oLImrKvyb1rWGTdsWyffgTkpeUbLuvmO4C51rKfvuwW4CNW5RnX6glVRnTV1
r70T73nAf/ZT+evq2/4ak95cK/kU9XMnyYu1Pe+203mhtp+h7XVeuO1nZR98
verffPpKl7bcDm1y70hz9SC1ebn6tG1mmwx4Oey9c0XGyFE2N35Y/X+R2qxh
iU7QtfPq2rd17aL4ZDPbjnfW3Hs54Aw/Tb2/Byv8SbADUL4YONvMduRr1J/P
SmMI5ki9p8W2tQ9+gabtaHOltiFiH+O3vEn3vkH9KnX+Nffe99DEfjV0yE1V
597c/re5U9tG12UfqDZvbbr9XVX+atV9213y6wFvuqz6dkRmX+x4jckemfdL
8wff7uL67j/FlrtExt1h78eO/UPs6zpLnoYts23f+Y6q82LV+M/Pgm2Hey2j
ex2e2fd8qM5LYxvStZ8HewV42T1SPwfgZacH+w8yOEbs2/Oo/g7oEnXLF6f2
HS8q+bvYbS8WsIvY/+cFZ5Xa1rAm657GZGLTNsS2yhcI9sRE4/dz7j10I/X+
FqxqPfV+eCXWfF17edNyLbVdY0X2KSq/tun6FZX/FOyeG+o3uiS2nXQDyRfH
Lh+g+uObxrlmql8NOMJ9EtsIwEIPTmxDZ51cKLWdEXvgoQ0/18gLprYzYq/b
Q+VXNt3OnpLHNY2p7dB3+in3Pr6a2n5Nf3qo/Utj23N/B0OR23bIc3iL5NvQ
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
XBz8ttwDGzfY0Zcj27DBhb4U2SZxWrBLwKOzSeYYTDAQYCGIc8QmAbbh/sj4
BmRiHo/FJpc5jhKcHFg7YvrQ+8AEPhoZV8p9wa6zP6RN9HzidcBIoOej/54e
dGAw4+A30DPxySGDIT+5bn8xcYJw/GyWOTYTjAXtEPsDto/7Eiu6d8310Uvf
1e/QrW18JNhWMK7g5HcET9L0ux5bYi0xzgf7IVjVn4LuA/4JXQhfD3gpsFLY
1sBvfR90Meqjz+D3+K9qmzZ2NjBb4LV+bBoX+3XQ0cC8bhxZLwN3hV73TdM4
VDCoW6n8l6ptjF+rvG/DeFT8GX9XbeP9oWkMMfjYnhX3E31tZtOYXXC5/VT/
n6rtyfhz/q3a9g6/Adhc8GD4baLEtnc4i8AVfMRaCdal6Xm1bmEMiYpm+TwY
Q3wlW7WMJ2H+b8c7DbsKaxaYmabnal/JU5uez/0kv9G0nraD5Neafh7xiZ+s
az+J7V/olBi3Bt6NMcRWCQ8DmDPwZuydmG9TImPo+C02lHyo6lyjvcNwnjXw
G6Vtb9sTo9m0Px0fN7E9cMWAg4yCTggGFCwo8argO8GCEi/8cGIcNjY3/FDI
xNv+xp6oYr8DNrmjM9e5umZfA/8j/ntS4Rhw9pfodewxsflh+yOG977EOF0w
uqXaGVdz+9j/TwcvUbG/4AzJi1ccM31f4XhebMhv5X6HgTtfIrzLeK8hY2d+
JPG9sDGCBW4EnZN44nsL9wF7P3Z/2hwX9FLWQzAIYBGIQ4QD4JKaY/G+xpYS
22d3hcr3zIw5AeMA1oE4vjsSy+Acbk+MTaEOcYETC8cGfle1TZx+Ykcdwf43
NoaF+tyL2MebCrcJxpL+8DsSo3lz4b6BuQR7SZvER/4T6iD/G8qxnQ7Hxx8b
fzE4c9/A27yaux523OMzjxXY/i5hDH+t2ueEvwk+rS0y82zAYdYnM88GNh6w
089Exk8jEyuNrQdMOL5X9v/MMewYxDjeWPhd8FXVOJUukZ9/8O1wC+yr8T6j
ZjsG2HEw5MSzH4C/oGZ/Onxu4P+JxzmwZhn/L1h/1nliheB42zoz1wrYdPpD
7DzvlB/D+4jYJ9rHjwkuhj7w3oE74a7C/Ak/V+3PwDcBz8EdhbkOwK2Amecd
B56lXTEfAjiZ13N/BrsPhp9nAb/DqSpvVez/nT+Ug+FHZl79WLVvBbsWHAy3
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
9u4w0xufB98LOD2eaOPnqqzcff2Lh3k=
            "]], Polygon3DBox[CompressedData["
1:eJwtnWOANMkSRat71NNdrbVt27Zt27Zt27ZtvbX5rW3b3n3n7O0fPZNRkZmV
pczAjcgJN9p+pe2qRVEsUSuKfv5vP1wUr1NedaAoloaxUrMovm4Vxbgwf+XY
qtDfQE8G/Qd0h/p71ItiPOiRKkWxOvzv4E8D/Rf8XeG/RX9bUV6J/naG/792
USwMveZgUewO75hGUVQoz8f5d4F/P/zF4K/FsengvUYfVxUZ06/UP4nfe31F
8QTn25y6F3VpQ53tqHMs/7+Afwd1t+F870EvQx8HQY9Dm9Xo/1vGNyXj+5Nj
O0HfRx8LUF6D820CfRP0aNBLQc9E2x3o4yDOtQbHVuFaf6P/rzjX+/T3LH2t
xLFzqDMKx+am/puUbyxyzSd2iuJh+luO8sRD3Ft4MzbSV5P2y3K+z+ijxXh+
4NjU8uj/TNovPZC2t3N9r9bSx/qUb+PYhJSvpO5x9D8B9EG0f5fxrkB/X9Lf
6NA/U2dd6GvgVygvDP8zynNx7FSuZz3uzyT08TJjuqjIM9kN3mO0f4uxfcCx
BvTNnHMr6uxNmxM434PtjG0irmdF+F9RfyzO9wvH9od+Bfpj2v9E+2nof03G
flaR8V9EP7tyv8am/sQc29T+6W9M3zfGtw/087T/gPbfwF+bc38O3aH+YfS1
tfeB9i/Afwz+3tR/rpVn4TPZD/ol6I+gf4CejTY7cs6DGfvanOMNyrM2Um5R
Z3nqf0H9Uej/J47tCz0C+kN439H+KOovz/legb6APkqvnzFtzjjug7819e9k
/FPTdkXGPyP1b4Z3BP3VuL+bNdKHba+mzqG0b1N/c/ivUP8w6C70VtCvQh/I
uaah/ZT0PTXHlmvmHnjtP/p8qP8z45sL3mPUPxx6JNpvC/0a9K60PbyRa5me
Pm6nvxk4/+yc/zDq3En5Fo4dSvkBxjcpbc+k/7m8r9TfkfPdy7F5ab86/U1P
+Sz4t8I/gTa30nZ6+pitkj7WhTcadXam/D7nnRnebX6j0HX6X4v+fmS8s0L/
S58zeX74R0MPwx+d8T/kM+bYbV4f/49q5NucjfFsQvlI2pzP+a7k2CeUN26k
PBXP5Ajaj8L5d6C/1xnvmpzvB843E/Q/ftPQ30NPD/23cwrn+gD6L9oeQj9L
w/8Eugb/O7956I+hB6C/hd4Y+kb6H5nykvS/DPSn8Bvwv+fY34z3NH6f0t/z
jHE17s/vtby7vsPbUP8u2k/n/Ef7Yxj/Z/BvhN66mnf3MMa0cj3v8AD8TSn/
YZn+tqf93bSf3bmX9vMz5t2pc5Q8ji0E/x36+Jr6n0Ivw/3Yr+Sewn/d+Ye+
jqXNAG2/59gS1P+Q+v9S/2v4O0Df45xAeTXqLAn9Efwq1/eNczTt/2W8f3E9
n9NmUfjvw/+F8hfwT4V/HP0P0vYH+t+DusdD16AXdV1hLC9yfQ9TbxXnGNq/
S/vvaP8Z7ReBfg/6R+jPoS9k/O8ynv0oz8z8ci70a9A7+T5Dz0nf63COC+lr
Y45tSfvb4U9KeXnOeTvnO7qbdcn16CTaPwp/RfiT0L7G8bNd67i+t+CfDP9x
+KvAnxT+dvBWZKyvObdzji2gl4R+Cvp/0KdQ/wnqr079yah/Jf3tCX8C+juX
53kH5z+G83c5PjL9X8X/feFPDP88+AdQHsm1At6kHNuM8d9Cf+P47Bj/x1zf
A9Qpqfsx9NqUC+r/y78vGMN4zjf0vzPHDqWPqRjf/vX0dSJttrLMsbGKXONS
3NsDy6xN+8un/R2cbwrOtwL9L8z51qf+lfB3dQ6m/kHUHxX6AOpfwnk2q+d7
OQF6P+jFoZ+APonzv0P78+tZu1+kvyu4P1/T/8n0NRf35wb6OpLx1mnXoP66
3ivONzL1v6WPhus2x9qMtYR/Ge0/p/2xtJ+D9nvDf4/6+/gtc/6NGP8N8DvQ
S/iOcf53qHNnkTrr0Nf41B8J+ivvF+W16rl3+9C+St0zajn3y5zvXegl6GN/
2o7NsasY78bU7+d4P/y1qDs7/HXhV+Bfyvg+5fxHQc/O+BaCtx51rijyji4J
vQ9tT6ikz23o61LoqYrMGUfRfgza70b5TcZ/OfSX0CdQd076u5i6GzmHcK7j
Ge8e0AtBPwh9NH2eSv0nqb8W9Sen/vr1rKmupX6TmzKWxTj2MOU7OHYJ9T+m
/uHOp9TfBP4i8B+Cfzv85+DdxfN5o5bvaRzfD+id6PMQzteCvhV6G99j6DPp
7wXabKasQn9ndNKHbaeCPoX352DqT8E5Tuccr9Jucu7JEvCH+iI73Ab/lVpk
iAto/w7H9nZtoP26HF9AmQu6Rv23aT9fI3PdqH35rvah7wn7832dTvtnaL8B
/Clpfxb0i9BbQk8DfQDjf40xfULbX7jes+G/DH8b+NPC3x3+E/Dfhv+h8qPf
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
/C9cm9Wf4C3Yjd1be/dZzkccW5H651C/T9lJmyu8tfWX+27DX4TycfrnuZ4j
ucfz9UVmm7sdf+0njehnD1F/nnbK6myXUvcofvM7/3B929PXfN3YvbV3f0l/
83Tjc3gP+g/4C3Wjp6mfbadu2I0dX/u9fqIV9I9V8w2u1IpNXlu8Y1pT+w3n
m5fyx65X8LZnPP9jPEvT/gK/Bb+nSjAl50APOx9AD6uzUn876t/Xq78J/c/N
+Yeo86Y2VvgLKPPDnx96Rf0/HPutyDlXaMWHpO9oHt8JyltybGnKp+pvGY6+
+FF/vuFH9R9zbGptwRy7yWfL+TZUp6pmrjiP833enznjZ65vGfgbDEe+/Ff/
Cm0uo/9fof+Cvhz6Ytcq5696dGp16X31+cM/mf5epb9V6O9P6EtbmTucQ96H
3h/+4/CX8x7VowOp+xzkM1S/o/6l+sc4Nm49Oo26zMH6ROBfDP/Cvsxp99Ti
Q9F3crsyOvxz4Z8H/1uO3Ux5Oa5nI3VS7Uft2C+1MX7Sn7nunHbK3q/joDdX
h6D9KdXMvRfA/6o/c/Dm3J/T1Xn7YlM8y7r0t6oyGvWfdL3WV+K3oz1M+Zg6
S2i759j+1N1U+4JzG/WOhr8h9OJ98Zdri3yrk7Va21aNc23UiO1rAdb7Q5Wd
qX8J/Bm5Ny/oJ9V+AX8azneF7wJ11ubYbBz7jb6Wh95sOPa7Z5zPKM/hWk39
bzn/RVzft+rWXF+V9je2Imsoc2iEcr7TRiBeQ3vPU85B8CbQB07/h5d5Fz+C
Pq4eDILYA+fHZVrBRImFmp06y7aCqRKPMgf0KrQ/pEz5Pe1P0IdCzwX9AfRJ
9WAWxCq4Xmgvmoff3dDb9QVPoI9T3+as0HWxUN3YEB6lzp6UZ+5EH9iVsa9M
+eAyY9FnsVwrGCvtu3P2BW+wlxgsbQV+/53gDyzrY9iCe7VFN3YH7Q3aF+bn
9yDlXaiznL5o9XX492uD7wTv4NjeFuOgvRl6Fui3tBlSd4ZO5PmdG1n/XA+1
XbomK6+43mqb/6C3/rl+7Qv9PvRntN2oG4yBNsN9KC/dif1tb/pbohUM3Qfq
X5xzeXj7035mym9SZ0HoBTqxZU7HsQkZ/wh9qI3gs2yv/iluQZv5XPBWc473
e+Ya76HvidqpK6ZrLvqasxNfwTSuuZRn054FPbUyDeV5O7FNTqs8oW+8GzuC
9oP34M3SjZ60Sc8esRC/J7zX1L+yHhuXtq3t1cHq8Vnqq9ymJ28pzx3iWsex
Nv21OsHGjd8X+U557lDoz6vBB/1nE6K8IfwPtdVqr6unv98Y36/tYBfGhL8r
vH+hL+HeravtXLyjmEr4k+gfpjxZJ77XyVzj69EZ1RXXpb9J4E3cia12Uvg3
1aOzqasd0rOXzamPBnrzvtgWL6bOlv2xMYpPVUdUN1yrp18o32p7/YJjN9H3
JdCHF/lGD4K/LWNelDbPq2PD3x56cegR0FNBT9kJdnFyZRTK28FfTPtuNfKg
8tQBRWTOkcX3dYI9mqAv/lR9xy9XI5P82wg+Rd/AFPqfupH3tVk9o8wu1qEb
O5T2p5+gf2wH+zEG/c1EedNu9Ej1x6Oht4a+D/rZavB42gDU/Veh/uva2eGf
U8/9fVM8BL9b6W80ZUbaf9eOr2t05VPKi/JbDfo++tigHl/HgZR/hb8QvAXb
sSXfW43vYwK/yyI+kB041+H68Km7H+M4kvKpjGFX+G+oI0Gfpr0K+k3H38p6
oW/jrWq+Tb/Rz10j6GMJ6L2hP4OeAXrqbuwR2lyn74t/YjN+4/YF46T/buNa
rk0Mzl+N4C3O0FY1FNvMuPwWqMZG47vqOyuuSDyR35rf3L3cq1e1s4v94LdR
kW/Muc057i74L/qtMb4zxIUU0WnEDh1Uj6w3FccO074Nf0d9WdU8W5+x+vl7
9fgG2vrzqvER6Asd5ndgEZ+otqyR+B1ZxKZ1CP0dX8Y3/xJtVtcfBT233+ZA
3mXf6QPVL7gPk3CuiduxLd9aje1qTH7zV2PD2kcsj/Zg+E9xbPlWMLlicV1j
Vm4E0yOW51T638371Y7t80nqH6o9pwx2wHf8QHgH+I5CPw29pOsHY/p6OHP6
wdDHlZG1X7S+8lcturw6/eS0nawdbOttHBub69tNDKg6Mvzd68FcKeuLYV+L
umu2Y9t9uDf+jak/CX0eUs36pT9bHIs+vU1of57PqBrMpviHB4fzbJQJ964H
Q6duIWZJ2+UN+tD7Y8MUr6uNTNlfHWA+zj1vO76Ze6qxZ4rxU1ZRZvmc8W/S
DcbvUI6tat12bO0PQb8K/xV+axdZI9eHt1472J5HnPPqwdyItZlN+5T2IX4r
F1njnQucE07W1lyPfVYMjtibBfqydrqGfkwfU/bFX71NLWuNGGn9Y1vWMjeL
+VEWUCYQtyted+VW9IfxON+R9Pky/JeUgYvMwcr/6iP6ao+AnpqxTKV/Cfr2
anzzk/FbvBof/WTd2JM/0sZM/9vW4+u1bzGFyvPqD2KlDq9Gnld+GttvqRq7
o/5w74X2xyNcf+lvSa7hNfg/iF+AXgr69WrmIuck4yVehX6Ud3sJxnex64U+
2G70bX1E4mG9XjFXYq3UmT7S31mPb+Aj5NlRlZHo62jXg4HIzc/XUlZ+3qoV
faNOX+9U4q9dhTobKutzzlFov5LPx/VQjOtw8CauZVNWonc8VwtP/cNvw+9/
ooF8I6NrC6fO2UUwymKVr2f8I2qht2hFPh+uRKeaj+Nd+t+hL3O6trlOI/EI
2ug2aEWfFrv8eiX2c3Wb7Ss553qt6NdiK19TP6SvleFvYJnrOZLzX8H5HxrO
HK/vZ5g6G/fFB7Q7/MuUkWuZY7ZuB0/1MnXuof0r/F+AtktVQh+o/taKr0zM
g7a1+2j7WH9sbPvS/nKfWS1zjLa9q5wf6rHxie9ZYjj2vJf6YycXf6Tsor1c
W9r9+qb7Y1PT1jxYj+6uzXlf5W9+o1eis4uP0Kaq7dD+93d+5DeGurP6EOe/
kvM/PJw1bS14a/KrVuKjER+gbrEb5dkGgu0Xz6QsrDyoLUCbwGrQRT22LvEg
9YHYc1aDfoIxFraF/rse29reHPq7P3rV47WU1a92V55tBWv5SSWxKbOoc/Ql
RkUswW/Q01aDKdhVe1sr2GsxFuJx1qLPLSi3B2IbE68hnlB9Uiz3nPp0+oLp
1jagjWA56D+HEzsymzpJX2JI1uHY09pAxN/SvkFfKzgXFzn2D3WXVXYuco3a
etXHZq/H5rtgGXn7tnrWsH7xxNCbaOevJA6ihLdFX9YMbddjcY4ZB2LD1nY9
HvQsA7Fha6tTXvFZqG9PNRz8nbrSDPQ3N/yW8mRf5rDrmE+u7WSu2Yz7tU4r
9pg+6Ff5bdOKvUes9Lv8fmW81zK+Neh3M+iraXtVJ1jpTWg/YHyCOq7fC8cK
xvK0NrYiGNKlOf+f9cwV7/i8xQ5Sfz3qbEv9JvWfo3xyEQz6G9RdcDi2Em0s
2louof7r9dB1bVf0MVUlmLYRyqZlfEXnMp7fGPsjzu+V2LC0/fxnA6Lt5fol
jC/h2P6esxJb5nKN4Ee1aYqHOBjeGdpfOfYX57vf9YN6F0Ifrt2N8sWUN+V6
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
M3OUc5P2/2oz+aTF/opBuL0Z/+Ae9H299uRm8DK7Ql9XDT5an7i+8GP7g3e/
D3pO6KPEOJTBv1t+n+tZuAye2rof+L40g7daUV8A/V3fDL5vA/F60Jc3gxdb
pT/4l2ub0ReN/TDGxtwS5pjQ/y8OQHuN8a3GSonBvLoZ/Xat/uBZtN8YD6vu
55yh7K4Mv5W6vbq6snI7WIQPXc+bWT8OhL6pGtldGX5j6k9L/bubmc+N5TGm
x3w7B3WCTbygnnzpWzTj6+5qHyqTb0gsnjl8tL980AkeX1z+DbXkpxG/II5B
e4w5ss3nfUc9+FHjHw6Hfm8w8RD30v8clRzT33JJO7FQBztHNIN/2tv+q7G3
Ga9pLLtz0sXN4AWX6w/e4cEy+SyM2RVz+GSZfEhiyc0ZZH4qY8qMJTNnqPmr
zFlirhJzmM7XTP5dc0mdXkl+emPijIUzZ/4CzeivewwFY2k+LGPkjI0zZ6n6
jDah0+B9UAtW0/yx5o4Qs7lqPTF9xvKZh3CfMvOpttv1hxJvY44U850YEzdP
M/lt9c3b59zN5PcVS2gOevOjGZNoLKI51/WnbtBM7rrze/4DbVDa6t5lPDc0
g6fb2LlMf0gz+K6d+hNTZu4Nc3CIjxAn8XiZ/D/GUo6vzFUm34+xyGJUR+0G
720OAWOGbqG/j8vEuhnzdnMz+puxaca86T8RMyweeGz1tU7sW2Jr96T9afDf
7yR+zDgyczWbn1bfvzmbb2wGv7cZ/Cu1iZTJV2XM97g9fcycLOZbOb2e/OpH
doKNuw56RJlvzm9NjKTYB/Uhn/VBPXuFOVXMl3K4ftla8qGLPTdu3FhV44m3
rCRm9dRm8K1zUv9MzjFbO5gTsSZiWFZpRH/zXRGXq33QHNvmu95LP1MzNhNt
JfpLzV2jPVds/+b16KfmlDH/y5H12AfNkW0+7P2gh7rRAZT9jWEZaiYfubGz
ynSDzeQ/F+ulzKU9aNZ2xmau7B97+u01Q4mJ0B5m/gpjhZSBfi+TL1pfvxj0
P8vs72CsrnPOH2Xyu5sr0nviu2AMgLFXvhM/lcl/ZW48ZfKfy+ynIDbeOcjY
K22q2lKNwep0swa79m5cBJshRkNZ2zgIbXHKR8ri2uR+KZNPVyy+mILhZvaj
EKskRqLWTD5+sWDqbM4N5rwRy+wcYayOGCixR2KQ3ihjT91iKDY9Y5eM7x2z
SAzTS2XyuYkNEwP8Wpl8WWKTtEG+UiZ/nFgrbZTvlPmm/JbEfH9QZr8CsWbT
8nu/zH4G5qYRk+peBfp7xa7vUE/+YOUdsRC1RuYP93cQO2fclLZ3bfDGQpsL
wFyN5uw1fsc4no/K7G8gllMbivkRjK/w2/d7+aRM/n+xnebsMTbXeFtz9xmj
e24zOSSMjRbP5rdmjjix6X5zFzaDz166P/i605vBi8+j7wf6/GZyaBgLLX7u
mzL5tsTCabP/ukz+MnOriXE9sxn8+/z9yTdhfuSLO8HyLM/1/1DGfr7VUHQQ
ZSVzGIs9VWb6rsx+HuY+U2cyX/Q5nWAfFmwk9sv4PPO7GwNmrkzzGxpL/V1v
/rmpmWdzXS361Splcj2JIXX985q8FnPuObc4x4ibfqOXD8p74r1wDnL98R56
78zJ53x6djO5Jcyp5v4g5qDRd+yeLcYLv9fIXhQLF3mfzQmkL909Vpw7zSGk
7c45VHmovxVfuTn8jS9+t5G9MBbq6VODrfi+zVmvfGROHW2H7rnhfO49916b
w01bhzmMtOVp89CXPk4rvmx96uq/xtwba68NbhrfhXaw/8YAaAv6Q/vCQGxC
37SDnxssU2eGbvLZaO/9vJ69XrT7af+7kdPO2E0+G+2jv8CfuZucDuJJjLXQ
t6uNT9ueMcDGK7/dSK46c3Qan2GOIHMDmTN65HbwzN5T1yRlG2Uccwmab19/
0j/UuWggPl3n2pObiSd0znV+NMeRsV7aAJ1PRmkF6+AeH86v5kTSVuseE08M
x75rroJDiugjYjjFbp4xlPx1nzVimzEn6LTd5Mswtm71emzx2qy0VZnPUP1F
zKhYUfd4UP9QXzummj0g1C8OhT66mj0s1hwOfsxcO2K0XGvO6b1/rjkfdXJP
vZfGq6h/nNF7/u5Boz5zWjPfrnvgmNvKnCf6F8xx5fpizipt0e55Yb5/c74Y
/2nO/avL5IQxXtM9D9Q/1DdPrmZPEPUJc0yYW8I9MtRXzGFh7gr3EPkHutJK
LJwxccZbmnPXXLvTFNE/zEFhPKd7cBg7YU4Rc4kYQ3Gj8kAz8ZnmRFf/OKn3
PM/m/q8/nPhec0GIuTNfw5uN5Mo0Z6j6ySnNrOXuaeP+C+aQMXeMewyZL+KN
RnIhmkP2R3hXtRN7Zwye693PypDV5HzUHmSOEHODuEePttDhTvay0SZa6wTv
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
rrz/f55xf4g=
            "]], Polygon3DBox[CompressedData["
1:eJwl1nuQz1UYx/HD2rUXq11C5X5JrBVJLpGmRMnUumxW1KCGVVNSjZQipns0
JiSXVUwhK0yTUSqlxlBtqTQIu+teWApRZK1eZ35/PLPneZ/P53nO+X7P73y3
+QOPDRpXPYQwQySLwZkhVGaFMCk9hFczQjgH3lM7hHxxyXxIC+G0mCNfXCuE
F6ABqSG0pZ/J1zA7hBy+StG8ZgiNLwvhAP4RTXu+GprVoynEOqeE8C7dAd65
8iZ4N/kl0Yb3PvUvx/aZP46dp/8IO6r3eCxDvVrVQqhP8wh/d/NL6I6b+8E+
0vCfjT/X+3a6LGvZT7dafg3vRWyC/JJ4jW4X72Y1npNX530bK8V+xFbqe0Df
QiyZN5m3RI9Uup+wz9Tsi6VjV9AlJ4XQinc7vle9P7Ay82m8i7DhdFX4K7zT
6YIeddTajg+g+4qm3Fw5zX7eHVgS7wL8TvvoJwrYPsG20L1Bs8Aan8PuommN
PYCNEim8KXT/imZ6LFazk+dbnf52ve/xtza+k+eY/LS15GO1sF+xo9gprA+W
gn2BHcIOYQ3Uqi826rtf/bF4Pz2n0tbFmlnLn3hbvqexAn3r+juR7u/4XOw3
3/paqtlKzIrPCZ/Kd7c47Lycjs+A7m66ZjTNxfvyv/BgXE0soZuLncAu6lcV
nxU2BzuOXZBXivnYEflE/CB7BXY8nkvrexnfaU97rW2Zmk3jmRQPyw/StPRO
h8unW/9ka1sYzyn9Uex59c6od5LulEiKZ0iMotknb8T7Es0x7G/5GTHdWpKw
dHuuMm5Au03dkzS7MhPnqaF1NBKnsN2ZiXPcWN4kvl9slrVM4XmHt4O1NLaP
OXhrz7kK6yySsGnYNvNl8qJYE5uNXU13EesoJqh/Fd7GeLUYTp8u34r30/cL
fX7hvcA3TPzubphGNxTLp7mITTF+Lf5WzVU6oxfEes+l3H6H4xn2Wo/2t3gf
ZCT2/Wj8zejTUL5SDNY3S15gb2eMK7A98ffJu1sUGL+rXkN1a9Ll0Z2gOxJ/
q+bGqXcl3lT+ocg3V0jTArtfXtP4Zvs+Zm1/WPMBa5mm3ghr6RLPBZ5HNwWb
Fc8m3+M8d/Bk+DsuvneatnFv+vXgz7OWdeYW8Bep81Q8k3iuvKk1p3n/t/KV
xd+DnkPwC57R6/G+02cC7zX6PCnPNh6oV2t5L9411nCC7wlzV8pb8u6R35iR
uGfKrON3Nfdiz6o1VP8qNdbh2TQjsHFqPIW1UXMCVsd4sB77aK5X703zk+n6
x7Me70j8OnUKsBJ1U7E00Vi/MfLRdCtoikUFXQndeXtup34fa9yg3im6SXTt
5c3xe+OdgS0wt5RvmfiH5zveF+M3iK40/pZo+sf7T91m1lYPT9K3O/9uvJpa
k+hKvNc92Gw1/lTrL1Gf7kGaAvxsrC+GGY/GPtXjLN9DaubxFuOdeOfRzBdH
jTdby2S6ZXouFWOtdRjWwdzQePbEWXl1sd3cNs9xaWbi/plHs0KfYH3P6PO9
Hrv1mIkfoauvx2rjHN6OvKVYGrY43n3xjsQO8a3Fuql3P7ZVvd565sSaap2U
r6erS3OYv4NxW7piNSbLc+mepWtgPMr7nc87L34H6PLpcugW8haJQ3p8i53E
RtpDA94a8e4Tfa29J9/V8ezHb6q+K9XogbXCxmMV2AdYEbZQtFdnSNybuuX6
r1FzufES/EPag/K6vHvlG1MT37lSLAPbhm1ITdwzl8lHeg7trWGRPrviXYwt
jMyegto34TX0/Ae73nzneC/pdTbew1g7ea44gWXJs0Uhz1g9vlIiiy65dsLT
Dt+B18FqYpVYLrYT+xXL1rtMrS9TE9+g/9QaJMr9fqfE+8pcB8/zWjFA7bWe
wWfYIPlA8Z3xeuxrdTPVGsGba29F8f+D+D2jaSHWmu+uxzosxTr+pbvBuEt6
Yk2b7PvtzMR3bTq2jDZHvoP3FrWejt8U6zscvxXx/wO6SVh5/FbRbeFfbjwj
PXFHjdFjtDhHkypKeb+heSsz8Z18nW4p/T71MtWrNN+abhW2gmY7bbHxfLr3
6M/RjceH2Nsq6+mKF6u/QnQ0vo+3K93l8vO03bDu6Ynf9rl4XvRI5buXrlCv
LvIbxEaadfGZ8m6I780z/BT7WO9udL1pbhObsV7YEO+gh7yn+JynJ7bJXIWe
efF8eG+v6POfmv8DIX19kw==
            "]]},
          Annotation[#, "Charting`Private`Tag$51984#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0UsopXEcxvH/MacwY8FuXDbMxkaMbGanlEtZYWHjTlmNKcRILKamU3JN
2bCQ3JLY2LimyEqpM0exsWFhBpvZ2Cifd/H0fZ7v+zu9p3MKO/savsdCCONS
mBHC2acQyrNCOMdXu+ljCGN6I/7OCWEpM4R2/YrrwLjdhb/sTlyxhzBlD2O2
PeFzI3qC+4mb3BTe2tNY5XkBN6tPcjO4Y6/inb2GtW6KuQ19jlvHPbuHP9Tv
uSOs4E5wwT7GA7vXTVJ/5P5gJXeNi3Yq+s6en3J/9RfuH9bbz7hsP+GWmwsu
Zv+XNGm2t/l49B3lg1xyn6PfTnKl2951k69vSZ4kuVJ8k7Lot/X8B1eu78pX
ubGro/f4L2qid7kZ5er0PamVO3uQb9HT3bViIvp/cF/a5MEedtOv57gZwHnu
i14iRfJN3gGaf0gV
        "]], Line3DBox[CompressedData["
1:eJwV0TkoxmEAx/FHenkdC7MjYrBYHINNmRyLUAzKnYUMlFyLRcngpZQYpORl
YLEwOAoLpeRcLAwGR1ks8vkPv76/4xn+/+cp6h5uHkoJIcxQcTyE86wQKrJD
uMBfuS3TxrfiekYIvXgj92FMHsCOnBBmdf38pm4C7+RJzJHn7dP8nG4Kk7pF
fJYTWGfP1y3zC7ol3JO38UW+sSf5Mt0uJnQ7eCAf46r9VXfCV+nOcEU+xSN5
0H7Pv+sesFb3hGvyY/TN9lPdB/+p+8Qm+Rs35Cv7F3+pi8k/lEbtchw77VuY
Tte6vOjuKD+6J3nfXsjvUgHd6irwjyqpxT6iq+b3qYqe5HpM9Ra39obo7nRN
eECN9CJ3Rf9tjzvXzc9Fb4SH1ENv8rh9lM91ZgyXdaV8OZVQDf0DgLFKUw==

        "]], 
       Line3DBox[{8, 2030, 460, 1504, 4180, 23, 1714, 473, 3400, 1517, 38, 
        1727, 486, 3413, 1530, 53, 1740, 4219, 499, 1543, 68, 1753, 4232, 512,
         1556, 83, 3143, 1766, 525, 1569, 98, 3158, 1779, 538, 1582, 4193, 
        113, 1792, 551, 1595, 4206, 128, 1805, 564, 3426, 1608, 143, 1818, 
        577, 3439, 1621, 158, 1831, 4245, 590, 1634, 173, 1844, 4258, 603, 
        1647, 188, 3177, 1857, 616, 1660, 203, 3191, 1877, 629, 2016, 218}], 
       Line3DBox[{1703, 1702, 2302, 1000, 4487, 2464, 1036, 2314, 4489, 1038, 
        2470, 1075, 2326, 4493, 1077, 2476, 1114, 4422, 2338, 1116, 2482, 
        1153, 4425, 2350, 1155, 2488, 4454, 1192, 2362, 1194, 2494, 4459, 
        1231, 2374, 1233, 4521, 2500, 1270, 2386, 1272, 4524, 2506, 1309, 
        2398, 4526, 1311, 2512, 1348, 2410, 4531, 1350, 2518, 1387, 4438, 
        2422, 1389, 2524, 1426, 4441, 2434, 1428, 2530, 4470, 1465, 2446, 
        1467, 2536, 4475, 1494, 2458, 2003, 2076}], Line3DBox[CompressedData["
1:eJwV0TkoxnEcx/GfQblyTGbJubCYXKPd48ygjK7HZiAlZyksFmdKiWJwFIMs
DK6nZGB5iscgZbE4B17P8On9eX++/39Pz/MUdEUb+1NCCCNSnBbCTWYIVVkh
xPCPt2eEMKq34XReCOvpIfTpd7Z+zOQD2OE2aYvqm7ZxfOATmM9n3af0Gdsk
7tiWMM6XscG90Laqz9tWcJ/vYYLvYwU/xAV+gMf8Ale9+2K71Ktt17jIr/CU
97o/6m+2p+Rn2Z5xjSdw2/3c9qm/274wwn9wg8fcv/UrWzb/kBzp5HlJum9h
rtzaivBXiqWHH7iX6rtSIve2Ggx+51psdR+01Se/p9RJnEcw1TNNOMZb8Eia
5Zl345l3MzzTo88l/xs8kV555cPuQ3q+Z4ZxyVauV0qZVMs/7zlK2g==
        "]], Line3DBox[CompressedData["
1:eJwV0TsohnEcxfE/g1zeBYsMipTcymUi5VJKWEiRS4lJuYSEJPcQhcViYLFY
LC5ZmExCicFiQUlZpBQGn3c4nXN+3/P01PNk9gw1D8aEEGZoKD6ENSqIhBCh
zQS3pBCS5EF+mRxCH75KZ3p9YgiLNm1ynM0D3ir34st0JNfYTNhUy914jF2V
3IUv0aFcbtNvc4zn6X+US634Ah3IJTaNeLddqv5NKdSEz9G+fBt93q7F5o9/
uv3yBnyGZvE9tyy3OptX/qG/8Fp8AJ/mO27pbhU2N/xNv+a7eCU+RdvR97sV
2ZzyZ/0OP5HL8EnackvUs232eCf+5LYrl+LjtK7H6mk2G/iq/Oi2wgvxsei3
1H/wCjzCR7B7t2Geg4/SvH6Ff+KBOrBbt3aegQ/TtP6OfckXcrF/cc7z+T+k
G0N5
        "]], Line3DBox[CompressedData["
1:eJwV0T8oxHEcxvGvkv8lf8qg/MmgLGcQBnVlYbormZRCuShxSUhCQpJSElks
UhYGC4OROmUQxeAWi8VAJGXh9Ruenuf5vJ+7ru/VD030jOeEEBYpXRDCJsVK
Qqik3cIQZotDqJBneKYshDF8gy71ZJFsk5ILbR7xYTmFr9O53GWzYJOUB/Fc
u4Q8gK/RmRy3mbS5wNv1P2qjPnyFTqJuk8RTdvX6L9VRL75Mx/IdHrPrsynS
v6PfRQl8Kdrhh3qjTcLmi3/on7wbT+ML/MCt1q3TJsvf9Gd+hHfi87TvVuXW
anPNX/UH/EruwOdox61Ub7I55f34i9tJ9Dl8lrb0fL3GZhvfk7Nuu7wZn47e
O3oTPI6X8yXsyW0x+m58ilb1W/wHz6NR7N5thDfgk9Eb6O/Yr3wjt/gvMrya
/wMIvEQv
        "]], 
       Line3DBox[{2047, 1882, 2455, 1487, 4553, 2157, 983, 2443, 1454, 4546, 
        2151, 970, 2431, 4541, 1415, 2145, 957, 2419, 4537, 1376, 2139, 944, 
        4432, 2407, 1337, 2133, 931, 4427, 2395, 1298, 2127, 4468, 918, 2383, 
        1259, 2121, 4465, 905, 2371, 1220, 4518, 2115, 892, 2359, 1181, 4508, 
        2109, 879, 2347, 4503, 1142, 2103, 866, 2335, 4499, 1103, 2097, 853, 
        4416, 2323, 1064, 2091, 840, 4411, 2311, 1025, 2084, 4451, 826, 2299, 
        1692, 1931}], Line3DBox[CompressedData["
1:eJwV0L8rBHAcxvGPGHBHyQ1EJJQ6KZHhuBJSfi1XipIiGZSjbvIHWBQxSBYx
2GxKYsAi2202myxnw4TyMjw9z+f9Xr5925Y3cvmyiFiVvcqI+0REQzJi1/6S
UlXEuyzXRbS6F6ojjnQZlsE+9Kd0YQXuRNe4s9y3/pEebIc71/t4I1burpB+
7Exf6EOuk0u4k5LBjrFr+9Lu5ertlAy7T7mifWNnuSa7WfL4OPZmP+gJrt3u
kAI3jf3aT3qWm8TS7m7JYSl/UNRL3AzX9/9OmcPS3LO+wtf5QXxIFrER7kXf
clvcKD4mK9gdNs+/2tvcFD4ta+5HbpMr2Qdcjf9vkVoZkD/qozHE
        "]], Line3DBox[CompressedData["
1:eJwV0D0oBHAcxvEfRV4PwynK2+BKeSk5p+RKQqkzUIqSUizqLmVSlJLF4GWy
icFmU5KJRbbbbDZZsLG5fAxPz/P7fv/Tv2u1MJcvi4h1Oa6KeKiNaKmLOLJ/
5LM6Yqcp4kt3updrIs50uftbdrkf3YNtcec64c7iv7okA9ghd6VP8Faswl0p
aexSD+HXdoqrdydk1H33/4a7sQe5pLtZxt0XeNG+t7Ncm90uBXwae7cf9QzX
be/hKZ3DSvpZL3B99j7Xr+expD8o6lVuFk/jw7KI9XIv+hbP82N4VlawCS6D
v9rb3CQ+JWvuJW6Ee7MPuBw+KxvuJ3yT/7BPuQb/3yGNkpE/6kMxFw==
        "]], 
       Line3DBox[{233, 1922, 232, 3449, 639, 258, 3463, 653, 272, 3480, 667, 
        3481, 286, 681, 3505, 300, 695, 3519, 314, 709, 3533, 328, 3547, 723, 
        342, 3561, 737, 356, 3575, 751, 370, 3592, 765, 3593, 384, 779, 3617, 
        398, 793, 3631, 412, 807, 3645, 429, 1986, 432}], 
       Line3DBox[CompressedData["
1:eJwV0CFIQ2EYheFvbXMGByoKhk1QFBbUIPcWcbCgps1gWhoDh2GCWEwqYrO5
INgsYppNMNg0iM0mGGzGCQYFg8/Cyznfey6M/aXm7mYnExEtdLMRz/mIqeGI
c/0P/VzEF1qFiBn3zlDEpcxyPzjkf2WZO7ZdyVF3hQ93BkvchbyRXb5oz7pz
SLievJVlfkQvYMX9JJd9f6cntgn3JKrua/5df9CrtqJewh6/wX3rj7Jmm9NP
+HlZ4/L+44ts2Ba4U9ui3OKmba+ybavzCZ+iwaW2N3nP79tX+Qqag9+xfcgj
fo1bR9u9zae+/9TPbDW+js7grfkDe3/wPrYx7z6LcST4B9BNL08=
        "]], 
       Line3DBox[{247, 1936, 246, 3456, 646, 265, 3470, 660, 279, 3494, 674, 
        3495, 293, 688, 3512, 307, 702, 3526, 321, 716, 3540, 335, 3554, 730, 
        349, 3568, 744, 363, 3582, 758, 377, 3606, 772, 3607, 391, 786, 3624, 
        405, 800, 3638, 419, 814, 3652, 443, 2000, 446}], 
       Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/G3LH6VLBSLm0wu8QcoMdluMRBFsrlSGPwBSgwo5TJwFNPd
goFTl5MBy910FgzyY8Bo5HHDu+fr+fxM329iOp2ar4uIWffTENHdEpFw3/Z2
Y8QXLjRHLLdFvPIJ+11btd+wqI9rT3wEX7QV+xkL3oa1Kk/io5a2U3rV7tUq
vKNGntdneNlu1x7swH79Xhvjd/jXFHFrf2KftxttlJfwQyvaWb1iX2mDvIBl
Pqdf8Ev7XBuwzzBT69opP8K81mPncMfboZbjG3iiddlD+rG9Xmt8CQ/4mt7K
9+1FLWtPYVLPaPV8Fye1vdr/wC3+6zZdp/9/7btL7h/arD+B
        "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/G3zfkxGIyGi2K5JBPm+wPuSiaLUg4xWWyYjYRcBpRY3C0Y
/KgrP/JrYToRBrEhNuXxHd49n6/n57q6Sw9N5idqImLYfddGtDdEdLgvvpyK
+MTpetcU8WYX+Ic2z9+xoo9oz3YeX7UZ/oJH3nJa1e7DB22K9+tV3qvd220J
7bJesO94q3bLG7Fbv9EG7Wts0C74b11El7czLWef4o9W4Vv6Ez/RsvYxPtqj
+qF9zg+0Hr6PxeR7tD27hGUtkzguedvVSvYK7mhpntW3k/8pafYcbtjNfB1n
7U0+jp0+W9RS9iqOaWt8ADPeFrU/t+Ba/P+XfuOV+wfDnkCG
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz0kyQ1EchfG/mUqhWIIF2IEFiCbNi+iqTMKYYhBtRDQR2Yet6Pu+nbMF
Jn5vcOqc+303r3L7K4vJQkdEzMpgV8RxT8SJVLsjhvRSZ0SuN+LUPpMV/Nu5
0hdRdz9vn+MXssrV8Ky9zRW4S/tK1rhh3cCL+LWdZCLW8RF7B0/wX2n6xg22
wY3qXa6El92/dd7Ex/QePo7f2fdSw3N62X8u4w/2o2zheT3nu/t+M8E9OT9L
nftxnuea3KT9gr+mb+AK+gCfwt/sdxlwt8EV7RY3zX2k9/DP9C1cog+5Ge5P
WtxX+haupNvckfwDCFw5Sw==
        "]], Line3DBox[CompressedData["
1:eJwVz0kyw2EYxOHXVqE4gguwp2yIeVgoY0wR81DcgI0p5lwCSYxLZ+AMiXk6
hSeLrv519/v/KqlPbw5uVEREilqqIh5rIy74TnXEUE3EMD3VRbTKRXxp28V/
7pr0I7o2ucSvbHt4Sz8qj1FCfuE52z4ex0lqx6+86J0G9wfyhDxJHXiuMiLv
mwye0k1TJ066fcMF26E8g1PUhd/5tf4Iz+I0Pbvvlj/wje24/DZu1s/zHvmT
39pO8LZ+QV6kXvmL39lO8RJepj78zUt+e6P7M3lFXqV+/MMz+nvfnctr8joN
lP+j/hc/2LJy3hsFytE/NdM5Ow==
        "]], Line3DBox[CompressedData["
1:eJwVzMkug2EYhuHXzgLhEJwHxRGgZjZirzXP49a0EBEREWkaESkLsxoOSKlp
i7j+xZNnuN/vqx/KpjMVETFIqaqIYm3EBd+ujhiuiWioiyjZWvUX/RLbkV9t
jVjG1qaX+BW2K79hKSxra09u+TW2J4/Io5RO7viauxtsXx/Tx6lD/vHHOnaL
HegT9knqlH+xDewOO9Sn7NPUJZf5vf1InpGb3JXdd+vvehHLybNyMzbHe/QP
/oDlkzv3Ldi8rVf/5I/YsbwgL1Kf/MXzlREn8pK8TP3yN9/0/smbU31FX6UB
+c/fW9gzVtDP9HMq0D9ruEAt
        "]], Line3DBox[CompressedData["
1:eJwVy1cuxGEYRvH3b7QLdQlWMol6bwcsgCt11BUoQ0RERERExApI9N5Htw69
jZ+LJyffOe9X09re3JZERIulyyLWqyKecLU84hGbqiNSNsyXVkY8cCvaPTby
JdyQVox33LJ2iw1aETeoFeINt6RdY8p7gC/ACXc5blG7woTr1wKz2iW3oF1g
viKi7/8fP27n3Lx2hr9aRvvBU+85/gTr3SXWq31rx9ysdoR1fFiP9qUdcjPa
Adbyn1y39oH73LS2h+/eXfwbjrnb5aa0HXzlOrUXHNW2uUltC5+5Di1vI9om
l9U2MMet2R+cdUE6
        "]], Line3DBox[CompressedData["
1:eJwVz7dNg1EYRuEPiQKMjW1MzuzAAC6hpQYhMQDsQM4dYQowOQl2QJQk2+Qc
JuChuDr3Pefql/6ekbGB0YqIGHbyyYizTMQvnqQifnAnEbHMdacjvu1j/gv7
sxFd3JLWiZ/ckbbOl7kObhHb8UM71N6xzV7gW7FQFXHAv/Et9jzfjGu+8crt
ay/YxM1pQ3yj+zO3pz1hgz2r1eOjvcs/YM4+935Gq3O///8X7Q77+EpnWstq
ZW5bW+VKXIabwjSWtC2tiLX2JJ/CIvZ6X9ButSQ3wdXgCn/DbWrXmODGtUG+
2v2K29Au8YI/df4AgMA66g==
        "]], Line3DBox[CompressedData["
1:eJwV0Ek2Q1EYReFfgxYLQ4i6riXqIpGEhCAzYC2ajEc5EiRR6yrm47uNvc65
Z9/3UmROL+sXbRFxglpnRLMnooWvroh6d8Qx7nsjDrhD/QifXE2ep13uc9WU
+ODu7BV9D1WuLHfxzpVkERV7Qe4g6/4bl9e303Pcpry1b8lXbkOup/dwP/ZV
fQ0v3IpcRpnLySU827NyETful7h5fQEtbk6e2TtQ5GacZ9Hkrm3T+lT6ftyE
nESDG5djKNhH5Gj6DPefuGF9CHluUF7Z2/HIDTj3p9/Hfdsyeh8euD//9y8a
+AcXxyva
        "]], Line3DBox[CompressedData["
1:eJwNzDsyg1EcxuG/mghjLMCOjIYZCfIFKYzEraFghgQREnFNjQINe2AR7nc9
VuAp3vnO+T0n6UtKA8W2iMhZf0fETVfErd2lIlY7I6a7I2r6sDaYjhiye/bj
XmTbLOOc0bP2wH7dS2yHZZ0TPW+PbM1/1vURvaCdeNduT6zMGmyUpbRTm/Lm
mVXYLhtjaf3MSuyFrbMmy7F5bcFe9Q19xrs9lrBFfcne2CabZfssz5b1FXtn
f+5z7ICNO5f1in2wqt8d6hN6VTv3rsc+2RY7YpOszi70hu8Xq7FjVmC9+qU1
2Te71lrsyvcfFyw8Uw==
        "]], Line3DBox[CompressedData["
1:eJwV0Fkug3EYRvHXlSFFKzZgRdIRralStFU1JIYEiSFBDIkd4AL7kHBhHtvt
+Lk4OXmf87/5vqGZpUyzIyLKmEhEPCQjHtHujbjoj2ikIgYxrp25z9HSTnnB
fsIl7YiP8asN2Os4dBe1fT7Aj7bHuxiz7/Cddyl8a9vuLYxqG3xr3+QvbZ3X
MKIl7TdYdX9qK7yMgrbITXzYG1zzrg95reau412rctWeQE6bdc/hTeuxzaPi
zmrTXMarNsWTyNhLfO1dN1604v93Ia0V+MrehWct785hWOu0XSLrftLa/ncL
9/gDZQg1IQ==
        "]], Line3DBox[CompressedData["
1:eJwNyzc2hFEcxuG/Xmz0dsBWLMA5VOIMZhbAaMWJJkdZwyZoWAGtnGcDnuI9
9/t+z70Tc8npxEBEzNrMYMTNaMStPQ1FbA9HPPjeGIuYd2ZHInL2zPr+U3rZ
mwXfeb1gL2xT3/G2whZZUS/ZK9vVq/qSfqiVbdL9N7bHamyZjWsXVuHvbJ/V
2Qq706t6zT7YAWuwBKtrDfvUs/qjlnE/6WzqLftiOZbWm96tsrbesW+2ped5
i62xrt6zH1bQ2/q6fqQd25T7v6zIOizFTvRL/dT5x0qsy9LsXj/Tz63PrrUe
u3L+AzMCRCg=
        "]], Line3DBox[CompressedData["
1:eJwV0DlWAlEYROGf3DEydgu6C82MlRYcI92E7MF5noUGBdyDke5BdyDzpB9B
na66970+DfP5/ZW9TETkJJmI+JiJ+PVsTEYcTkUcyedsxKr9Mo1zTb3h3BJ+
zK/ZRa7JtfQD/AQ/laxd4lpcWz/DziXRU/zbexac79gX+KWs63NYSdrude0r
/FpyehYvu9vhevYNfit5vYJ38b5+h93Ll/Mb9ivX4wb6A76MP3pu2m9cnxvq
BfwJf5Ytu8oNuNH4P8CKsq3X8B/fv+j83/h34qns6HUuxYfuBVaWiuxyCf7O
j7gMVvOOulTlH2e4R94=
        "]], Line3DBox[CompressedData["
1:eJwVz0dSQgEQRdEGERER0bIstZy4HxOuQJ2ZwLguJQifjGnifkwjPX9wq/vd
1/XD9kn9sJaJiGMclSI+KhF/ZrYc0cDOcsQnd7oY0V1yZOb4L25X17SfcYku
Y+blb92ermU/53q6rFmQ23jChdznH9zN2ItcB11cyuv8I3L2Epegh5q8wTcw
ay9zfQxQlweemTcr8hD77n58zxU31M2ZK/wIB7qxec2NdAVzVf51X9VN7Dfc
WDdvrslTPONWnvBNd8X0e7kXvOJOnupaugX7JveGd9ynmW+jZN9K/9n7EnTw
D5H/NGc=
        "]], Line3DBox[CompressedData["
1:eJwVzFdOQlEURuFtjDFG4YKIiNcLYh8PtmcdgA7F3sdhfbMXsGvicPx4+LNy
1to5jdX15lpXRKx0NhDRLkTM5SKyfMQsLhcj6nbC/yYRM1yqTeMS/8Mda984
xVW1SVzUvrgj7RMnuIrWwA/vQ/4dr9yNc2Wtjm/cgfaKl1qNK2kZtrl9rcZf
2BhX1FJsaXvaC456J3wVF9xltqs9ayNcTqvgfOcP29GetGGuXytjk3/ktrUH
HOL6tBLee2/xd3jubpDr1Yp4y21qN3imFbgeLcFrbkNL+VPLc91aDv/4lv0D
j3ktVA==
        "]], Line3DBox[CompressedData["
1:eJwVzEkyg1EYRuHPTJV+A4g+iT6InjUoA0bIAtiQvt+DZgeMlL4Lkmj34Mng
1rnvOf9/E7m1udWKiFhyctURl/URszUR6dqIGZyvijjm/uoipu0UP4WLDRG/
3JH2g5NcUjvnS9w3d4hfOKF1aeP4aR/wJcxXRnTyY3zR3ucLeOaNUa5Dy+IH
t6et8O/uI1y7Noxv9q6WxyG7jc/gq33l+x3txX2Qa9UGcIFvdra1Z62fa9FO
uSL3xG3hI/ZpCa0XH+xN/h4LmC2/o/Vod9wGd4snfDfXpKXxhlvXlvlr9xTX
qCXL//EXzj/ZuDgW
        "]], Line3DBox[CompressedData["
1:eJwVzjVSg2EURuEbLEiI4J4JdXAL22AHuCc0sD20BwooYA+4+0Nx5tz/Pd9M
UliozJUTETGPnVTEWTbiHLPpiDwP4CQXUdH63P0oab28Z+/hstbF3ZjRju2d
7g5sa23cjmmtlVuwZc9y7v+3vJ/SMu40NrUUH9mbeVJr4kZsaJf2encDJrQk
12Fdq+FajNuruQqH3q9p4U5gTPvNROzaB7Gqffv+wah2YPtyf2JFe+cPjGhv
/Ipl+zO/oOT9sPbkfsSS9sD79gKGtHvfd1jULmw37lsUtWv/6Qqn+AMZFi+S

        "]], Line3DBox[CompressedData["
1:eJwVz1cyw3EYheHPPYYdiPSiC5GQSBP1xg5YABMtRNmduirP7+KdM+e83/xL
5vr28mYmIq7wMRtxvhBxgdF8xJl8W4yo4Z070U9xxB3LV/so3XDDtGPIVe1T
DNIN15N9DLiuPMTU3pF/7iroc239AC9cS/7a92WPa8o9PHNl+w8aepfblTuY
cNuynt5h30rPclfCE7ehb6LDradn2Yt45Fb1NbS5gm2CFf2Bq8pa+jauIsu4
t5fkt7t8+k6uqBdwx+Xllz2HFpfTsxhzWdsnlvUml5FL6V/mIv4BKNslEQ==

        "]]}}},
    VertexNormals->CompressedData["
1:eJztfXd8VsXyfpSmSK8iJQlFBMEQEQhFDihCkBJERJEoEES6ggWUJlFEOno1
IEVEisCVptIRFo10jCBVMKElgQRCkOLVKPC9N/vkzed9fk7M0ZefUef8ET7M
Zz/77nn2mZ3Z2dkzgRHPtu9xo5+f34Gifn65/vvv6IAhE5qW2d54VMS1/z6p
jp99Rs7fuXrD8EcTnLM1YsbnPXTKQO4XvqXj8B07z5peTWretD3piEfeedS0
e/qZ486/Wp+4Z+bsZE8/CwfsmtX67QNOVJs8M/t/n+Jpn2vD15Hml1Qz6PLz
I97/dqZHfvXTZQNjj551DnV9K7LTlCOefmJOvtWpY93jjex/z3vaF1uR3t5E
erf3y2P7dwIvePc/1Y7HTKPxdLTjN1O8x+/3sH1fZwy97zqLjzlC+AS0TPgf
nhsJT8VZcVacFWfFWXFWnBVnxVlxVpwVZ8VZcVacFWfFWXFWnHMQziXy7u88
9vFUZ0f9N1Pnv7vd8179B71y+8FjW0x0ow+GlhyW6ulHmhep/d1x77w05bHT
5uSWccfDv4x3fkv+wR3tTc9bUp2me789NuCWr81vyfdv2pNv8YRjZldKqc+6
dT/zm/KLzqYBn2/9xpxJnG3Cp55zfkv+cuVpd1UcnuQUmlxvSspjJ81vybtb
uamRTfkh+7vOee/fHSnJL9j3ctbSe0nyuRY3U5xwk+S17Lw4p7znZaQkj3sx
fd6dHTTvkryI5Zup1sCLb6LcV7x1yze3/HHLB7fz63a+3OKveCqeiqfiqXgq
noqn4ql4Kp6Kp+KpeCqeOQFPqb0Uj5Lwl/qX5kXqR5ovqR9pHqV+pPmV+pHm
XepH4oPUj8QTqR+JP1I/Eq+kfiS+Sf1IPJT6keJObvms8Wr7uI1XK26Km+Km
uCluipviprgpboqb4qa4KW6Km+L218VN46j20bi04ql4Kp6Kp+KpeCqeiqfi
qXgqnoqn4ql4/nPwDH3lzJwmRc85hTaWLjbp1H5P+/a7pxU+kOukebhQz/Aj
nyV55LdP79szsFC0uXDb0SdWz8vMSykTuGXN95GnnKGlD42rvirB035c/viE
xfedMV2mJFZ55ItjHnne+Y3rvhN5xLl77MB6e+LPesY/J/hq3nypR5ydJ4oH
vr7jrKf9lnVxt5X+JNU8W+i2OcNmfu6Rh1YNK7vkaLKzuH346E5djnv6GT7+
m2X+l1Y54dvqlbnhaCYOhxfUfDE4/Jz5/qMVX7xbf59n/HWaN+7zxolUZ0S9
XStu/GSlp58nW14M7F1kj6ledNbx5w6e8/RToO2muZ+0SjBb1ueaOvnEKcXz
D+KpuCluipviprgpboqb4qa4KW6Km+KmuPkWt7J23+qs9t63jqxi2zt3U3v0
byp69+93xI7HSfAez8i+49LHb7rS+NvZ9zUfeL+v3w6Lj7OjoDc+ERZPc5jw
DLD4mzu98febZefLcWi+qtj5Nc/Q/DaxfHDOe/NhZLDlj9OP+NPe8s3EbvDm
m8RDCU+Jn27xl/jsdr4k/rudX0lf3PJB0i+3/JH00S3fJP11y09J393yWVof
3PJfWk/c6ou0/rjVL2m9cquPqqe2vepp1u1VT61c9dQ+qqf2UT3Nur3qKfBX
PU1/VE/to3pq5aqn9lE9tY/qadbtVU+Bv+pp+qN6ah/VUytXPbWP6ql9VE+z
bq96CvxVT9Mf1VP7qJ5aueqpfVRP7aN6mnV71VPgr3qa/qie2kf11MpVT+2j
emof1dOs26ueAn/V0/RH9dQ+qqdWntP0VMqX9pX+utVTt/roVu/c6pdbPXKr
L271wi3/3fLcLZ/d8lbioXTfXL8DaR/9fqbiprgpboqb4qa4KW6Km+KmuClu
ipvi9lfEzVdxJ1/Fo3wVp/JV/MpXcS1fxbt8FQfzVXzMV3EzX8XTfBVn81X8
zVdxOY3X2UftiOKmuCluipviprgpboqb4qa4KW6K298DNynuJMWpJJyluJOE
vxRfkuZFiiNJ8yXFi6R5lOJC0vxK8R9p3qU4j8QHKZ4j8USK20j8keIzEq+k
OIzEN7f1NQJaJkxoWmb7xlER1/77ZPJB22v77LQfHTDkf+0bU/uR0rok1RWS
1iWp3pC0Lkl1iKR1SapPJK1LUt0iaV2S6hlJ65JU50hal6T6R9K6JNVFktYl
qV6StC5JdZSkdUmqryTxTaq7JPFQsqdu+az9aD//5H6k9lL9OOmcVFr/pfNQ
af2Xzj2l9V8635TWf+kcU1r/pfNKaf2XziWl9V86f5TWf+mcUVr/pfNEaf2X
zg2l9V86H5TWf8kPkc4H3dbjk3ir+1z7+Cq/QvH8fXhK/Jf47NYP1/od9nFr
71Ru5VrfxI7f7b3IF6bOKFK2f7JT7c3JodG3nMhcfz5a+XP+zidN6qSQW98Y
mtnP6/WrxvdPOGa+TKtdMK3GGc/4OwGftwmfV0/lbxz6fqrT+ZFbcj01M9oj
r1d4WFzDp1PNpG5LWxdZts0jfyOqwJzYa0nO0uCz/jELTnjktWJiIsLW7HP8
S/j1/qp55vyOuPW+oPIjk02rr6ubr1KP+/y9fDVOHY+OR8ej49Hx6HiyM56u
1q45g8iujbP21Czs4G1Ptb22z8nt22Hf9wj5pZJ8jf+FqFbFj5qTO96Mifwp
U78k+dkKST1SU/aaYvNaVPy4V6YeSfJfrNwplF25/V1nD/2uJHf7Xj4bv45T
x6nj1HHqOHWcOs6/7Div9/glua/2QQF2X2Mq0r5mmt0HmSjaB91l901Oswjv
fZOv9lPz7Did5TTOy/9Ofy8n72Tv9/qXxcFcmeyNg+Kj+Cg+io/io/goPoqP
4qP4KD6Kj+Kj+OQEfHz1XjoeHY+OR8ej49Hx/JPHI+U5XO98BimPwm3ego5f
x6/j1/Hr+HX8On4d/z9t/FIehXRfye09Jkku5VdI95UkuYS/23nxVV6KW9yu
N85u5RKvXPPNZV6N23lXnmQtV578PrnyxLdy5Yl9lCdZy5Un9lGeZC1XnthH
eZK1XHliH+VJ1nLliX2UJ1nLlSf2UZ5kLVee2Ed5krVceWIf5UnWcuWJfZQn
WcuVJ/bxFU+u9/xe7/nyFc5u31cav/6u/q7+rv6u/u7f43f/Kn5aTrPLaq/1
d/V39Xf1d/+Zv/tn5Yv66n19lXcq4eYr/8FX9vqv7s/kNP8kp+nj9f5dt/yR
5svtOKXxCHVnXMulejeS/EPUFUr5Y3WF/BahrtAUquOTG3WFBmevrpCfVFeo
OOoKvXqd6gp1QF2hsX+wrpCEpzRfivPvw1n15e8xj4qnb/H8ontAXOys06Z0
hZk3HB4Q72lfrt6l7rMO7HRqzlny3emGme3ztosdt+7YcSf6pbh8rcYle9q/
1WNp/fn/Pmemt3vwSrPQbzzyLiGTF02YmehMjwrptWxeoqef0HHRdTsu2uUs
2Va57pWgVE/7Es2jVl3afc7pkTjx9pLOHk/7DS/VbBj7wOfmmYAFC4uuzGw/
Y0m+MeOfSTJFjhz6rFS/k572TkLNlnGDUp2+Fb9bMa79Vk97/1dufHfl0jgT
1CAmuU7JzHpV05P8OwTsOGBKvbli7c2nUjz9GPDtAOHZBnybR/jXBt+W0Hwl
gG9jhTp6yT958yEZfKvejfjzvz9Nfvx/+FYZfAshvuUF325J8e4/HHybR+MZ
Ar6NoPE/Bb41p/edA76dJ3wK+c2b+Gt8Ww6+1SS+PV/X8q0e8a0c+LaC+DYW
fNtHfGsGvq0ivi0B3xYQ3wqAb4uIbx3Bt4HEt0/Bt4uHvfnWDHy7GOjNt+9H
WL41Ir4lgW/5iG+SntZAPbhFVC/vJtSDq0f14GqjHtxmqgd3AvXgvqD6fc3g
l64kv3Q76r4VpbqBr6Du2z6q+3Z5nq37VpfqvkWh7lsbqvsWjLpv3ajuW2XU
d3uB/O3HUN9tLdV3S7mv9JJiG844E6t2HVkh6ajnd4e2Cm47u8QCp3jlNUUW
/ydzHps8urrzsDdSzJ7i2+sfWXjI075SdJM7/dJSnTcLTwoLnzrXIy/jb/d9
+cmfT5w36snxrU+apvPq7H5tdJKn/TvTNocMnJjiXDxcebcz4ZCn/a1FTm3/
MTTeDFv65Oxoc9ojD31ofbvYtZ+YCg8+d6hgcua8V+r7wPzO4xKdT6et77hz
VaKn/a5WU2O7Vj1rXlw84L29feM88ovPPxS5+qlvnRb7F8x7u0umXleqNqdj
VFKqqdzraN/Us59k8h/1WJ+n+q3lIK/vXafV76KtG2u2U93YZNQX3kjytqgj
HE11hItBfvNWb/lHqCO89BvvurfTIN9K9XDXoY5wLNXV/R7y9SRv3cTWEY6j
OsJTUF84jeSTUUf4wiTvusBPQ34H1QsOQx3h5iR/CfLCJB+KOsJX6Xdr2XE6
J0he+HNbR3gRvddB1BfeQfKZqCM8k3BbCvkrhHNh1BEuSPPSCvItNI/hdt6d
zTTv3VFfeDfJS6Ne8BTiVT7IY4iH26DXxe/w1uvyls9OWh9vPm9va/W9KOn7
jBfS9cJUIr14AutAC1oHArAObC3uvQ4ssnrn/Eh6F2z11HxIelp9vl0fCtH6
sOjhdH13biV9X4x141VaN26y64YzltaNlMJ2PZlN8vdsP2YH9XNbB7vO8O/6
23E6pWmcrbD+jKf3Wob1J45w8Le4mfAS3rh1sjg7HQnnjnZenGCal8Pt0ufR
FKF5rIB1LJjm/TPLE9OAeNIEdnMq2c2TodZu3kt2Mxh2c3qIt91Mgt18h+zm
PbCbu8huot6u05vs5nzYTa7PuwF2836ym+NhN7n+rwO7+RDZzZKwmyPJbnaF
3ZxEdvMS9OtlsptXHrR6VILwbwR9SRTsZlIh73mvBruZj+zmd7CbLYlvb4H/
eY5487YC7OZg4nlsO8vnAOJzefB2HfF2N3jbg3hbLMDGS3dSHC8e9vRB4mdl
8HB/T7Wnak/VnmbI1Z7a5+9qT6W4qMbl7OM2Lqe4KW6KW87HrST8t51kZ5+B
n/Yl2eXa8Mfiyb5/AL+rKfkP++Ff7SJ/4xL8qLPktwyBv8T+T3f4RTVIfgh+
0Xnq5yL8nHX0u/Pgz5SgcdaC33KK3isO/skOwqEI/JBq5Iconv9/8HSLs1v8
3c6L2/lyO49u59ftvLvlg1ueuOWPW1655ZtbHqq+/7550fVT8VQ8FU/FU/H8
O+Gp/mfW86v+p33U//x985vT9F3xVDxzAp4413DupnONibivkUrnvJ/iHCqG
zl8q4hxqJZ3XTG1vz5vK0blPGZwrcX4X8sHMZTo/yoNzoup0ToTzMvNZMe9z
nzCc+4yjc5+osF8/39mJc5yb6BwnzOYDOGcoH+A+yIM2esu74P5LS8orGDO9
b8/AQtHm3G1Hn1g9LxOHLdOs/AeSV7F5C86zlLdQCPLRJI+0+Q+mP+U/vA15
O5IftnkUzr2URxE038rvIPkmm4/hfEn5GKMh30vyaJvXYVZRXsc2yMuTvJHN
D3E2UX5IB8hnkPzq+G+W+V9a5YRvq1fmhqOZ8+gHeReSH7N5KWYn5aXsg7zs
Ym/53Ta/xalM+S11IT9T11ve1OaXmlqUJzMC8qokD4TenaM8w2+R9/tLee+8
3x+QZx5Ieb+boY+TSB+Tw2w+8H7KB84PPf2K9HQG8oTbUZ7wfps34nDeyCjk
Dw+i/OF7oNc9SK+3j7V5xSsor/h16HtDymM5YvNenFak74HIQy5MechNXrZ5
yL0pDxn5NqZ8Ee/1YQTyk0MoHx55O84xWjfqIm85TyXvvOWxbex6UozWk8eR
P+9P+cxSfouUZyLlk0h5I1J+iJQHIuV7SHkaUj6GlHdRDjy/s683zzvCvlwj
+/Ih+HzDEm8+1wVv5xBvLwj5DLnBwwnEw9ng2yayL1VgX4oT31JwP7Eo5WVl
5Btsp3yDcPCH8zqCHrI8KUw8eRR2ZBPZl4aQP0r2ZQDsSyOyL7lmWDuSRHak
DexLGslrw450ITtyA+RTSD4YduQVsiPvQ34vyefAvjxIdiQC9qUcyeNhR9aT
HekO+RGSG9iRgoW97cguyFcX9JbXgB05RHYkAvLRJJ81wdqRx8mORIyz8q4k
PwU7Movsyw7Iw8i+1IId+YnsSwjk9ci+lIUdqUN2ZB7kFUleEXr3PtmXONiX
y2RfaoRY+1KB7Mt26OMIsi8nYV8Ok33JBT3dS3o6C/bFIfvSG/YlkPR3IuxL
f7IvDaDXXUmvF8G+rCL78ir0vTXZl92wL+1J3yvDvqQleNuXrrAvvQT7Moju
QQyCfWlK9iUE68NlWh/qwL7cSfblZsG+9IJ9KUv25R17X8YpTfdlDiCf7Tjl
r6bYezcO37t53f6uw7/b2I7TPEH3xdojn204vdf7FgenAOGQked2O/ntxS3O
Th/CuSjy2QJpvuYib20predfWD6YlcSHK8hbe4v4M8jyzYwivuW19sWUJX5O
t3x2wonPjZC3NoP4f7O9n2U2kb6sRz7bStKv3NbfM3eRPs7H9wqSyG4us3rt
BNF9sWDkuTWgPLcA5LP16e29PjyAe1JBtJ7UQ773eFqX9iPfuzCtb6lj09dJ
E0HrZAzyvQfT+twc+d4naJ1/0NoLU5HsxQLke9ciu3Mb8r2HkP06Ye2gc4ns
YGPkgXcje9oaeeBXyC5XtXrn1CB9qQe9SCO9eBX8r038jwLPnyaeNwFvNxBv
p4OfXYmf88HDYsTDFLs+m73EtzjwqhLvI8CfEsSficiDurFm9u519oO8Sjbv
e46EfEg274E+A/ns63Q/NG/639jPWH7N9mP2ZfPeKPK7nGk/ZO8+6T7IJ2bz
nmlNyJdn8/7pA5Bvzua91Gfx/ZCu9D2N7bAXLYj/K+FX3EH8uR96cZXue0bh
Hmsd4uHH0Be+N1oa91tXE58/t/dPnf6kR+Phb2wjvXgQfsVy0qOx+K7IGvrO
ybu4D7uQ9LGolZvlJJ+M76XkpX66Qn+n0e8WhL8xnfazb0Ovx9H4++K+7QB6
39tgX/j+71L4IT8SniMs/obvEWO+nAK0js3G+uDQ/Kbh3m4I8cHB/qUF7V8e
hnwPraudYXdqkN25gPtHDUjeB/ug+2jdhv9sKpCdQjzHhJK/PQL7ox/JLnyD
eN0Zkn8NexdE9i4R8gXk/+fFfupNskc1Ie9B8rdgN7uT3Wxj41rmSZLPwP7r
AbKDQyF/ieQNcA8rmvY7bbEvCyQ7uwb7uGYk3w073oDs+FbIH6D43kDs4w6S
fd8P+UaSB8MfSCR5FOQxJN+Bfd8xGs/nkCfTeHrBryhL77UX98sakzwc+8TJ
hFttyGNIvgz+SRXCfzLkj/F+WdhXPol9aGeSF4Of8xrxpwHkj5I8BvvQhsTb
eMiXE2+nw1/6D/E/xeqFk0xy+IfOcNI73BN0FpDehcLvepz0tyzkw0j+Dva5
lWkdqA55bZK3gP9WitafJyB/n9afjP3yR7RfrgN/rxqtbze3+vV7f7Gwgz+U
z54fJd1rw37QlKX9YMa9wnjaZ1XF/t2f1nPJH5Puxw2F/W1I/mrGvcU0urcY
L8QBMuIGkbSvkfw96f7dx/CTe5C9y4gnNCX7mBvxh29o/yX5jbHC/coJ8BOe
IXs9UIiHS/f7Mu5p5qL4w1IhXpER3+hG+1PpPmBl7Bc2Uj/SPdDXEA9pReOR
/F7pXuEH8GceJXwShXumleDnXKG4yh7EYdoR/pK/Ld1bXAh/6UbiQwXsx9cS
H8KFeI7kt0v3H09hn3WQ+P819vU9if+DhbhQRhzpDYojSfsC6X5lQbsOmABa
BzLiS1VpPamPeNQFWk+k/cUO+IEFyQ9MEO7/Pi3EqUoJcS1pnyLd98y4X3yc
7hdL9z0N9i8taTwBYb9+fxPfqzEJtH/pgnW4AeG2GutnCvnbOC9watN5wRLs
X/h7TUvx/cxydO4QjDjYzaQv0v5lKdafl/i8A/uXZbRunEZ8bC6tG52g77NJ
3yNwr7M06Tu+c+VMIX0Mgz6OIX0MwP7lE9KjxdCj06RHnbF/CSGeP4H42BWK
j70H3t5PvO2K+FgQ8fY1fE+yGe1/M+6Bdqd8ib7Yv1QnP6Q+9h2H6nj7P7uw
X7if/LH2gv+/J+P7QuTfVoI/nEz+8HD4t6XIj/0U/md58j8Lwm8cS35jb/iB
P5G/FwY/jb/z2Qz+VVXyu+oJflSGn+NP69IQ6FEjWidXCv5AgGAH54K3HYm3
GfbCj/iZsZ4fIh6WENbVncJ6qHEz+2jczD4aN7OPxs3sI8XN6iE+NpDWz3DI
59O+9VXYHc4v2oW4WROSD0HcrA6t2w1gp/qQncI5tSlV31ueB3GzK2QX2iEP
IZHkW2HvupO9Owf5yxR/+DHAxsdmkT1qhLjZIyS/NMbazR5kN88hbsZ5Yh8i
PhZMdnAA5GNJXh1xs+8ozhOJuFlJsrORiJs9xPEl2PF9BbztOPLlnJkUp2qL
+Ngxsu9pkK8ieSH4A6kkXw/5FpLjPM4MIb9iI+RNKb9iBvyKwvRe7yFu1ork
fRAfe5lwqwR5IsnXwT8pSviPgrw3yXMjbtaN5vca4madSJ4bfs5bxJ9QyENJ
vhnxsWeIt2chf414Gwh/6Rfifx+rF04CyeEfOttJ74Igf5H0rhP8rrakv/kh
H0Py9YiP+dM6kBvyEJI3gf/m0PrTA/Lnaf3ZetrmG9xL+QZ57rf5BvUp3wD7
NWcp7de6wz8sT+vhsy3tvqwk7cvOwW4epzhbLdjNKeRPBmG/VrWE935tN+Jm
pWg9fwr29HHyPytjH3e5gPc+LgZxsCSyIwcQBwuj/UvpIdb+RpA9WgD7m4/s
14U+Nq6VSPumDYhfdaP94ELY6/ZkN0uF2fhVJdqvjcY+MYTiQi0Rp/qM7HVb
xKna0T7RjLH2/UtqXxvxqJ7UfjDiUSPpdzfC7jdkf8OO31Sk8deAP7CO4ksf
I77Um/BZDj9he5g3zsiPdXYRzp8jXsT7jj3YLyTyOTv2rffQvHeFX9Hl13ll
Xi3ozavV2HeUJn6C584HxPPqiOfUIZ5/Bz/kJ9KXlYjbdKD9bxTiNoVIH/Gd
WMPfib0d++L4p731OsauD4bXhzTk20fQ+qDfXbGPfq9GcVPcFDfFTXFT3HJO
HZBy9jvJZhV9JzmtjZUfILnUzwn4PyvJ/7kH9Q6qZbPegfT9Uqn9GvxuC7rn
KLWvhfedz9+FxvsmZfN9T+N3P6D3LYv3vYveNz++R72V+q+J/PY7qb30vU2p
vobU/hDGc3M2+z8LHI7TOKsCt8Ukl8fZaOKvyaXvJFcQcDsFnOcQzvHA7SZq
H417AYHEh4v2vZzvaPwl0E9QDsF/P/C/TONsBPxnkFzCeS/e6xb63V+Awz7q
JwT8nEXy0gI+F4HzUJoXt+NJxHhO0e+2xngmkPw5nEd0pvMIKd6eYuNphu/P
zkXeVwrFryJwj+8XOm+Vzq/R3vmZ2k9EnPYJ+t0KiJudvk6/+yK+z3wn7X/L
2u+xO1zH5H7Ez5+kONtDwHkC4RyC/utT/2kYP9edHIV5qUj1DR/DePxoPNL3
z6XvnEvf616IcQbQOOvifXvS+7bB+75N71sN/TSifora78abXfS+r+F9W9L7
9sL7Xpnr/b5lbJzHNKNznxdwXv84jacK2qdSXGgEzq0O0u+ibqbhuplSfSv4
J6bfeW//pIj1Z5xJ5M9I9af2wQ/5kvovhvEPofdthHmJoHl5CucUkRRXb435
iqL3CsJ8NaT5yoP5iqH5kuoUSN/DvwPjP0j4S7gNw7xcpXmR8HTLn4KoX/AV
vZf0/flw8GE44SbNVxG8byTNF85BDJ+DZODzLeEj4SCNJ6fxszr4OZD4+Sxw
GEg41Ac/l9N7/Wzjk+YB4ue94KeheXwa/LxK8x6McU4jnAcB5zkdvXEeDl6l
EP5TwKsfqP8O4NVaGg/WScPrpFR3WKqb/Ge1Xws7FZ9N+RXcly9M/fuqH6m+
cCjOE5cSr6Q6yK/1q9VhQtBJc+D7VY91nJnZzxcYz3EaD/IczFryl0oGLOoR
PTDZ+e4/+zun5j7hkd/o/+t1jcvFxESErdlnKpXw6/1V80z5jKgCc2KvJZl/
BZ/1j1mQ2U9Q4WFxDZ9OdWpGLG1dZNk2j3xW/arx/ROOOSvSahdMq5E5zkv/
Xvlz/s4nnXyTQ259Y2jme709dUaRsv2TzdXJk0OjbznhkVe34zcbafzdLT7O
OcLnIeDfgfBvAfyX/0H8NwP/YwL+RsA/lsaf62+Kv9v61xL+Ul3v694/5v0g
vdetmMfDhMNVoT74Y7Aj7xDfgnEO3of4eR7rHn/H43bgH02/GwkcniMcrmKd
3E387IH5OkvvNRy4tSZ8XrR8cKq/6c2Hoh+l88ecn+TNn1cs38w24luI5acZ
3M2bn2Mtn52PiM81LP+dAOJ/JOblEI2/DOblIOHzKPCfQvjfDfz7Ev4XBfyr
AP/N1P9I4D+G8L9J8N/c4u8reyTxX+pH0gu3dlNqXw14biI8nwI+KYSPpNcZ
etSP5jFV8B+q4ne/EPSoH81jj98YT07XF2kdk/yrDD06RPhIfleGn/Mw4S/1
L63bGXZ5Gemp9Lu/tc4PzqYd/1Lwo3xlf33lD/jKjt/p0o5n2K+obK6fkv2q
6tJ+Xfub2q/rrY+S3+tWH5tDHz/2kT6+lE193AF9jKP+x0CPDpAelQA+xwif
PNCjgtm0g3+anyn0/2f1838BEEIQ
     "]], {}},
  Axes->True,
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{159.34781054647243`, 221.99444668763883`},
  ImageSizeRaw->Automatic,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-2.481879627960896, 33.897806163858824`}, {-2.999999999989929, 
   5.}, {-99.99998571428571, 99.99998571428571}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.1618739661604103, -0.6608181473678976, 3.314681914632045},
  ViewVertical->{-0.12532699360176175`, 0.987429394212187, 
   0.09631373796347777}]], "Output",
 CellChangeTimes->{{3.813608123774126*^9, 3.813608277981925*^9}},
 CellLabel->
  "Out[884]=",ExpressionUUID->"3c09910d-faac-446e-9a7e-0f9806c40519"]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Trochoid curve", Typeset`opts$$ = {
   AppearanceElements -> {"Pods"}, IncludePods -> 
    "AlternateNamesPod:PlaneCurve", 
    PodStates -> {"PlotPod:PlaneCurve__Fewer examples"}, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}}, 
   Typeset`elements$$ = {"Pods"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Alternate names", "scanner" -> "Data", "id" -> 
     "AlternateNamesPod:PlaneCurve", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Entity[\"PlaneCurve\", \"Trochoid\"][EntityProperty[\"PlaneCurve\", \
\"AlternateNames\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"\"curtate trochoid\"", 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               "\"prolate trochoid\""}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www5a.wolframalpha.com/sources/\
PlaneCurveSourceInformationNotes.html", "text" -> "Plane curve"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "PlaneCurve", "timedout" -> "", "timedoutpods" -> "", "timing" -> "0.387",
     "parsetiming" -> "0.17400000000000002", "parsetimedout" -> "false", 
    "recalculate" -> "", "id" -> 
    "MSP353416a0dgfdda6h004d00001332e3ga3ceb860b", "host" -> 
    "https://www5a.wolframalpha.com", "server" -> "48", "related" -> 
    "https://www5a.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa353516a0dgfdda6h004d00006a88aace5cfgiha03371779614356333042", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2020, 11, 6, 13, 26, 1.3805515`7.892627598601939}, "Line" -> 2,
     "SessionID" -> 20457053795916895145}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Trochoid curve"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1069., {15.92857142857143, 21.07142857142857}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Text",
 CellChangeTimes->{{3.8136291613865433`*^9, 
  3.81362916695026*^9}},ExpressionUUID->"37125360-2825-40b6-b46e-\
bc9a8d05cd9a"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Trochoid curve", Typeset`opts$$ = {
   AppearanceElements -> {"Pods"}, IncludePods -> "EquationsPod:PlaneCurve", 
    PodStates -> {"PlotPod:PlaneCurve__Fewer examples"}, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}}, 
   Typeset`elements$$ = {"Pods"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Equations", "scanner" -> "Data", "id" -> 
     "EquationsPod:PlaneCurve", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> "Parametric equations"}, {
       XMLElement["microsources", {}, {"\n    ", 
         XMLElement["microsource", {}, {"PlaneCurve"}], "\n   "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"PlaneCurve\", \"Trochoid\"], \
EntityProperty[\"PlaneCurve\", \"ParametricEquations\"], \
\"EntityAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 RowBox[{
                   RowBox[{"x", "(", "t", ")"}], "\[LongEqual]", 
                   StyleBox[
                    RowBox[{
                    RowBox[{"a", " ", "t"}], "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"sin", "(", "t", ")"}]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}]}]}, {
                 RowBox[{
                   RowBox[{"y", "(", "t", ")"}], "\[LongEqual]", 
                   StyleBox[
                    RowBox[{"a", "-", 
                    RowBox[{"b", " ", 
                    RowBox[{"cos", "(", "t", ")"}]}]}], {
                    GrayLevel[0], LinebreakAdjustments -> {1, 100, 1, 0, 100},
                     LineIndent -> 0}]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{"\[LongEqual]"}}, 
                 "Rows" -> {{"\[LongEqual]"}}}, AllowScriptLevelChange -> 
               False, DefaultBaseStyle -> "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{1}}}], "Column"], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["definitions", {"count" -> "2"}, {
       XMLElement[
       "definition", {"word" -> "a", "desc" -> "circle radius"}, {}], 
       XMLElement[
       "definition", {
        "word" -> "b", "desc" -> "point offset from circle center"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www5a.wolframalpha.com/sources/\
PlaneCurveSourceInformationNotes.html", "text" -> "Plane curve"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "1", "datatypes" -> 
    "PlaneCurve", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.553",
     "parsetiming" -> "1.249", "parsetimedout" -> "false", "recalculate" -> 
    "", "id" -> "MSP19751d6e1af1agfhgh2h0000231633f778d09id1", "host" -> 
    "https://www5a.wolframalpha.com", "server" -> "37", "related" -> 
    "https://www5a.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa19761d6e1af1agfhgh2h00004a96ah2b2gfda3b18387766898303528674", "version" -> 
    "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2020, 11, 6, 13, 25, 59.1725346`9.5246950005078}, "Line" -> 1, 
    "SessionID" -> 20457053795916895145}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Trochoid curve"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1069., {30.42857142857143, 35.57142857142857}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Text",
 CellChangeTimes->{{3.8136291591895437`*^9, 
  3.8136291760613112`*^9}},ExpressionUUID->"a348762a-3f7a-4fef-8a9e-\
a76f866bc6d7"],

Cell[CellGroupData[{

Cell["\:859b\:5b9a\:8c14\:76f8\:5e72\:6001", "Subsubsection",
 CellChangeTimes->{{3.813629238802483*^9, 
  3.8136292423464937`*^9}},ExpressionUUID->"be9182db-0123-46b1-8f00-\
edf73f0ee3ca"],

Cell["\:6ee1\:8db3\:859b\:5b9a\:8c14\:65b9\:7a0b\:7684\:76f8\:5e72\:6001", \
"Text",
 CellChangeTimes->{{3.8136336943074913`*^9, 
  3.8136336999675083`*^9}},ExpressionUUID->"6bd84011-b2db-460d-9610-\
a3cecee12b08"],

Cell[CellGroupData[{

Cell["Gaussian bracket", "WolframAlphaLong",
 CellChangeTimes->{{3.8136337557494235`*^9, 3.813633771839493*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"0d66cd8e-ab86-4577-8d90-8ee151e37986"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Gaussian bracket", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NormalDistribution[\[Mu], \[Sigma]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"normal distribution\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}]}}, 
                    GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949]}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {"Columns" -> {2, 2}, "Rows" -> {{1}}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"mean\"", {
                    GrayLevel[0.6]}], "\[Mu]"}, {
                    StyleBox["\"standard deviation\"", {
                    GrayLevel[0.6]}], 
                    TemplateBox[{"  ", "\"  \"", "\[Sigma]", 
                    StyleBox[
                    
                    RowBox[{
                    "\"(\"", "\[NoBreak]", "\"positive\"", "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowWithSeparators"]}}, 
                    GridBoxBackground -> {
                    "Columns" -> {None, None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 
                    Automatic], 
                    $CellContext`TagBoxWrapper["Separator" -> " | "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              $CellContext`TagBoxWrapper["Separator" -> " | "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Statistical properties", "scanner" -> "Statistics", 
     "id" -> "StatisticalProperties", "position" -> "200", "error" -> "false",
      "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "\"mean\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\[Mu]"}, {
                 TagBox[
                  PaneBox[
                  "\"mode\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\[Mu]"}, {
                 TagBox[
                  PaneBox[
                  "\"standard deviation\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\[Sigma]"}, {
                 TagBox[
                  PaneBox[
                  "\"variance\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  SuperscriptBox["\[Sigma]", "2"], Identity]}, {
                 TagBox[
                  PaneBox[
                  "\"skewness\"", 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "0"}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata,numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "More", "input" -> "StatisticalProperties__More"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Probability density function (PDF)", "scanner" -> 
     "Statistics", "id" -> "ProbabilityDensityFunction (PDF)", "position" -> 
     "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"PDF[NormalDistribution[\[Mu], \[Sigma]], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FractionBox[
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"-", 
                 RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"], "/", 
                   RowBox[{"(", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]}]], 
              RowBox[{
                SqrtBox[
                 RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], Identity], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Plots of PDF for typical parameters", "scanner" -> 
     "Statistics", "id" -> "PlotOfPDFForTypicalParameters", "position" -> 
     "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[{1/(E^(x^2/2) Sqrt[2 Pi]), 0.892062/E^(2.5 x^2), \
0.178412/E^(0.1 (-1 + x)^2)}, {x, -5.7, 7.7}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               FormBox[
                StyleBox[
                 
                 DynamicModuleBox[{
                  CalculateUtilities`GraphicsUtilities`Private`max5416$$ = 
                   0.5, CalculateUtilities`GraphicsUtilities`Private`min5415$$\
 = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                   Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                   Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                   Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                   Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min5415$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max5416$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                   Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = 
                   False, Typeset`skipInitDone$$ = False, 
                   CalculateUtilities`GraphicsUtilities`Private`more$1404617$$\
 = False, CalculateUtilities`GraphicsUtilities`Private`min5415$1404622$$ = 0, 
                   CalculateUtilities`GraphicsUtilities`Private`max5416$\
1404623$$ = 0}, 
                  DynamicBox[
                   Manipulate`ManipulateBoxes[
                   2, TraditionalForm, 
                    "Variables" :> {
                    CalculateUtilities`GraphicsUtilities`Private`max5416$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min5415$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                    "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1404617$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min5415$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min5415$\
1404622$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max5416$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max5416$\
1404623$$, 0]}, "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$1404598[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][{
                    E^(Rational[-1, 2] $CellContext`x^2) (2 Pi)^
                    Rational[-1, 2], 0.8920620580763857 
                    E^((-2.5000000000000004`) $CellContext`x^2), 
                    0.17841241161527713` 
                    E^((-0.09999999999999999) (-1 + $CellContext`x)^2)}, \
{$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min5415$$], 
                    (
                    Piecewise[{{
                    1. + 7.171371656006362 Tan[1.5040801783846716` #], # < 
                    0}}, 1. + 
                    7.171371656006362 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min5415$$], \
-5.70820393249937], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min5415$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max5416$$]], 
                    (
                    Piecewise[{{
                    1. + 7.171371656006362 Tan[1.5040801783846716` #], # < 
                    0}}, 1. + 7.171371656006362 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min5415$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max5416$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min5415$$ + 
                    0.013416407864998741`, 
                    CalculateUtilities`GraphicsUtilities`Private`max5416$$]], 
                    7.70820393249937]}, Axes -> None, BaseStyle -> 
                    AbsoluteThickness[1], Exclusions -> None, Filling -> 
                    Bottom, FillingStyle -> Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], Frame -> True, FrameLabel -> None, 
                    FrameStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], FrameTicks -> Automatic, ImageSize -> 
                    220., PlotRange -> All, PlotRangePadding -> {{0, 0}, {0, 
                    Scaled[0.1]}}, PerformanceGoal -> "Quality"]], 
                    "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min5415$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max5416$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                    "Options" :> {
                    ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                    "DefaultOptions" :> {}], SingleEvaluation -> True], 
                  Initialization :> ({
                    ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, $CellContext`UnitNumberForm, 
                    NumberForm] -> (#& )], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$1404598]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1404598[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[CalculateUtilities`GraphicsUtilities`Private`\
neareststyle === "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1404598[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                    ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbikw3t/+\
ARKf0QaFb0iMboxJA0pSvveWOImFawfb2QZ/Hnx2kzRrVymmAzSlH071pXl899xz13t6LIKk3+\
v11HVjPggWJ1t4emLMSMxyUfB4/\
yyXRCkqeHINn90xJiR6jzD4QWLnu2nMeyFnoN35Db4PLCoYaPJVU0Y1JWp6ICHPaKRqz1jSE/\
OTKRMRMPqTPNsZbg9fb79yMBjLGLQmkquXbSHzTIIiSQ+BbhjzjgH/5o6Py+\
OngrGQfC8Ij4h6aLwTCbGBERwY5uN969Vm6h4mpoHHIONLp8nKc9T2AqUl5emEzHJ842KydtoCg0yV\
4+Z+yc06Bbnwb+EDEdqYnMcmbc+WQL8wrhh952X1z7kb4PltW3gpTlcTh/\
ntMuQNND0hapnO563r5BiputZGP+fqsubLRoO8eMrU/\
0tHVOnlMF60DYPMjk2NV2tvGX7YFl7k2PVzcT8w5rNzlICrhkMluI8iLtg8imbKAyfR9umq3Dgcxt2\
K7xCdPhWscAITZ9kvtj8eVeD1phBi7aYbkA6vZ0BAcmJcseV2j6ZUjzKQEBng+\
XX9sskmog7F4872tac8pmaAOULWLU9oDpOFuoOOsi9/VNxKLueaDHk/5JqkRK4V/\
W2sjzTk8ngiPCMJ8YKmXr05rJIag/SW/aAECXPgFCHpL/Ox39zDxUogVQcS1SUdiwNbmjP/\
JPplgY8IT3XW3LE9R5d322I2gTitVRfQJFmcNptjut9kunFDc6D7kuBbEv+\
B3m0K3abwVzeFpT24WxO6NaFbE7o1oVsT/t81wUaM/0q/AY9MuD4="]]}; 
                   Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                  Deinitialization :> None, 
                  UntrackedVariables :> {Typeset`size$$}, 
                  SynchronousInitialization -> True, 
                  UnsavedVariables :> {Typeset`initDone$$}, 
                  UndoTrackedVariables :> {
                   Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
                 Deployed -> True, StripOnInput -> False], TraditionalForm], 
               Manipulate`InterpretManipulate[1]], 
              TagBox[
               GridBox[{{
                  GraphicsBox[{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   StyleBox[
                    RowBox[{
                    RowBox[{"\[Mu]", "\[LongEqual]", "0"}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    RowBox[{"\[Sigma]", "\[LongEqual]", "1"}]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                  GraphicsBox[{
                    RGBColor[0.6, 0.24, 0.4428931686004542], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   StyleBox[
                    RowBox[{
                    RowBox[{"\[Mu]", "\[LongEqual]", "0"}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    
                    RowBox[{
                    "\[Sigma]", "\[LongEqual]", "0.4472135954999579`"}]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                  GraphicsBox[{
                    RGBColor[0.6, 0.5470136627990908, 0.24], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   StyleBox[
                    RowBox[{
                    RowBox[{"\[Mu]", "\[LongEqual]", "1"}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    
                    RowBox[{
                    "\[Sigma]", "\[LongEqual]", "2.23606797749979`"}]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.3}}, "Rows" -> {{0.3}}}],
                "Grid"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Right", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Cumulative distribution function (CDF)", "scanner" -> 
     "Statistics", "id" -> "FormulaForCDF", "position" -> "500", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"CDF[NormalDistribution[\[Mu], \[Sigma]], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               RowBox[{"P", " ", 
                 RowBox[{"(", 
                   TagBox[
                    RowBox[{"X", "\[LessEqual]", "x"}], HoldForm], ")"}]}], 
               "\[LongEqual]", 
               StyleBox[
                RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"erfc", "(", 
                    FractionBox[
                    RowBox[{"\[Mu]", "-", "x"}], 
                    RowBox[{
                    SqrtBox["2"], " ", "\[Sigma]"}]], ")"}]}], 
                GrayLevel[0], StripOnInput -> False]}], {
              GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
              LineIndent -> 0}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "erfc(x) is the complementary error function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/Erfc.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/GammaBetaErf/Erfc", "text" -> 
           "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/Erfc.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], Typeset`pod6$$ = 
   XMLElement[
   "pod", {"title" -> "Plots of CDF for typical parameters", "scanner" -> 
     "Statistics", "id" -> "PlotsOfCDFForTypicalParameters", "position" -> 
     "600", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Plot[{Erfc[-(x/Sqrt[2])]/2, Erfc[-1.58114 x]/2, Erfc[0.316228 (1 - \
x)]/2}, {x, -5.7, 7.7}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              TagBox[
               FormBox[
                StyleBox[
                 
                 DynamicModuleBox[{
                  CalculateUtilities`GraphicsUtilities`Private`max1888$$ = 
                   0.5, CalculateUtilities`GraphicsUtilities`Private`min1887$$\
 = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False, 
                   Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
                   Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, 
                   Typeset`animvar$$ = 1, Typeset`name$$ = "\"untitled\"", 
                   Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1887$$], \
-0.5, "min"}, -1, 1}, {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1888$$], 
                    0.5, "max"}, -1, 1}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                   Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = 
                   False, Typeset`skipInitDone$$ = False, 
                   CalculateUtilities`GraphicsUtilities`Private`more$1420374$$\
 = False, CalculateUtilities`GraphicsUtilities`Private`min1887$1420379$$ = 0, 
                   CalculateUtilities`GraphicsUtilities`Private`max1888$\
1420380$$ = 0}, 
                  DynamicBox[
                   Manipulate`ManipulateBoxes[
                   2, TraditionalForm, 
                    "Variables" :> {
                    CalculateUtilities`GraphicsUtilities`Private`max1888$$ = 
                    0.5, CalculateUtilities`GraphicsUtilities`Private`min1887$\
$ = -0.5, CalculateUtilities`GraphicsUtilities`Private`more$$ = False}, 
                    "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$1420374$\
$, False], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`min1887$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1887$\
1420379$$, 0], 
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`max1888$$, 
                    CalculateUtilities`GraphicsUtilities`Private`max1888$\
1420380$$, 0]}, "OtherVariables" :> {
                    Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> Quiet[
                    Function[Null, 
                    CalculateUtilities`GraphicsUtilities`Private`post$1420355[
                    Plot[
                    SlotSequence[1], AspectRatio -> If[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`aspect], 
                    Automatic, 1/GoldenRatio]]], HoldAll][{
                    Rational[1, 2] Erfc[(-2^Rational[-1, 2]) $CellContext`x], 
                    Rational[1, 2] 
                    Erfc[(-1.5811388300841895`) $CellContext`x], 
                    Rational[1, 2] 
                    Erfc[0.31622776601683794` (
                    1 - $CellContext`x)]}, {$CellContext`x, 
                    If[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1887$$], 
                    (
                    Piecewise[{{
                    1. + 7.171371656006362 Tan[1.5040801783846716` #], # < 
                    0}}, 1. + 
                    7.171371656006362 Tan[1.5040801783846716` #]]& )[
                    CalculateUtilities`GraphicsUtilities`Private`min1887$$], \
-5.70820393249937], 
                    If[
                    And[
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`min1887$$], 
                    NumericQ[
                    CalculateUtilities`GraphicsUtilities`Private`max1888$$]], 
                    (
                    Piecewise[{{
                    1. + 7.171371656006362 Tan[1.5040801783846716` #], # < 
                    0}}, 1. + 7.171371656006362 Tan[1.5040801783846716` #]]& )[
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`min1887$$ == 
                    CalculateUtilities`GraphicsUtilities`Private`max1888$$, 
                    CalculateUtilities`GraphicsUtilities`Private`min1887$$ + 
                    0.013416407864998741`, 
                    CalculateUtilities`GraphicsUtilities`Private`max1888$$]], 
                    7.70820393249937]}, Axes -> None, BaseStyle -> 
                    AbsoluteThickness[1], Exclusions -> None, Filling -> 
                    Bottom, FillingStyle -> Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], Frame -> True, FrameLabel -> None, 
                    FrameStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1], FrameTicks -> Automatic, ImageSize -> 
                    220., PlotRange -> All, PlotRangePadding -> {{0, 0}, {0, 
                    Scaled[0.1]}}, PerformanceGoal -> "Quality"]], 
                    "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> None}, {{
                    CalculateUtilities`GraphicsUtilities`Private`min1887$$, \
-0.5, "min"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 1}, {{
                    CalculateUtilities`GraphicsUtilities`Private`max1888$$, 
                    0.5, "max"}, -1, 1, ImageSize -> Tiny, ControlPlacement -> 
                    2}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Grid[{{
                    Manipulate`Place[1], 
                    Manipulate`Place[2]}}]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                    "Options" :> {
                    ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                    "DefaultOptions" :> {}], SingleEvaluation -> True], 
                  Initialization :> ({
                    ReleaseHold[
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`res, 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat}, 
                    CalculateUtilities`GraphicsUtilities`Private`res = 
                    ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    Replace[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, $CellContext`UnitNumberForm, 
                    NumberForm] -> (#& )], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, {
                    PatternTest[
                    BlankSequence[], NumberQ]}] :> 
                    Thread[{CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`t}]], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; If[
                    MatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    Condition[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`quants, {
                    Alternatives[
                    BlankSequence[$CellContext`ShortQuantity], 
                    BlankSequence[Quantity]]}], Length[
                    Union[
                    
                    Map[$CellContext`UnitObjectPart, 
                    CalculateUtilities`GraphicsUtilities`Private`quants]]] == 
                    1]], CalculateUtilities`GraphicsUtilities`Private`\
unitformat = $CellContext`ToCDFQuantityFunction[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 2]]; 
                    CalculateUtilities`GraphicsUtilities`Private`unitformat -> 
                    Thread[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 1], 
                    $CellContext`QuantityPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, All, 2], 
                    $CellContext`UnitObjectPart[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`res, 1, 
                    2]]]}], 
                    CalculateUtilities`GraphicsUtilities`Private`res]]; 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`post$1420355]\
 = {"ReturnInteractiveTypes" -> False, "Nearest" -> Automatic}; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1420355[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[Graphics]], 
                    OptionsPattern[]] := Check[
                    
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`lines, 
                    CalculateUtilities`GraphicsUtilities`Private`pts, 
                    CalculateUtilities`GraphicsUtilities`Private`gg, 
                    CalculateUtilities`GraphicsUtilities`Private`type, 
                    CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    CalculateUtilities`GraphicsUtilities`Private`range, 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
                     CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = OptionValue["Nearest"]}, 
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog = 
                    Replace[
                    ReplaceAll[Epilog, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Epilog -> Sequence[]]; Switch[
                    ReplaceAll[{Frame, Axes}, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]], {True, 
                    Blank[]}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Frame; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    ReplaceAll[FrameTicks, 
                    Options[
                    CalculateUtilities`GraphicsUtilities`Private`g]]], {
                    Blank[], True}, 
                    CalculateUtilities`GraphicsUtilities`Private`type = 
                    Axes; {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l} = 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    ReplaceAll[Ticks, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]], 
                    Blank[], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    And[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    Frame, 
                    Or[
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`t === None, 
                    CalculateUtilities`GraphicsUtilities`Private`b === 
                    CalculateUtilities`GraphicsUtilities`Private`t]], 
                    Not[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`r === None, 
                    CalculateUtilities`GraphicsUtilities`Private`l === 
                    CalculateUtilities`GraphicsUtilities`Private`r]]]], 
                    CalculateUtilities`GraphicsUtilities`Private`type = None]; 
                    If[
                    TrueQ[
                    OptionValue["ReturnInteractiveTypes"]], 
                    Which[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], {}, 
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], {}, True, {
                    "Tooltips", "Coordinates"}], If[
                    FreeQ[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Alternatives[Line, Point]], 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gg = 
                    Normal[CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = 
                    Partition[
                    Flatten[
                    Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Point[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    Infinity]], 2]; 
                    If[Length[
                    CalculateUtilities`GraphicsUtilities`Private`pts] < 2, 
                    CalculateUtilities`GraphicsUtilities`Private`lines = Cases[
                    Part[CalculateUtilities`GraphicsUtilities`Private`gg, 1], 
                    Blank[Line], Infinity]; 
                    If[CalculateUtilities`GraphicsUtilities`Private`lines === \
{}, 
                    Return[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`pts = Flatten[
                    Cases[
                    CalculateUtilities`GraphicsUtilities`Private`lines, Line[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`a, Infinity],
                     1]; If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, If[
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[
                    CalculateUtilities`GraphicsUtilities`Private`lines], 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "1D", CalculateUtilities`GraphicsUtilities`Private`\
neareststyle = "2D"]; Null], 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    Automatic, 
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle = 
                    "2D"]]; 
                    CalculateUtilities`GraphicsUtilities`Private`range = 
                    Replace[
                    ReplaceAll[PlotRange, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]], 
                    Except[{{
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}, {
                    PatternTest[
                    Blank[], NumberQ], 
                    PatternTest[
                    Blank[], NumberQ]}}] :> {
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]], 
                    Through[
                    {Min, Max}[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]]}]; CalculateUtilities`GraphicsUtilities`Private`b = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`b, 
                    First[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    1]]; CalculateUtilities`GraphicsUtilities`Private`l = 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 
                    2]]; CalculateUtilities`GraphicsUtilities`Private`\
oldgridlines = ReplaceAll[GridLines, 
                    Options[CalculateUtilities`GraphicsUtilities`Private`g]]; 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines = 
                    With[{CalculateUtilities`GraphicsUtilities`Private`gray = 
                    GrayLevel[0.7]}, 
                    Replace[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines,\
 {Pattern[CalculateUtilities`GraphicsUtilities`Private`a, {
                    Blank[List], 
                    Blank[List]}] :> Dynamic[
                    Join[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]], {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Blank[List]], Automatic} :> 
                    With[{CalculateUtilities`GraphicsUtilities`Private`\
divisions = {CalculateUtilities`GraphicsUtilities`Private`a, 
                    FindDivisions[
                    Last[CalculateUtilities`GraphicsUtilities`Private`range], 
                    7]}}, 
                    Dynamic[
                    Join[
                    CalculateUtilities`GraphicsUtilities`Private`divisions, 
                    Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}}}], 
                    2]]], Blank[] -> Dynamic[
                    
                    Map[{{#, 
                    CalculateUtilities`GraphicsUtilities`Private`gray}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]]}]]; If[
                    Or[
                    CalculateUtilities`GraphicsUtilities`Private`type === 
                    None, CalculateUtilities`GraphicsUtilities`Private`b === 
                    None, CalculateUtilities`GraphicsUtilities`Private`l === 
                    None], 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`neareststyle === 
                    "1D", 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Part[
                    CalculateUtilities`GraphicsUtilities`Private`pts, All, 1] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts]}, 
                    CalculateUtilities`GraphicsUtilities`Private`n[
                    Part[#, 1]]& ], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`n = 
                    Nearest[Transpose[Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`pts]/Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]] -> 
                    CalculateUtilities`GraphicsUtilities`Private`pts], 
                    CalculateUtilities`GraphicsUtilities`Private`scale = Abs[
                    Apply[
                    Subtract, 
                    CalculateUtilities`GraphicsUtilities`Private`range, {
                    1}]]}, CalculateUtilities`GraphicsUtilities`Private`n[#/
                    CalculateUtilities`GraphicsUtilities`Private`scale]& ]], 
                    CalculateUtilities`GraphicsUtilities`Private`left = 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`bottom = 
                    CalculateUtilities`GraphicsUtilities`Private`b}, 
                    Show[
                    CalculateUtilities`GraphicsUtilities`Private`g, GridLines -> 
                    CalculateUtilities`GraphicsUtilities`Private`gridlines, 
                    If[
                    MatchQ[
                    CalculateUtilities`GraphicsUtilities`Private`oldgridlines, 
                    Alternatives[None, GridLines]], 
                    Method -> {"GridLinesInFront" -> True}, 
                    Apply[Sequence, {}]], 
                    Epilog -> {
                    CalculateUtilities`GraphicsUtilities`Private`oldepilog, 
                    Dynamic[
                    
                    DynamicModule[{
                    CalculateUtilities`GraphicsUtilities`Private`pt = 
                    CalculateUtilities`GraphicsUtilities`Private`nf[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                    If[
                    CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    CalculateUtilities`GraphicsUtilities`Private`bottom[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    CalculateUtilities`GraphicsUtilities`Private`left[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[Part[
                    CalculateUtilities`GraphicsUtilities`Private`scaled, 1] - 
                    0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[
                    CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]\
, CalculateUtilities`GraphicsUtilities`Private`g]; 
                    CalculateUtilities`GraphicsUtilities`Private`post$1420355[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`g, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`g; 
                    CalculateUtilities`GraphicsUtilities`Private`orderedLines[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    BlankSequence[Line]]}] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`ordered, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals}, 
                    CalculateUtilities`GraphicsUtilities`Private`ordered = 
                    Apply[And, 
                    Map[OrderedQ[
                    Part[#, 1, All, 1]]& , 
                    Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]; If[
                    Not[
                    TrueQ[
                    CalculateUtilities`GraphicsUtilities`Private`ordered]], 
                    Return[False]]; 
                    CalculateUtilities`GraphicsUtilities`Private`intervals = 
                    Part[{CalculateUtilities`GraphicsUtilities`Private`l}, 
                    All, 1, {1, -1}, 1]; Length[
                    Apply[
                    Interval, 
                    CalculateUtilities`GraphicsUtilities`Private`intervals]] === 
                    Length[CalculateUtilities`GraphicsUtilities`Private`\
intervals]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Alternatives[Automatic, FrameTicks]] = {
                    Identity, Identity, Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, {{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`l, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`r, 
                    Blank[]]}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`t, 
                    Blank[]]}}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`b, 
                    CalculateUtilities`GraphicsUtilities`Private`l, 
                    CalculateUtilities`GraphicsUtilities`Private`t, 
                    CalculateUtilities`GraphicsUtilities`Private`r}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Frame, 
                    Blank[]] = {None, None, None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Alternatives[Automatic, Ticks]] = {Identity, Identity}; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`h, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`v, 
                    Blank[]]}] := 
                    Map[CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction, {CalculateUtilities`GraphicsUtilities`Private`h, 
                    CalculateUtilities`GraphicsUtilities`Private`v}]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
ScaleCoordinatesToTicks[Axes, 
                    Blank[]] = {None, None}; 
                    CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := ReplaceAll[
                    ReplaceAll[
                    Part[
                    DeleteCases[
                    ReplaceAll[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Alternatives[Style, NumberForm] -> (#& )], {
                    Blank[], "", 
                    BlankNullSequence[]}], All, 
                    Span[1, 2]], Superscript[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`b, 
                    Blank[Integer]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`p, 
                    Blank[Integer]]] :> 
                    CalculateUtilities`GraphicsUtilities`Private`b^
                    CalculateUtilities`GraphicsUtilities`Private`p], Row[{
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`a, 
                    BlankSequence[]]}, "\[Times]"] :> 
                    Times[CalculateUtilities`GraphicsUtilities`Private`a]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$, 
                    Blank[]]] := 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[
                    CalculateUtilities`GraphicsUtilities`Private`ticks$]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[None] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[False] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[True] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[Automatic] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
TicksToFunction[All] = Identity; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`func, 
                    Blank[]] -> 
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    Blank[]]] := Replace[
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`f, 
                    Except[None]] :> 
                    Composition[
                    CalculateUtilities`GraphicsUtilities`Private`func, 
                    CalculateUtilities`GraphicsUtilities`Private`f]]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[{}] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    Blank[Integer], 
                    Blank[String]}]}]] := Which[
                    Quiet[
                    MatchQ[
                    Apply[SameQ, 
                    Map[Part[
                    DateList[#], 
                    Span[2, All]]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    2}], {1}], {
                    Repeated[True]}]], DateString, 
                    Apply[And, 
                    StringMatchQ[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2], NumberString]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Transpose[{
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    1], 
                    ToExpression[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, All, 
                    2]]}]], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Pattern[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {
                    Repeated[{
                    PatternTest[
                    Blank[], NumericQ], 
                    PatternTest[
                    Blank[], NumericQ]}]}]] := Which[
                    MatchQ[
                    Apply[
                    Equal, CalculateUtilities`GraphicsUtilities`Private`ticks,\
 {1}], {
                    Repeated[True]}], Identity, 
                    MatchQ[
                    
                    Apply[# == Log[#2]& , 
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {1}], {
                    Repeated[True]}], Exp, 
                    TrueQ[
                    Quiet[
                    Apply[Equal, 
                    Apply[Divide, Transpose[
                    Rest[CalculateUtilities`GraphicsUtilities`Private`ticks]] - 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1]]]]], 
                    
                    With[{CalculateUtilities`GraphicsUtilities`Private`slope = 
                    Apply[Divide, 
                    Apply[Subtract, 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, {-1, 
                    1}]]]}, 
                    SetPrecision[(# - Part[
                    CalculateUtilities`GraphicsUtilities`Private`ticks, 1, 
                    1])/CalculateUtilities`GraphicsUtilities`Private`slope + 
                    Part[CalculateUtilities`GraphicsUtilities`Private`ticks, 
                    1, 2], 3]& ], True, None]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
iTicksToFunction[
                    Blank[]] = None; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`type, 
                    Blank[]], 
                    BlankNullSequence[]] := 
                    CalculateUtilities`GraphicsUtilities`Private`type; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Identity, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`nf = 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm, 
                    CalculateUtilities`GraphicsUtilities`Private`acc = 
                    Floor[Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3] - RealExponent[
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]]]}, 
                    CalculateUtilities`GraphicsUtilities`Private`nf[#, 
                    CalculateUtilities`GraphicsUtilities`Private`acc]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[Exp, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Blank[]] := 
                    With[{CalculateUtilities`GraphicsUtilities`Private`prec = 
                    Max[
                    Ceiling[
                    FullSimplify[Log[10, 
                    Max[
                    
                    Abs[{CalculateUtilities`GraphicsUtilities`Private`min, 
                    CalculateUtilities`GraphicsUtilities`Private`max}]]] - 
                    Log[10, (CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/100]]], 
                    3]}, Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[
                    Exp[#], 
                    CalculateUtilities`GraphicsUtilities`Private`prec]]]]& ]; 
                    CalculateUtilities`GraphicsUtilities`Private`\
RefineCoordinateFunction[DateString, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`min, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`max, 
                    Blank[]]}, 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`pts, 
                    Blank[]]] := 
                    Module[{
                    CalculateUtilities`GraphicsUtilities`Private`dates, 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    CalculateUtilities`GraphicsUtilities`Private`dates = 
                    Map[DateList, 
                    CalculateUtilities`GraphicsUtilities`Private`pts]; 
                    CalculateUtilities`GraphicsUtilities`Private`spec = Switch[
                    Map[Length, 
                    Map[Union, 
                    Transpose[
                    CalculateUtilities`GraphicsUtilities`Private`dates]]], {
                    Blank[], 1, 1, 
                    BlankSequence[]}, {"Year"}, {
                    Blank[], 
                    Blank[], 1, 
                    BlankSequence[]}, {"MonthNameShort", " ", "Year"}, 
                    Blank[], {
                    "DayShort", " ", "MonthNameShort", " ", "Year"}]; 
                    If[(CalculateUtilities`GraphicsUtilities`Private`max - 
                    CalculateUtilities`GraphicsUtilities`Private`min)/
                    31536000 > 25, 
                    CalculateUtilities`GraphicsUtilities`Private`spec = {
                    "Year"}]; 
                    With[{CalculateUtilities`GraphicsUtilities`Private`s = 
                    CalculateUtilities`GraphicsUtilities`Private`spec}, 
                    DateString[#, 
                    CalculateUtilities`GraphicsUtilities`Private`s]& ]]; 
                    CalculateUtilities`GraphicsUtilities`Private`numberForm = 
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]]]], 
                    ReleaseHold[
                    Uncompress[
                    "6:eJztVm1v0zAQbikw3t/+ARKfEesmviHBOjYmDShJ+\
d5b4iQWrh1sZxv8efDZTdKsXaWYDtCUfjjVl+bx3XPPXe/5iQiSfq/XUzeN+\
SBYnGzh6ZkxIzHLRcHj9+e5JEpRwZMb+OyeMSHR+4TBDxI7321jDoScgXbnN/g+\
sKhgoMlXTRnVlKjpoYQ8o5GqPWNJT81PpkxEwOhP8mJ7d/hq5/\
XQwWAsY9CaSK522kLmmQRFkh4C3TJmjwH/5o5Py+OngrGQfC8Ij4h6bLwTCbGBERwY5uN96/\
Vm6gEmpoHHIOMrp8nKc9T2AqUl5emEzHJ843KyttsCg0yV4+Zhyc06Bbnw7+ADEdqYnMcmbc+\
WQL8wrhl9F2X1z7kb4PltW3gpzlYTh/m9Y8gbaHpK1DKdL1vXyTFSda2Nfs7VVc2XjQZ5+ZSp/\
5eOqdLLYQzbhkFmJ6bGq7W3DL/\
bFl7k2PVzcT8y5rNzlICrhkMluI8iLtg8imbKAyfR9umq3Dgcxv2K7xCdPhWscAITZ9kvtj+\
eVOD1phBi7aYbkA6vZ0BAcmJcseV2n6ZUjzKQEBng+\
XX9sskmog7F4872tac8pmaAOULWLU9ojpKFuoOOsi9/VNxKLheaDHk/4pqkRK4V/\
V2sjzTk8ngiPCMJ8YKmXr05rJIag/SW/aAECXPgFCHpL/Ox39zDxUogVYcS1SUdiwNbmnP/\
JPplgY8JT3XW3LE9R5d322I2gTirVRfQJFmcNptjut9kunFDc6D7kuBbEv+\
B3m0K3abwVzeFpT24WxO6NaFbE7o1oVsT/t81wUaM/0q/AZuXuC4="]]}; 
                   Typeset`initDone$$ = True), DynamicModuleValues :> {}, 
                  Deinitialization :> None, 
                  UntrackedVariables :> {Typeset`size$$}, 
                  SynchronousInitialization -> True, 
                  UnsavedVariables :> {Typeset`initDone$$}, 
                  UndoTrackedVariables :> {
                   Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
                 Deployed -> True, StripOnInput -> False], TraditionalForm], 
               Manipulate`InterpretManipulate[1]], 
              TagBox[
               GridBox[{{
                  GraphicsBox[{
                    RGBColor[0.24720000000000014`, 0.24, 0.6], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   StyleBox[
                    RowBox[{
                    RowBox[{"\[Mu]", "\[LongEqual]", "0"}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    RowBox[{"\[Sigma]", "\[LongEqual]", "1"}]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                  GraphicsBox[{
                    RGBColor[0.6, 0.24, 0.4428931686004542], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   StyleBox[
                    RowBox[{
                    RowBox[{"\[Mu]", "\[LongEqual]", "0"}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    
                    RowBox[{
                    "\[Sigma]", "\[LongEqual]", "0.4472135954999579`"}]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, {
                  GraphicsBox[{
                    RGBColor[0.6, 0.5470136627990908, 0.24], {
                    AbsoluteThickness[2], 
                    LineBox[{{0, 0}, {1, 0}}]}}, ImageSize -> NCache[
                    Rational[143, 10], 14.3], 
                   BaselinePosition -> (Center -> Center)], 
                  StyleBox[
                   StyleBox[
                    RowBox[{
                    RowBox[{"\[Mu]", "\[LongEqual]", "1"}], 
                    StyleBox[
                    RowBox[{"\[NoBreak]", 
                    PaneBox[
                    "\"  |  \"", BaselinePosition -> Baseline, BaseStyle -> 
                    GrayLevel[0.6]]}], AutoSpacing -> True], 
                    
                    RowBox[{
                    "\[Sigma]", "\[LongEqual]", "2.23606797749979`"}]}], 
                    LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 
                    0], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.3}}, "Rows" -> {{0.3}}}],
                "Grid"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Right", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Percentiles", "scanner" -> "Statistics", "id" -> 
     "Percentiles", "position" -> "700", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   FormBox[
                    TagBox[
                    SuperscriptBox["10", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"10", "\"th\""}]]], 
                    TraditionalForm], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  RowBox[{"\[Mu]", "-", 
                    RowBox[{"1.2815515655446001`", " ", "\[Sigma]"}]}], 
                  Identity]}, {
                 TagBox[
                  PaneBox[
                   FormBox[
                    TagBox[
                    SuperscriptBox["25", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"25", "\"th\""}]]], 
                    TraditionalForm], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  RowBox[{"\[Mu]", "-", 
                    RowBox[{"0.6744897501960818`", " ", "\[Sigma]"}]}], 
                  Identity]}, {
                 TagBox[
                  PaneBox[
                   FormBox[
                    TagBox[
                    SuperscriptBox["50", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"50", "\"th\""}]]], 
                    TraditionalForm], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "\[Mu]"}, {
                 TagBox[
                  PaneBox[
                   FormBox[
                    TagBox[
                    SuperscriptBox["75", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"75", "\"th\""}]]], 
                    TraditionalForm], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  RowBox[{"\[Mu]", "+", 
                    RowBox[{"0.6744897501960818`", " ", "\[Sigma]"}]}], 
                  Identity]}, {
                 TagBox[
                  PaneBox[
                   FormBox[
                    TagBox[
                    SuperscriptBox["90", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"90", "\"th\""}]]], 
                    TraditionalForm], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 TagBox[
                  RowBox[{"\[Mu]", "+", 
                    RowBox[{"1.2815515655446001`", " ", "\[Sigma]"}]}], 
                  Identity]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {"name" -> "More", "input" -> "Percentiles__More"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show formulas", "input" -> 
         "Percentiles__Show formulas"}, {}]}]}], Typeset`aux1$$ = {
   True, False, {False}, True}, Typeset`aux2$$ = {True, False, {False}, True},
    Typeset`aux3$$ = {True, False, {False}, True}, Typeset`aux4$$ = {
   True, False, {False}, True}, Typeset`aux5$$ = {True, False, {False}, True},
    Typeset`aux6$$ = {True, False, {False}, True}, Typeset`aux7$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "Gaussian", "template" -> 
        "Assuming \"${word}\" is ${desc1}. Use as ${desc2} instead", "count" -> 
        "4"}, {
        XMLElement[
        "value", {
         "name" -> "ProbabilityDistribution", "desc" -> 
          "a probability distribution", "input" -> 
          "*C.Gaussian-_*ProbabilityDistribution-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Unit", "desc" -> "a unit", "input" -> 
          "*C.Gaussian-_*Unit-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "*C.Gaussian-_*Word-"}, {}], 
        XMLElement[
        "value", {
         "name" -> "FutureTopic", "desc" -> "a computer software topic", 
          "input" -> "*C.Gaussian-_*FutureTopic-"}, {}]}]}], 
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "Gaussian", "score" -> "0.5", "level" -> "medium"}, {"\n   ", 
        XMLElement[
        "alternative", {
         "score" -> "0.35873214285714283", "level" -> "medium"}, {"bracket"}],
         "\n  "}]}]}, Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[
   True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "7", "datatypes" -> 
    "", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.02", 
    "parsetiming" -> "0.081", "parsetimedout" -> "false", "recalculate" -> "",
     "id" -> "MSP47318id14806fc0di5200001c0f88h6ea5cbia8", "host" -> 
    "https://www4d.wolframalpha.com", "server" -> "37", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2020, 11, 6, 14, 42, 56.3734868`9.503649733952125}, "Line" -> 
    264, "SessionID" -> 20457053795916895145}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, 
   Typeset`open$$ = False, Typeset`newq$$ = "Gaussian bracket"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1095., {364.42857142857144`, 369.57142857142856`}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.813633776449486*^9},ExpressionUUID->"0cd6084b-7b0c-426a-911e-\
8634d3ca69ac"]
}, Open  ]]
}, Open  ]],

Cell["", "Subsubsection",ExpressionUUID->"4d2ede1b-df0c-44c4-a12d-8a86d4985f4d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowToolbars->"EditBar",
WindowSize->{1172.5714285714284`, 720.},
WindowMargins->{{
  Automatic, -5.14285714285711}, {-5.14285714285711, Automatic}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, 
  "SlideshowSettings" -> {"Toolbar" -> True}, "TryRealOnly" -> False},
InputAliases->{
 "on" -> "\[CenterDot]", "tp" -> "\[CircleTimes]", "op" -> 
  OverscriptBox["\[Placeholder]", "^"], "her" -> SuperscriptBox[
    RowBox[{"(", "\[Placeholder]", ")"}], "\[Dagger]"], "con" -> 
  SuperscriptBox[
    RowBox[{"(", "\[Placeholder]", ")"}], "*"], "comm" -> TagBox[
    SubscriptBox[
     RowBox[{"\[LeftDoubleBracket]", 
       TagBox[
        RowBox[{"\[Placeholder]", ",", "\[Placeholder]"}], 
        Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True], 
       "\[RightDoubleBracket]"}], "-"], Quantum`Notation`zz050Commutator, 
    Editable -> False, Selectable -> False], "anti" -> TagBox[
    SubscriptBox[
     RowBox[{"\[LeftDoubleBracket]", 
       TagBox[
        RowBox[{"\[Placeholder]", ",", "\[Placeholder]"}], 
        Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True], 
       "\[RightDoubleBracket]"}], "+"], Quantum`Notation`zz050AntiCommutator, 
    Editable -> False, Selectable -> False], "ket" -> TagBox[
    RowBox[{"\[VerticalSeparator]", 
      TagBox[
      "\[Placeholder]", Quantum`Notation`zz080KetArgs, Editable -> True, 
       Selectable -> True, BaseStyle -> {ShowSyntaxStyles -> True}], 
      "\[RightAngleBracket]"}], Quantum`Notation`zz080Ket, Editable -> False, 
    Selectable -> False, BaseStyle -> {ShowSyntaxStyles -> False}], "ev" -> 
  SubscriptBox["\[Placeholder]", 
    OverscriptBox["\[Placeholder]", "^"]], "eval" -> 
  SubscriptBox["\[Placeholder]", 
    OverscriptBox["\[Placeholder]", "^"]], "eket" -> TagBox[
    RowBox[{"\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[RightAngleBracket]"}], 
    Quantum`Notation`zz080Ket, Editable -> False, Selectable -> False, 
    BaseStyle -> {ShowSyntaxStyles -> False}], "eeket" -> TagBox[
    RowBox[{"\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[RightAngleBracket]"}], 
    Quantum`Notation`zz080Ket, Editable -> False, Selectable -> False, 
    BaseStyle -> {ShowSyntaxStyles -> False}], "eeeket" -> TagBox[
    RowBox[{"\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[RightAngleBracket]"}], 
    Quantum`Notation`zz080Ket, Editable -> False, Selectable -> False, 
    BaseStyle -> {ShowSyntaxStyles -> False}], "braket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
      "\[Placeholder]", Quantum`Notation`zz080BraArgs, Editable -> True, 
       Selectable -> True, BaseStyle -> {ShowSyntaxStyles -> True}], 
      "\[VerticalSeparator]", 
      TagBox[
      "\[Placeholder]", Quantum`Notation`zz080KetArgs, Editable -> True, 
       Selectable -> True, BaseStyle -> {ShowSyntaxStyles -> True}], 
      "\[RightAngleBracket]"}], Quantum`Notation`zz080BraKet, Editable -> 
    False, Selectable -> False, BaseStyle -> {ShowSyntaxStyles -> False}], 
  "ebraket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[RightAngleBracket]"}], 
    Quantum`Notation`zz080BraKet, Editable -> False, Selectable -> False, 
    BaseStyle -> {ShowSyntaxStyles -> False}], "eebraket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[RightAngleBracket]"}], 
    Quantum`Notation`zz080BraKet, Editable -> False, Selectable -> False, 
    BaseStyle -> {ShowSyntaxStyles -> False}], "eeebraket" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[VerticalSeparator]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[RightAngleBracket]"}], 
    Quantum`Notation`zz080BraKet, Editable -> False, Selectable -> False, 
    BaseStyle -> {ShowSyntaxStyles -> False}], "bra" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
      "\[Placeholder]", Quantum`Notation`zz080BraArgs, Editable -> True, 
       Selectable -> True, BaseStyle -> {ShowSyntaxStyles -> True}], 
      "\[VerticalSeparator]"}], Quantum`Notation`zz080Bra, Editable -> False, 
    Selectable -> False, BaseStyle -> {ShowSyntaxStyles -> False}], "ebra" -> 
  TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[VerticalSeparator]"}], 
    Quantum`Notation`zz080Bra, Editable -> False, Selectable -> False, 
    BaseStyle -> {ShowSyntaxStyles -> False}], "eebra" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[VerticalSeparator]"}], 
    Quantum`Notation`zz080Bra, Editable -> False, Selectable -> False, 
    BaseStyle -> {ShowSyntaxStyles -> False}], "eeebra" -> TagBox[
    RowBox[{"\[LeftAngleBracket]", 
      TagBox[
       RowBox[{
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], ",", 
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]]}], 
       Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True, 
       BaseStyle -> {ShowSyntaxStyles -> True}], "\[VerticalSeparator]"}], 
    Quantum`Notation`zz080Bra, Editable -> False, Selectable -> False, 
    BaseStyle -> {ShowSyntaxStyles -> False}], "norm" -> 
  RowBox[{"\[LeftDoubleBracketingBar]", "\[Placeholder]", 
     "\[RightDoubleBracketingBar]"}], "trace" -> RowBox[{
     SubscriptBox["Tr", 
      OverscriptBox["\[Placeholder]", "^"]], "[", "\[Placeholder]", "]"}], 
  "ketbra" -> RowBox[{
     TagBox[
      RowBox[{"\[VerticalSeparator]", 
        TagBox[
        "\[Placeholder]", Quantum`Notation`zz080KetArgs, Editable -> True, 
         Selectable -> True, BaseStyle -> {ShowSyntaxStyles -> True}], 
        "\[RightAngleBracket]"}], Quantum`Notation`zz080Ket, Editable -> 
      False, Selectable -> False, BaseStyle -> {ShowSyntaxStyles -> False}], 
     "\[CenterDot]", 
     TagBox[
      RowBox[{"\[LeftAngleBracket]", 
        TagBox[
        "\[Placeholder]", Quantum`Notation`zz080BraArgs, Editable -> True, 
         Selectable -> True, BaseStyle -> {ShowSyntaxStyles -> True}], 
        "\[VerticalSeparator]"}], Quantum`Notation`zz080Bra, Editable -> 
      False, Selectable -> False, BaseStyle -> {ShowSyntaxStyles -> False}]}],
   "eketbra" -> RowBox[{
     TagBox[
      RowBox[{"\[VerticalSeparator]", 
        TagBox[
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], 
         Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True, 
         BaseStyle -> {ShowSyntaxStyles -> True}], "\[RightAngleBracket]"}], 
      Quantum`Notation`zz080Ket, Editable -> False, Selectable -> False, 
      BaseStyle -> {ShowSyntaxStyles -> False}], "\[CenterDot]", 
     TagBox[
      RowBox[{"\[LeftAngleBracket]", 
        TagBox[
         SubscriptBox["\[Placeholder]", 
          OverscriptBox["\[Placeholder]", "^"]], 
         Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True, 
         BaseStyle -> {ShowSyntaxStyles -> True}], "\[VerticalSeparator]"}], 
      Quantum`Notation`zz080Bra, Editable -> False, Selectable -> False, 
      BaseStyle -> {ShowSyntaxStyles -> False}]}], "eeketbra" -> RowBox[{
     TagBox[
      RowBox[{"\[VerticalSeparator]", 
        TagBox[
         RowBox[{
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]]}], 
         Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True, 
         BaseStyle -> {ShowSyntaxStyles -> True}], "\[RightAngleBracket]"}], 
      Quantum`Notation`zz080Ket, Editable -> False, Selectable -> False, 
      BaseStyle -> {ShowSyntaxStyles -> False}], "\[CenterDot]", 
     TagBox[
      RowBox[{"\[LeftAngleBracket]", 
        TagBox[
         RowBox[{
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]]}], 
         Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True, 
         BaseStyle -> {ShowSyntaxStyles -> True}], "\[VerticalSeparator]"}], 
      Quantum`Notation`zz080Bra, Editable -> False, Selectable -> False, 
      BaseStyle -> {ShowSyntaxStyles -> False}]}], "eeeketbra" -> RowBox[{
     TagBox[
      RowBox[{"\[VerticalSeparator]", 
        TagBox[
         RowBox[{
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]]}], 
         Quantum`Notation`zz080KetArgs, Editable -> True, Selectable -> True, 
         BaseStyle -> {ShowSyntaxStyles -> True}], "\[RightAngleBracket]"}], 
      Quantum`Notation`zz080Ket, Editable -> False, Selectable -> False, 
      BaseStyle -> {ShowSyntaxStyles -> False}], "\[CenterDot]", 
     TagBox[
      RowBox[{"\[LeftAngleBracket]", 
        TagBox[
         RowBox[{
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]], ",", 
           SubscriptBox["\[Placeholder]", 
            OverscriptBox["\[Placeholder]", "^"]]}], 
         Quantum`Notation`zz080BraArgs, Editable -> True, Selectable -> True, 
         BaseStyle -> {ShowSyntaxStyles -> True}], "\[VerticalSeparator]"}], 
      Quantum`Notation`zz080Bra, Editable -> False, Selectable -> False, 
      BaseStyle -> {ShowSyntaxStyles -> False}]}], "su" -> 
  SubscriptBox["\[Placeholder]", "\[Placeholder]"], "po" -> SuperscriptBox[
    RowBox[{"(", "\[Placeholder]", ")"}], "\[Placeholder]"], "pow" -> 
  SuperscriptBox[
    RowBox[{"(", "\[Placeholder]", ")"}], "\[Placeholder]"], "si" -> RowBox[{
     UnderoverscriptBox["\[Sum]", "\[Placeholder]", "\[Placeholder]"], 
     "\[Placeholder]"}], "qs" -> RowBox[{
     UnderoverscriptBox["\[Sum]", "\[Placeholder]", "\[Placeholder]"], 
     "\[Placeholder]"}], "qp" -> TagBox[
    RowBox[{
      UnderoverscriptBox["\[CircleTimes]", 
       TagBox[
       "\[Placeholder]", Quantum`Notation`zz020TPNotationini, Editable -> 
        True, Selectable -> True], 
       TagBox[
       "\[Placeholder]", Quantum`Notation`zz020TPNotationend, Editable -> 
        True, Selectable -> True]], 
      TagBox[
      "\[Placeholder]", Quantum`Notation`zz020TPNotationdat, Editable -> True,
        Selectable -> True]}], Quantum`Notation`zz020TPNotation, Editable -> 
    False, Selectable -> False]},
Magnification:>0.5 Inherited,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (2020\:5e743\:670814\
\:65e5)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"b14e40b4-1755-4d3e-a6d2-e2752812d332"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"6711d535-7ac6-4958-a16a-4f414e8a3e5e",
   CellTags->"SlideShowHeader"],
  Cell[4247, 99, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"3e8bca3b-5411-4731-9b92-f8fe1a75cf74",
   CellTags->"SlideShowHeader"],
  Cell[299203, 5249, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"499da7a9-1c46-4464-9383-27d860e677a4",
   CellTags->"SlideShowHeader"],
  Cell[328116, 6230, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"912d566f-5ded-40d4-90d4-8bbae5d9c780",
   CellTags->"SlideShowHeader"],
  Cell[550566, 10582, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"65d3d185-e8ca-4edc-acb0-0e1ceabaf621",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 834073, 15914}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"6711d535-7ac6-4958-a16a-4f414e8a3e5e",
 CellTags->"SlideShowHeader"],
Cell[705, 26, 559, 7, 73, "Title",ExpressionUUID->"8e22b3fe-7088-45d5-9247-dfd0029c8f55"],
Cell[1267, 35, 226, 3, 36, "Author",ExpressionUUID->"d3310335-3579-42eb-9536-ceba96f01c80"],
Cell[1496, 40, 205, 2, 17, "Department",ExpressionUUID->"4d0b837e-0018-4bef-af16-ac2d611e6121"],
Cell[1704, 44, 175, 2, 36, "Date",ExpressionUUID->"b159d157-e00f-4df9-8940-44ea54e7c182"],
Cell[1882, 48, 1620, 22, 81, "Abstract",ExpressionUUID->"3720d925-35ad-4224-ab33-a0e3dc78ff75"],
Cell[3505, 72, 162, 3, 28, "Input",ExpressionUUID->"24513cd2-61a8-4695-a6b5-261be8d5d4b3"],
Cell[3670, 77, 194, 3, 23, "Item",ExpressionUUID->"4ddeabfe-7450-4eda-a95e-e5fe3e9db514"],
Cell[3867, 82, 343, 12, 135, "Program",ExpressionUUID->"42ed090d-4caf-4a5d-9111-d268c2a06553"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4247, 99, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"3e8bca3b-5411-4731-9b92-f8fe1a75cf74",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[4394, 105, 135, 3, 64, "Section",ExpressionUUID->"9246f05b-2438-4bf4-9595-b69c247e238f"],
Cell[4532, 110, 939, 14, 26, "Text",ExpressionUUID->"4080fc91-7f76-47e7-b442-85ebad27a700"],
Cell[5474, 126, 482, 7, 26, "Text",ExpressionUUID->"5ff775c5-e0dc-4ef3-8bb0-ddc2f4277f78"],
Cell[5959, 135, 12567, 256, 133, "Text",ExpressionUUID->"372df19a-d9b9-4b86-9abd-8eb63966285e"],
Cell[18529, 393, 202, 3, 28, "Input",ExpressionUUID->"1ae30b46-f4bb-4e89-9528-13a85d81e6b6"],
Cell[CellGroupData[{
Cell[18756, 400, 732, 20, 125, "Input",ExpressionUUID->"83fd4e78-dc75-453f-b57a-1fb142fe849e"],
Cell[19491, 422, 249, 4, 28, "Output",ExpressionUUID->"3397ddfc-553e-44a4-b7ce-456623b70c4e"]
}, Open  ]],
Cell[19755, 429, 375, 6, 26, "Text",ExpressionUUID->"86d71ee4-dd76-42f9-93f7-71e8fd537ec4"],
Cell[20133, 437, 11133, 225, 108, "Text",ExpressionUUID->"a795b4f3-f159-4094-8b8e-69c6f19eeebe"],
Cell[31269, 664, 9282, 190, 101, "Text",ExpressionUUID->"7ce1014d-a228-40d2-821b-b84d5164f93a"],
Cell[40554, 856, 559, 15, 93, "Input",ExpressionUUID->"21cfb104-6d51-4768-97b6-e1ca1e4141cc"],
Cell[CellGroupData[{
Cell[41138, 875, 1542, 47, 144, "Input",ExpressionUUID->"4dde7280-7e7b-42f8-97a6-32b58fc1ea9b"],
Cell[42683, 924, 23875, 407, 190, "Output",ExpressionUUID->"c04e1991-fef0-4834-8c90-fde362713118"],
Cell[66561, 1333, 226933, 3749, 410, 90922, 1518, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"0d1160dd-746b-4713-a9b9-f6f1f70d784f"]
}, Open  ]],
Cell[293509, 5085, 569, 10, 26, "Text",ExpressionUUID->"9a34e39a-45d9-410d-9dc9-38bf1bef6194"],
Cell[CellGroupData[{
Cell[294103, 5099, 181, 3, 25, "Subsubsection",ExpressionUUID->"9daac6ed-8216-48f5-b087-f4be75093b18"],
Cell[294287, 5104, 335, 5, 26, "Text",ExpressionUUID->"9487c9cd-636c-4ed3-a302-ef4a4d7ceb90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294659, 5114, 183, 3, 25, "Subsubsection",ExpressionUUID->"f95ca06b-2843-430a-b5d2-651dc2e9502e"],
Cell[294845, 5119, 382, 7, 26, "Text",ExpressionUUID->"4b83c3f7-0e28-48d0-91f1-9579a9eba672"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295264, 5131, 173, 3, 25, "Subsubsection",ExpressionUUID->"3d0f417e-3b08-4baf-b64f-24fbae9121c1"],
Cell[295440, 5136, 279, 4, 26, "Text",ExpressionUUID->"e89cfeef-77c8-414c-90c5-ebc3a2101d35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295756, 5145, 179, 3, 25, "Subsubsection",ExpressionUUID->"12a6288f-7a45-4c6d-96f4-a34ede6c0ed3"],
Cell[295938, 5150, 192, 3, 26, "Text",ExpressionUUID->"e8efaf80-372c-4df8-89af-875a7d583241"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296167, 5158, 211, 4, 25, "Subsubsection",ExpressionUUID->"7a06c659-67fc-42cc-aed7-70a1359ed17f"],
Cell[296381, 5164, 260, 4, 26, "Text",ExpressionUUID->"0af0aaf2-e94b-4812-a89e-f597dada97b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296678, 5173, 252, 4, 25, "Subsubsection",ExpressionUUID->"14d3cd90-7d5f-4c13-aaa2-b416f43a5e37"],
Cell[296933, 5179, 328, 5, 26, "Text",ExpressionUUID->"2e266ede-08fd-4725-a6cc-9676b44d2702"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297298, 5189, 169, 3, 25, "Subsubsection",ExpressionUUID->"15b9a900-4f31-47fa-ad8f-41fc12c82ab3"],
Cell[297470, 5194, 226, 4, 26, "Text",ExpressionUUID->"c475c6d3-4cf2-44b5-a607-4aaf75c04698"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297733, 5203, 191, 3, 25, "Subsubsection",ExpressionUUID->"13c4e8fd-6a3d-4943-8804-d0c908308e25"],
Cell[297927, 5208, 258, 6, 26, "Text",ExpressionUUID->"265210fa-0821-479c-9d13-78b7ed953a4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298222, 5219, 199, 3, 25, "Subsubsection",ExpressionUUID->"cbb08ace-cfe9-4a2b-8c53-281f5eb8ec50"],
Cell[298424, 5224, 206, 3, 26, "Text",ExpressionUUID->"5013a93b-95be-4386-98a6-d29b50a39959"]
}, Open  ]],
Cell[CellGroupData[{
Cell[298667, 5232, 183, 3, 25, "Subsubsection",ExpressionUUID->"454ecb5e-f13f-49b3-8703-252edb019270"],
Cell[298853, 5237, 206, 3, 26, "Text",ExpressionUUID->"6b40b2b4-4351-4f5e-8694-7d2cc24286e0"]
}, Open  ]],
Cell[299074, 5243, 80, 0, 25, "Subsubsection",ExpressionUUID->"e79a81ea-cc7d-4e41-b95c-5b339476f18a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[299203, 5249, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"499da7a9-1c46-4464-9383-27d860e677a4",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[299350, 5255, 242, 4, 64, "Section",ExpressionUUID->"3f32aba9-02b2-4a49-a028-828041b0eb5f"],
Cell[299595, 5261, 214, 4, 26, "Text",ExpressionUUID->"82b005bd-7db6-4c25-9061-f4004600d576"],
Cell[299812, 5267, 1322, 45, 45, "Input",ExpressionUUID->"5a3425ee-de6c-4785-8d02-24d812ba1a0c"],
Cell[CellGroupData[{
Cell[301159, 5316, 290, 8, 24, "Subsubsection",ExpressionUUID->"751e783a-d7d0-480d-9c1d-47406de609de"],
Cell[301452, 5326, 228, 4, 26, "Text",ExpressionUUID->"1db40308-622d-401e-ba13-34479695e595"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301717, 5335, 250, 6, 25, "Subsubsection",ExpressionUUID->"fc3114c2-f563-40dc-bad9-2f4ba196fd0a"],
Cell[301970, 5343, 620, 21, 53, "Input",ExpressionUUID->"90b96385-5c6b-4d82-8118-2614ebf99f50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302627, 5369, 393, 11, 25, "Subsubsection",ExpressionUUID->"a3ee1c6c-e1e8-41e9-b2be-1a3036106332"],
Cell[303023, 5382, 162, 3, 26, "Text",ExpressionUUID->"0cd7fcb3-8167-4fbc-b3fe-cf96ef527b23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[303222, 5390, 275, 5, 25, "Subsubsection",ExpressionUUID->"97b838e4-c1e7-4e5d-9379-3133141bca5a"],
Cell[303500, 5397, 2173, 77, 77, "Input",ExpressionUUID->"69378ce2-8aca-4b26-8b5d-907a4c994d75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[305710, 5479, 224, 4, 25, "Subsubsection",ExpressionUUID->"44f3dd3f-9c3f-41e2-a6cd-094d2b95d2cf"],
Cell[CellGroupData[{
Cell[305959, 5487, 1599, 43, 150, "Input",ExpressionUUID->"8c8cba0b-b76b-40a2-90bc-79f927bce42e"],
Cell[307561, 5532, 1634, 47, 66, "Output",ExpressionUUID->"441b0aec-a6c3-43b4-8d0e-e8183a7e90d7"],
Cell[309198, 5581, 379, 9, 43, "Output",ExpressionUUID->"93ecfed5-1455-4553-b703-d7169b703ff1"],
Cell[309580, 5592, 230, 4, 28, "Output",ExpressionUUID->"7cf830ca-8aae-491c-8013-9874a192c2dd"]
}, Open  ]],
Cell[309825, 5599, 792, 24, 54, "Input",ExpressionUUID->"cdde1287-29e8-4946-8aad-822734505682"]
}, Open  ]],
Cell[CellGroupData[{
Cell[310654, 5628, 219, 4, 25, "Subsubsection",ExpressionUUID->"b56978f9-bb2c-4a92-9175-b661ac54587d"],
Cell[310876, 5634, 1324, 43, 45, "Input",ExpressionUUID->"b0b0a9ce-b6a6-4106-8c81-4ae8bfc44158"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312237, 5682, 377, 10, 24, "Subsubsection",ExpressionUUID->"904507bf-1540-4825-bc93-4fe165ecab39"],
Cell[312617, 5694, 814, 23, 54, "Input",ExpressionUUID->"58eb2086-ba82-4358-b336-dd48ca8b469d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313468, 5722, 195, 3, 25, "Subsubsection",ExpressionUUID->"5cdc56a1-0fc0-4b15-8c90-0933403bc728"],
Cell[313666, 5727, 1692, 54, 38, "Text",ExpressionUUID->"81fa65ae-3eca-4efe-9985-5bbed9c2c80b"],
Cell[315361, 5783, 863, 31, 39, "Text",ExpressionUUID->"93b658fc-fc15-4c89-9205-dedaa5cb0fd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316261, 5819, 170, 3, 25, "Subsubsection",ExpressionUUID->"70865a03-d766-4698-923b-c066b2fe1b3f"],
Cell[316434, 5824, 346, 9, 25, "Text",ExpressionUUID->"a8e74fd0-6e09-43bc-8641-327f350df309"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316817, 5838, 171, 3, 25, "Subsubsection",ExpressionUUID->"97f8cf43-55b8-4512-b7d3-c4202ace1093"],
Cell[316991, 5843, 713, 25, 25, "Text",ExpressionUUID->"4f19c0e9-e4fa-4491-8c5a-b2dbf40912f3"],
Cell[317707, 5870, 775, 27, 26, "Text",ExpressionUUID->"d18f5447-89bb-4f51-bcaa-ffab00059e15"],
Cell[318485, 5899, 1096, 38, 31, "Text",ExpressionUUID->"dcf12b2e-2f6f-4885-b4ae-fa9d02508834"],
Cell[319584, 5939, 418, 13, 25, "Text",ExpressionUUID->"cf09354c-2b50-466e-a70a-bd90f67853b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320039, 5957, 177, 3, 25, "Subsubsection",ExpressionUUID->"3b09d6d2-de6b-4f0d-95c6-76512e7486d8"],
Cell[320219, 5962, 443, 11, 25, "Text",ExpressionUUID->"026547dc-289b-4f5a-9b7e-60fd4176bc35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[320699, 5978, 168, 3, 25, "Subsubsection",ExpressionUUID->"84ce077d-0e5d-4d16-a703-ae93d27cbb79"],
Cell[320870, 5983, 133, 3, 26, "Text",ExpressionUUID->"d20f1ec9-fc0f-4d23-ad77-2611bb1620f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321040, 5991, 177, 3, 25, "Subsubsection",ExpressionUUID->"f36466ee-687d-4792-a74d-756292aec33a"],
Cell[321220, 5996, 416, 13, 25, "Text",ExpressionUUID->"d3eb20f9-944b-4763-93ac-270b2707e1fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321673, 6014, 258, 4, 25, "Subsubsection",ExpressionUUID->"63e7ddf1-ae60-44ae-8501-7fa74b9ff56d"],
Cell[321934, 6020, 288, 8, 25, "Text",ExpressionUUID->"1d0674c2-f648-4123-950b-9ae18c39027b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322259, 6033, 238, 4, 25, "Subsubsection",ExpressionUUID->"dfb9529c-f5e1-4027-9193-eb82d9d9b1ee"],
Cell[322500, 6039, 149, 3, 26, "Text",ExpressionUUID->"b2eccd67-9824-4dcf-a1f7-f8a6d438c070"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322686, 6047, 189, 3, 25, "Subsubsection",ExpressionUUID->"02c3729b-12ab-45e9-b433-dc87e0c1d4c3"],
Cell[322878, 6052, 149, 3, 26, "Text",ExpressionUUID->"c2b06dff-3799-460e-a0bf-3f745a9339ff"]
}, Open  ]],
Cell[323042, 6058, 676, 21, 25, "Subsubsection",ExpressionUUID->"09b69d78-6a56-45c9-8280-f67cd0c09c05"],
Cell[CellGroupData[{
Cell[323743, 6083, 176, 3, 21, "Subsubsection",ExpressionUUID->"06bb7c21-25e6-41ce-813a-5b1e7b2f95db"],
Cell[323922, 6088, 584, 17, 26, "Text",ExpressionUUID->"c818f8e0-b585-4cd1-a2ca-d644b0c8a46e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324543, 6110, 234, 3, 25, "Subsubsection",ExpressionUUID->"03fb17b2-6a4c-442e-afb7-4ea09e68c185"],
Cell[324780, 6115, 238, 4, 26, "Text",ExpressionUUID->"e3a4dc8c-d3a2-4791-8962-429df5db7104"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325055, 6124, 183, 3, 25, "Subsubsection",ExpressionUUID->"30bcf9d7-a431-4597-99b1-1ee4cb05d6f4"],
Cell[325241, 6129, 844, 28, 26, "Text",ExpressionUUID->"742846f8-29a6-42c1-8bd6-e4576264ee4b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326122, 6162, 373, 10, 24, "Subsubsection",ExpressionUUID->"ee568f50-60ca-4959-a7c0-118eb502d0c8"],
Cell[326498, 6174, 523, 14, 26, "Text",ExpressionUUID->"b34fd028-d24f-45be-a9ac-c46a9f8d4a7f"]
}, Open  ]],
Cell[327036, 6191, 331, 9, 25, "Subsubsection",ExpressionUUID->"5f2da83d-de53-487d-8065-9c18ecd73d4b"],
Cell[CellGroupData[{
Cell[327392, 6204, 201, 3, 21, "Subsubsection",ExpressionUUID->"cff1ae45-66ac-45b4-8059-19a55100401a"],
Cell[327596, 6209, 459, 14, 26, "Text",ExpressionUUID->"f3a6aee4-ade5-4cf8-9def-56b385092262"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[328116, 6230, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"912d566f-5ded-40d4-90d4-8bbae5d9c780",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[328263, 6236, 203, 3, 64, "Section",ExpressionUUID->"75c6d346-b3e5-448b-a2fc-34ea44895787"],
Cell[328469, 6241, 927, 28, 40, "Text",ExpressionUUID->"b9c48879-4c24-4256-a44b-120d7e044d20"],
Cell[329399, 6271, 1487, 54, 69, "Text",ExpressionUUID->"8dc44567-9a0b-4072-9689-d4f6034fa911"],
Cell[CellGroupData[{
Cell[330911, 6329, 266, 5, 25, "Subsubsection",ExpressionUUID->"dad37edb-ea48-4e4b-bb5c-4ae089cfb8a3"],
Cell[331180, 6336, 2091, 77, 128, "Text",ExpressionUUID->"2b76fa45-1fc6-4add-83f5-720f666e19fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333308, 6418, 175, 3, 25, "Subsubsection",ExpressionUUID->"d66eee2f-af0f-45ea-9301-fc314a39fa64"],
Cell[333486, 6423, 151, 3, 26, "Text",ExpressionUUID->"2488e498-517d-4b0a-8620-c9a5d0c0d7db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333674, 6431, 246, 4, 25, "Subsubsection",ExpressionUUID->"e4188fac-2990-4ed7-ac5c-943733adc749"],
Cell[333923, 6437, 1423, 51, 69, "Text",ExpressionUUID->"a14aa410-ada8-49c1-82a2-16fb07d11e18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335383, 6493, 408, 11, 26, "Subsubsection",ExpressionUUID->"9438a2d5-f8ec-4326-95fc-5aa381c1d6c1"],
Cell[335794, 6506, 6631, 150, 71, "Text",ExpressionUUID->"72c6072a-57d8-4004-bfa6-2cfb9a884056"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342462, 6661, 427, 11, 24, "Subsubsection",ExpressionUUID->"86217443-beac-40ed-bb4d-72da449eb7b6"],
Cell[342892, 6674, 1892, 67, 68, "Text",ExpressionUUID->"b8a66846-c01a-4a55-8f54-0527de3158ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344821, 6746, 569, 17, 24, "Subsubsection",ExpressionUUID->"6de759aa-1df4-4991-aae9-84feb1e7b393"],
Cell[345393, 6765, 224, 4, 26, "Text",ExpressionUUID->"9789f487-1082-44f2-927f-7084fbbbcd42"]
}, Open  ]],
Cell[CellGroupData[{
Cell[345654, 6774, 632, 17, 28, "Subsubsection",ExpressionUUID->"c24b8508-d6ec-4590-9aa8-84039741e727"],
Cell[346289, 6793, 301, 5, 26, "Text",ExpressionUUID->"914235d5-5833-4370-a36d-23d67bc382ad"],
Cell[346593, 6800, 4539, 111, 50, "Text",ExpressionUUID->"76d9c1eb-12f7-4d37-aab7-6439fe5489ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351169, 6916, 177, 3, 25, "Subsubsection",ExpressionUUID->"6e59e2cf-d8e6-4f66-9ff3-b80a9fd1112b"],
Cell[351349, 6921, 529, 15, 25, "Text",ExpressionUUID->"8054a3af-fc63-473b-bef5-7551ef4999d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351915, 6941, 392, 11, 25, "Subsubsection",ExpressionUUID->"5835f296-bec3-4789-b1bf-817abe73fcf5"],
Cell[352310, 6954, 7252, 199, 186, "Text",ExpressionUUID->"18a5bf90-c35a-4d6a-98b1-b3f0e7a44568"]
}, Open  ]],
Cell[CellGroupData[{
Cell[359599, 7158, 201, 3, 25, "Subsubsection",ExpressionUUID->"23fa8aa4-0a1b-4bbb-a221-b4defe2d6418"],
Cell[359803, 7163, 531, 13, 26, "Text",ExpressionUUID->"812a7357-b97e-4fdd-8655-65d7eb7d0d7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360371, 7181, 195, 3, 25, "Subsubsection",ExpressionUUID->"9f7462e5-c67d-47ef-92b0-b7c2ed716f68"],
Cell[360569, 7186, 428, 11, 29, "Text",ExpressionUUID->"f0cff388-b2c4-4b6f-901e-793828dbb6b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361034, 7202, 218, 4, 25, "Subsubsection",ExpressionUUID->"26dfa8b0-f51e-451b-bf8a-4d6c25284503"],
Cell[361255, 7208, 170, 3, 26, "Text",ExpressionUUID->"d605ccd3-0703-4a85-a328-c960304fde82"],
Cell[361428, 7213, 4368, 122, 117, "Text",ExpressionUUID->"0f7e36e4-c017-4c33-bba7-dbe91b75fad8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365833, 7340, 209, 3, 25, "Subsubsection",ExpressionUUID->"8f8366b4-b0fb-474a-9ec4-d257d27fee76"],
Cell[366045, 7345, 1463, 43, 26, "Text",ExpressionUUID->"6e40ae3b-9598-4bea-8882-5d9d235af8b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[367545, 7393, 163, 3, 25, "Subsubsection",ExpressionUUID->"c69c7033-3720-4f83-9325-eaaf3e8cf573"],
Cell[367711, 7398, 639, 19, 25, "Text",ExpressionUUID->"b8167116-539e-44ae-a494-2869a6709f13"],
Cell[368353, 7419, 197, 3, 28, "Input",ExpressionUUID->"ec1f7b69-bcc4-4f90-b7d0-b7ba845f0792"],
Cell[368553, 7424, 1209, 32, 204, "Input",ExpressionUUID->"842f655a-1369-4b73-8029-34ae0589aff7"],
Cell[CellGroupData[{
Cell[369787, 7460, 5982, 158, 419, "Input",ExpressionUUID->"b44645cb-655c-4717-bcf6-bce6071774cc"],
Cell[375772, 7620, 171127, 2842, 204, 117706, 1966, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6a76aad3-3c96-440f-9744-d63b58e7f113"]
}, Open  ]],
Cell[546914, 10465, 447, 7, 26, "Text",ExpressionUUID->"f2b76767-f766-4366-8c34-6bafcaf947fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547398, 10477, 145, 3, 25, "Subsubsection",ExpressionUUID->"020e7ae9-cc2d-4718-bda6-c632778f3594"],
Cell[547546, 10482, 207, 3, 26, "Text",ExpressionUUID->"92e5b774-78c7-449f-9f8b-43adf9f49f17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[547790, 10490, 177, 3, 25, "Subsubsection",ExpressionUUID->"d7c21379-ccf0-4caa-b776-5e9ae7a614fe"],
Cell[547970, 10495, 566, 14, 27, "Text",ExpressionUUID->"f99a54e0-7281-4130-877a-8ed388f97a5a"],
Cell[548539, 10511, 742, 25, 40, "Text",ExpressionUUID->"8c9401f3-3b85-40b6-90bf-1b4633178cf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549318, 10541, 177, 3, 25, "Subsubsection",ExpressionUUID->"b2ef1328-63a0-40ca-9975-91cae4ee1e47"],
Cell[549498, 10546, 721, 21, 27, "Text",ExpressionUUID->"665525e2-eaac-4db3-8cce-1149d3e3c75a"]
}, Open  ]],
Cell[550234, 10570, 283, 6, 25, "Subsubsection",ExpressionUUID->"d1061fdb-079d-4e1a-a59f-ba89bb9dad9e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[550566, 10582, 122, 2, 1, "SlideShowNavigationBar",ExpressionUUID->"65d3d185-e8ca-4edc-acb0-0e1ceabaf621",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[550713, 10588, 225, 4, 64, "Section",ExpressionUUID->"0077829c-2091-44ce-b6a6-0cce8eb32a7a"],
Cell[CellGroupData[{
Cell[550963, 10596, 892, 26, 140, "Input",ExpressionUUID->"0396040c-19dd-49fa-b47b-140ee3741eec"],
Cell[551858, 10624, 290, 8, 56, "Output",ExpressionUUID->"abd89216-2150-4794-ba30-d6e1bb05ff7b"]
}, Open  ]],
Cell[552163, 10635, 251, 4, 26, "Text",ExpressionUUID->"3263ec58-54a3-465b-87fd-a2f9e5e8d2c1"],
Cell[552417, 10641, 2173, 70, 47, "Text",ExpressionUUID->"1c7f7167-da59-4a2b-b181-eb1e134d89e3"],
Cell[CellGroupData[{
Cell[554615, 10715, 179, 3, 25, "Subsubsection",ExpressionUUID->"d7d1491d-cb2e-4c75-a795-c7f4a72c4bc2"],
Cell[554797, 10720, 3447, 92, 74, "Text",ExpressionUUID->"90f4f2de-eaa9-4c31-b21e-4fa7e037987c"],
Cell[558247, 10814, 973, 33, 29, "Text",ExpressionUUID->"5cf6d8ed-d7e1-42bc-91a9-2f0fbb6b361c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559257, 10852, 190, 3, 33, "Subsection",ExpressionUUID->"c68e7d3e-7b3d-49e9-a60c-c37c9c267bdd"],
Cell[CellGroupData[{
Cell[559472, 10859, 786, 22, 79, "Input",ExpressionUUID->"7b03be9d-6287-415d-85ba-04accbe3ef84"],
Cell[560261, 10883, 179, 3, 28, "Output",ExpressionUUID->"6fcf5694-e0a7-466c-86c6-c8d1756be0f9"],
Cell[560443, 10888, 179, 3, 28, "Output",ExpressionUUID->"c038a7e0-931e-467b-b1e4-cb1b7ddd9b89"],
Cell[560625, 10893, 115025, 1925, 124, "Output",ExpressionUUID->"3c09910d-faac-446e-9a7e-0f9806c40519"]
}, Open  ]],
Cell[675665, 12821, 5261, 106, 49, "Text",ExpressionUUID->"37125360-2825-40b6-b46e-bc9a8d05cd9a"],
Cell[680929, 12929, 6556, 131, 78, "Text",ExpressionUUID->"a348762a-3f7a-4fef-8a9e-a76f866bc6d7"],
Cell[CellGroupData[{
Cell[687510, 13064, 189, 3, 25, "Subsubsection",ExpressionUUID->"be9182db-0123-46b1-8f00-edf73f0ee3ca"],
Cell[687702, 13069, 214, 4, 26, "Text",ExpressionUUID->"6bd84011-b2db-460d-9610-a3cecee12b08"],
Cell[CellGroupData[{
Cell[687941, 13077, 195, 3, 38, "WolframAlphaLong",ExpressionUUID->"0d66cd8e-ab86-4577-8d90-8ee151e37986"],
Cell[688139, 13082, 131134, 2521, 742, "Print",ExpressionUUID->"0cd6084b-7b0c-426a-911e-8634d3ca69ac"]
}, Open  ]]
}, Open  ]],
Cell[819300, 15607, 80, 0, 25, "Subsubsection",ExpressionUUID->"4d2ede1b-df0c-44c4-a12d-8a86d4985f4d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

